{"version":3,"sources":["components/admin/adminIndex/adminSidebar.js","components/base/form/FormFieldInput.js","utils/api.js","utils/validatorRules.js","components/base/form/BaseTableForm.js","components/admin/admin/AdminForm.js","utils/token.js","components/public/Alert.js","utils/request.js","components/base/form/formProps.js","components/table/components/CheckCell.js","components/table/components/DeleteActionCell.js","components/table/EditTable.js","components/admin/admin/adminTable.js","components/admin/film/FilmForm.js","components/admin/film/filmTable.js","components/admin/order/OrderForm.js","components/admin/order/orderTable.js","utils/timeFormat.js","components/admin/tables/sessionTable.js","components/admin/user/UserForm.js","components/admin/user/userTable.js","components/admin/cinema/CinemaForm.js","components/admin/cinema/cinemaTable.js","components/admin/tables/commentTable.js","components/admin/adminIndex/adminIndex.js","redux/user.js","components/user/login/loginForm.js","components/user/login/login.js","components/user/register/registerForm.js","components/user/register/register.js","components/public/TopMenu.js","utils/placeHolder.js","components/index/IndexBody.js","components/film/sessionInfo.js","components/film/FilmDetail.js","components/public/SegmentInfo.js","components/user/profile/profile.js","components/session/sessionDetail.js","utils/history.js","Route/PrivateRoute.js","components/index/index.js","redux/rootReducer.js","serviceWorker.js","index.js","poster.jpg"],"names":["AdminSidebar","visible","this","props","Sidebar","as","Menu","width","animation","direction","vertical","icon","to","Item","name","Component","FormFieldInput","formProps","getErrorProp","fieldValidate","updateFormMsg","updateField","state","setState","title","initVal","placeholder","dataKey","descriptors","FormField","Form","Field","descriptor","control","Input","label","value","onChange","e","error","onBlur","a","errors","Rules","dataLabel","required","message","min","max","dataName","string","number","boolean","method","regexp","integer","float","array","object","enum","date","url","email","typeName","type","asyncValidator","rule","params","Promise","resolve","reject","axios","get","then","res","console","log","data","code","catch","err","dispatch","canDispatch","createStateFromDataProps","clearInputVal","formFields","header","dataProps","api","Segment","stacked","size","Header","Button","floated","color","onClick","nullValState","newState","content","positive","labelPosition","Api","AdminForm","rowData","update","create","username","password","getDescriptors","useState","rowDataExisted","undefined","obj","cinemaId","errMsg","index","push","key","fieldProps","getUsernameField","getPasswordField","getForms","sto","window","sessionStorage","headers","getToken","getItem","setToken","token","setItem","isTokenNull","setTokenNull","isLogged","getUserByToken","param","accessToken","getUserByTokenApi","Alert","defaultProps","open","show","setTimeout","Modal","onClose","Message","div","document","createElement","body","appendChild","Box","ReactDOM","render","React","BASE_URL","Authorization","getTokenHeader","instance","baseURL","timeout","getList","map","item","response","updateOne","put","deleteOne","delete","createOne","post","getOne","payload","validator","schema","validate","newMsg","Object","keys","field","fields","target","msg","i","assign","idName","checkVal","Checkbox","checked","event","style","padding","appearance","list","checkedAll","rowHeight","updateTable","handleChange","id","handleDelete","handleCheck","handleDeleteSelected","handleRefresh","tableTitle","tableColumns","getFormElement","oldFormProps","textAlign","trigger","closeIcon","closeOnDimmerClick","autoHeight","virtualized","bordered","defaultExpandAllRows","align","fixed","CheckCell","sort","resizable","rowIndex","DeleteActionCell","AdminTable","columns","createAdminCols","tableHeaders","FilmForm","typeOptions","director","introduction","poster","duration","actors","status","filmId","getNameField","getActorsField","getDirectorField","getIntroductionField","getPosterField","getStatusField","initValId","typeId","pos","length","Dropdown","options","v","defaultValue","selection","getTypeField","getDurationField","Type","FilmTable","getTypeOptions","typeList","text","createFilmCols","orderTime","payTime","fee","tefeel","userId","getOrderTimeField","getPayTimeField","getFeeField","rowKey","OrderTable","expandedRowKeys","handleExpanded","nextExpandedRowKeys","forEach","OrderForm","rowExpandedHeight","height","onRowClick","renderRowExpanded","user","film","session","cinema","room","fluid","readOnly","ExpandCell","some","dateFormat","ret","fmt","opt","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","k","RegExp","exec","replace","padStart","SessionTable","items","onDropdownChange","selectedObj","child","dropdownIdName","dropdownItemId","onDatePickerChange","createSessionCols","listName","dataToLabel","myList","dataMapKeys","dropdownInfo","dropdownList","flexGrow","onRef","ref","sessionId","cinemaName","time","remainingSeats","filmName","roomName","tableHeader","modalHeader","labelNames","dataNames","DropdownCell","onOpen","search","DatePickerCell","itemId","MyDatePicker","Date","startDate","setStartDate","selected","showTimeSelect","timeFormat","timeIntervals","timeCaption","tel","isStudent","getEmailField","getTelField","defaultChecked","val","getIsStudentField","UserTable","createUserCols","UserForm","CinemaForm","location","getLocationField","CinemaTable","createCinemaCols","CommentTable","AdminIndex","windowHeight","minHeight","clientHeight","Pushable","Grid","Row","stretched","Column","Pusher","handleClick","bind","path","component","initState","actionTypes","actions","LoginForm","proof","saveUserId","auth","history","onSubmit","submit","primary","contextTypes","router","PropTypes","isRequired","withRouter","connect","ownProps","bindActionCreators","Login","container","centered","marginTop","verticalAlign","RegisterFormUI","rePassword","errorInfo","contentList","toggle","className","RegisterForm","ErrorMessage","RegisterUI","h","Register","TopMenu","activeItem","active","handleItemClick","Icon","position","getPlaceHolder","IndexBody","filmList","filmData","celled","FilmCard","handleOnRate","rating","maxRating","Card","Image","src","Content","Rating","defaultRating","onRate","SessionInfo","cols","sessionList","handleBook","nextProp","faker","require","FilmDetail","match","filmContent","random","findName","hacker","noun","lorem","paragraph","List","relaxed","styleMeta","fontFamily","fontSize","styleInfo","SegmentInfo","meta","info","editable","onEditChange","onEditClick","Profile","confirmOpened","newVal","handleCheckBox","handleLogout","clearUserId","segments","dataNameToMeta","Group","negative","Confirm","onCancel","onConfirm","SessionDetail","now","basic","price","loginJump","PrivateRoute","rest","Index","exact","rootReducers","combineReducers","action","Boolean","hostname","store","createStore","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.662d73c1.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport { Grid, Menu, Sidebar, Segment, Table } from \"semantic-ui-react\";\r\n\r\nclass AdminSidebar extends Component {\r\n  render() {\r\n    const { visible } = this.props;\r\n    return (\r\n      <Sidebar\r\n        as={Menu}\r\n        width=\"thin\"\r\n        animation=\"push\"\r\n        direction=\"left\"\r\n        vertical\r\n        icon=\"labeled\"\r\n        visible={visible}\r\n      >\r\n        <NavLink to=\"/admin/user-manage\">\r\n          <Menu.Item icon=\"users\" name=\"User Manage\"></Menu.Item>\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/admin/admin-manage\">\r\n          <Menu.Item icon=\"user md\" name=\"Admin Manage\"></Menu.Item>\r\n        </NavLink>\r\n        <NavLink to=\"/admin/order-manage\">\r\n          <Menu.Item icon=\"server\" name=\"Order Manage\"></Menu.Item>\r\n        </NavLink>\r\n        <NavLink to=\"/admin/session-manage\">\r\n          <Menu.Item icon=\"compose\" name=\"Session Manage\"></Menu.Item>\r\n        </NavLink>\r\n        <NavLink to=\"/admin/film-manage\">\r\n          <Menu.Item icon=\"film\" name=\"Film Manage\"></Menu.Item>\r\n        </NavLink>\r\n        <NavLink to=\"/admin/cinema-manage\">\r\n          <Menu.Item icon=\"home\" name=\"Cinema Manage\"></Menu.Item>\r\n        </NavLink>\r\n        <NavLink to=\"/admin/comment-manage\">\r\n          <Menu.Item icon=\"comments\" name=\"Comment Manage\"></Menu.Item>\r\n        </NavLink>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nAdminSidebar.propTypes = {};\r\n\r\nexport default AdminSidebar;\r\n","import React from \"react\";\r\nimport { Form, Input } from \"semantic-ui-react\";\r\nexport const FormFieldInput = ({ formProps, ...props }) => {\r\n  const {\r\n    getErrorProp,\r\n    fieldValidate,\r\n    updateFormMsg,\r\n    updateField,\r\n    state,\r\n    setState,\r\n    title,\r\n    initVal,\r\n    placeholder,\r\n    dataKey,\r\n    descriptors,\r\n  } = formProps;\r\n  const FormField = Form.Field;\r\n\r\n  const descriptor = {\r\n    [dataKey]: descriptors[dataKey],\r\n  };\r\n\r\n  return (\r\n    <FormField\r\n      control={Input}\r\n      label={title}\r\n      placeholder={placeholder}\r\n      // NOTE:Warning: A component is changing an uncontrolled input of type text to be controlled. Input elements should not switch from uncontrolled to controlled (or vice versa).\r\n      value={initVal || \"\"}\r\n      onChange={(e) => {\r\n        updateField(e, state, setState);\r\n      }}\r\n      name={dataKey}\r\n      error={getErrorProp(dataKey, state)}\r\n      onBlur={async (e) => {\r\n        const errors = await fieldValidate(descriptor, state);\r\n        updateFormMsg(errors, state, setState);\r\n      }}\r\n    />\r\n  );\r\n};\r\n","export default{\r\n    User:\"/user\",\r\n    Cinema:\"/cinema\",\r\n    Comment:\"/comment\",\r\n    Film:\"/film\",\r\n    Room:\"/room\",\r\n    Seat:\"/seat\",\r\n    Session:\"/session\",\r\n    Order:\"/order\",\r\n    Type:\"/type\",\r\n    Admin:\"/admin\",\r\n    queryUser: (id)=>\"/user/\"+id,\r\n    queryAdmin: (id)=>\"/admin/\"+id,\r\n    queryCinema: (id)=>\"/cinema/\"+id,\r\n    queryComment: (id)=>\"/comment/\"+id,\r\n    queryFilm: (id)=>\"/film/\"+id,\r\n    queryRoom: (id)=>\"/room/\"+id,\r\n    querySeat: (id)=>\"/seat/\"+id,\r\n    querySession: (id)=>\"/session/\"+id,\r\n    queryOrder: (id)=>\"/order/\"+id,\r\n    queryType: (id)=>\"/type/\"+id,\r\n\r\n}","import axios from \"axios\";\r\nconst BASE_URL = \"http://localhost:8090/api\";\r\nexport const Rules = {\r\n  required: (dataLabel) => ({\r\n    required: true,\r\n    message: dataLabel + \" is required\",\r\n  }),\r\n  isLength: (min, max,dataName) => ({\r\n    min: min,\r\n    max: max,\r\n    message: dataName+\": maximum length is \" + max + \" and  minimum is \" + min,\r\n  }),\r\n\r\n  TYPE: {\r\n    string: \"string\",\r\n    number: \"number\",\r\n    boolean: \"boolean\",\r\n    method: \"function\",\r\n    regexp: \"regexp\",\r\n    integer: \"integer\",\r\n    float: \"float\",\r\n    array: \"array\",\r\n    object: \"object\",\r\n    enum: \"enum\",\r\n    date: \"date\",\r\n    url: \"url\",\r\n\r\n    email: \"email\",\r\n  },\r\n  isType: (typeName) => ({\r\n    type: typeName,\r\n    message: \"require \" + typeName,\r\n  }),\r\n  isDuplicate: (url, dataName) => {\r\n    url = BASE_URL + url;\r\n    //   NOTE: get=>  const params = { params: { [dataName]: value } }\r\n    //   NOTE: if there are async requests ,you need asyncValidator\r\n    return {\r\n      asyncValidator: async (rule, value) => {\r\n        const params = { params: { [dataName]: value } };\r\n        let code = 0;\r\n// axios request is not sync\r\n        return new Promise((resolve, reject) => {\r\n          axios\r\n            .get(url, params)\r\n            .then((res) => {\r\n              console.log(res);\r\n              code = res.data.code;\r\n              if (code !== 200) {\r\n                reject(dataName + \" is duplicate\"); // reject with error message\r\n              } else {\r\n                resolve();\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              reject(dataName + \" is duplicate\");\r\n              console.error(err);\r\n            });\r\n        });\r\n      },\r\n    };\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Form, Header, Segment } from \"semantic-ui-react\";\r\n// BaseForm\r\nexport default ({ formProps }) => {\r\n  const {\r\n    dispatch,\r\n    updateFormMsg,\r\n    fieldValidate,\r\n    canDispatch,\r\n    createStateFromDataProps,\r\n    clearInputVal,\r\n    formFields,\r\n    header,\r\n    dataProps,\r\n    type,\r\n    state,\r\n    setState,\r\n    descriptors,\r\n    api,\r\n  } = formProps;\r\n  return (\r\n    <Segment stacked size=\"huge\">\r\n      <Header>{header}</Header>\r\n      <Form>\r\n        <Button\r\n          floated=\"right\"\r\n          color=\"red\"\r\n          size=\"mini\"\r\n          icon=\"undo\"\r\n          onClick={() => {\r\n            const nullValState = createStateFromDataProps(false, dataProps);\r\n            const newState = clearInputVal(nullValState, state);\r\n            setState({ ...newState });\r\n          }}\r\n          content=\"Clear All\"\r\n        />\r\n        {formFields}\r\n        <Button\r\n          positive\r\n          icon=\"checkmark\"\r\n          type=\"submit\"\r\n          labelPosition=\"right\"\r\n          onClick={async (e) => {\r\n            const errors = await fieldValidate(descriptors, state);\r\n            updateFormMsg(errors, state, setState);\r\n            if (canDispatch(errors)) dispatch(type, state, api);\r\n          }}\r\n          content=\"OK\"\r\n        />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n","import { FormFieldInput } from \"components/base/form/FormFieldInput\";\r\nimport React, { useState } from \"react\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Form, Header, Segment } from \"semantic-ui-react\";\r\nimport Api from \"utils/api\";\r\nimport { Rules } from \"utils/validatorRules\";import BaseForm from \"components/base/form/BaseTableForm\";\r\nconst { Admin } = Api;\r\nconst api = Admin;\r\nexport const AdminForm = ({ rowData, type, formProps }) => {\r\n  let header = {\r\n    update: \"Edit an admin\",\r\n    create: \"Add an admin\",\r\n  };\r\n  header = header[type];\r\n  const dataProps = {\r\n    username: {\r\n      descriptor: {\r\n        username: [Rules.required(\"username\")],\r\n      },\r\n      dataKey: \"username\",\r\n      title: \"Username\",\r\n      placeholder: \"Please enter username\",\r\n    },\r\n    password: {\r\n      descriptor: {\r\n        password: [Rules.required(\"password\")],\r\n      },\r\n      dataKey: \"password\",\r\n      title: \"Password\",\r\n      placeholder: \"Please enter password\",\r\n    },\r\n  };\r\n  const {\r\n    dispatch,\r\n    updateFormMsg,\r\n    fieldValidate,\r\n    canDispatch,\r\n    getDescriptors,\r\n    createStateFromDataProps,\r\n    clearInputVal,\r\n  } = formProps;\r\n  const [state, setState] = useState(() => {\r\n    const rowDataExisted = rowData !== undefined;\r\n    const obj = createStateFromDataProps(rowDataExisted, dataProps, rowData);\r\n    return {\r\n      ...obj,\r\n      cinemaId: rowDataExisted ? rowData[\"adminId\"] : \"\",\r\n      errMsg: {},\r\n    };\r\n  });\r\n  const descriptors = getDescriptors(dataProps);\r\n  formProps = {\r\n    ...formProps,\r\n    state,\r\n    setState,\r\n    descriptors,\r\n    header,\r\n    dataProps,\r\n    type,\r\n    api,\r\n  };\r\n  const FormField = Form.Field;\r\n\r\n\r\n  const getPasswordField = (key) => {\r\n    const fieldProps = {\r\n      ...dataProps[\"password\"],\r\n      initVal: state.password,\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getUsernameField = (key) => {\r\n    const fieldProps = {\r\n      ...dataProps[\"username\"],\r\n      initVal: state.username,\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getForms = () => {\r\n    let formFields = [];\r\n    let index = 0;\r\n    formFields.push(getUsernameField(index++));\r\n    formFields.push(getPasswordField(index++));\r\n    return formFields;\r\n  };\r\n  const formFields = getForms();\r\n  formProps = {\r\n    ...formProps,\r\n    formFields,\r\n  };\r\n  return (\r\n    <BaseForm formProps={formProps} />\r\n  );\r\n};\r\n","import { getUserByTokenApi } from \"utils/request\";\r\nlet sto = window.sessionStorage;\r\nlet headers = {};\r\n\r\nexport function getTokenHeader() {\r\n  let token = getToken();\r\n  // token=\"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsaWFuZyIsImV4cCI6MTU4NzIyNDM0NSwiaWF0IjoxNTg3MjE3MTQ1fQ.GvHmecWhnJSQp5pq9ccGLOok1DmYle55u3k7ZcJSvyJJAfb9BZushjvKa6vEdwLQvcmIBpKu0QrINUZIkvD_rQ\"\r\n  if (!isTokenNull()) {\r\n    token = \"Bearer \" + token;\r\n    headers = { Authorization: token };\r\n    return headers;\r\n  }\r\n  return headers;\r\n}\r\nexport function getToken() {\r\n  let token = sto.getItem(\"accessToken\");\r\n  return token;\r\n}\r\nexport function setToken(token) {\r\n  let sto = window.sessionStorage;\r\n  sto.setItem(\"accessToken\", token);\r\n}\r\nexport function isTokenNull() {\r\n  let token = getToken();\r\n  if (token === null || token === \"-1\") {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nexport function setTokenNull() {\r\n  let sto = window.sessionStorage;\r\n  sto.setItem(\"accessToken\", \"-1\");\r\n}\r\nexport function isLogged() {\r\n  return !isTokenNull();\r\n}\r\nexport async function getUserByToken() {\r\n\r\n  let param = {\r\n      accessToken: getToken(),\r\n    };\r\n  let res = await getUserByTokenApi(param).then((res) => {\r\n    return res;\r\n  });\r\n  return res;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Modal, Message } from \"semantic-ui-react\";\r\nimport ReactDOM from \"react-dom\";\r\nclass Alert extends Component {\r\n  defaultProps = {\r\n    header: \"\",\r\n    content: \"\",\r\n  };\r\n  state = {\r\n    open: false,\r\n    header: \"\",\r\n    content: \"\",\r\n    error: false,\r\n  };\r\n  show = (header, content, error) => {\r\n    if (error === \"error\") {\r\n      error = true;\r\n    } else {\r\n      error = false;\r\n    }\r\n    this.setState({ open: true, header, content, error });\r\n    setTimeout(() => {\r\n      this.setState({ open: false });\r\n    }, 10000);\r\n  };\r\n  render() {\r\n    const { open, header, content, error } = this.state;\r\n    return (\r\n      <Modal\r\n        size=\"mini\"\r\n        onClose={() => {\r\n          this.setState({ open: false });\r\n        }}\r\n        open={open}\r\n        \r\n      >\r\n        {/* <Modal.Header>{header}</Modal.Header>\r\n        <Modal.Content>{content}</Modal.Content> */}\r\n        <Message error={error} header={header} content={content} />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nlet div = document.createElement(\"div\");\r\nlet props = {};\r\ndocument.body.appendChild(div);\r\nlet Box = ReactDOM.render(React.createElement(Alert, props), div);\r\nexport default Box;\r\n","import axios from \"axios\";\r\nimport { getTokenHeader, setToken, getToken } from \"utils/token\";\r\nimport Alert from \"components/public/Alert\";\r\nconst BASE_URL = \"http://localhost:8090/api\";\r\nlet headers = getTokenHeader();\r\nvar instance = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 10000,\r\n  headers,\r\n});\r\n// \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsaWFuZyIsImV4cCI6MTU4NzIyNDM0NSwiaWF0IjoxNTg3MjE3MTQ1fQ.GvHmecWhnJSQp5pq9ccGLOok1DmYle55u3k7ZcJSvyJJAfb9BZushjvKa6vEdwLQvcmIBpKu0QrINUZIkvD_rQ\"\r\n/**\r\n * get list from back end\r\n * \r\n * @param  {String} url (\"api/user\")\r\n */\r\nexport async function getList(url) {\r\n  let data = [];\r\n  let response = await instance\r\n    .get(url)\r\n    .then((res) => {\r\n      console.log(res);\r\n      data = res.data.data;\r\n      data.map((item) => {\r\n        item[\"editable\"] = false;\r\n        item[\"checked\"] = false;\r\n        return null;\r\n      });\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n\r\n  return response;\r\n}\r\n\r\n/**\r\n * @param  {String } url :api url\r\n * @param  {Object } item : like {username: 123, password:123}\r\n */\r\nexport async function updateOne(url, item) {\r\n  await instance\r\n    .put(url, item)\r\n    .then((res) => {\r\n      console.log(res);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n}\r\n/**\r\n * @param  {String} url\r\n * @param  {Object} param such as {userId : 1}\r\n */\r\nexport async function deleteOne(url, param) {\r\n  url = BASE_URL + url;\r\n  // NOTE: @RequestParam\r\n  await instance\r\n    .delete(url, { params: param })\r\n    .then((res) => {\r\n      console.log(res);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n}\r\n\r\nexport async function createOne(url, obj) {\r\n  const params = obj;\r\n  instance\r\n    .post(url, params)\r\n    .then((res) => {\r\n      console.log(res);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n}\r\n/**\r\n * @param  {String} url :(api/user/1)\r\n */\r\nexport async function getOne(url) {\r\n  let data = [];\r\n  let response = await instance\r\n    .get(url, \"\")\r\n    .then((res) => {\r\n      console.log(res);\r\n      data = res.data.data;\r\n      data[\"editable\"] = false;\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n\r\n  return response;\r\n}\r\n/**\r\n * @param  {Object} params :{ proof : liang , password :1234}\r\n * @returns {String} accessToken \r\n *  use toke to access any resource\r\n */\r\nexport async function auth(params) {\r\n  let res = await axios\r\n    .post(BASE_URL + \"/auth\", params)\r\n    .then((res) => {\r\n      setToken(res.data.data[\"accessToken\"]);\r\n      console.log(\"successfully login, token is \"+ getToken() );\r\n      return res.data;\r\n    })\r\n    .catch((err) => {\r\n      // alert(\"Login wrong\")\r\n      Alert.show(\"Login failed\", \"please contact your admin\", \"error\");\r\n      console.error(err);\r\n    });\r\n  return res;\r\n}\r\n/**\r\n * @param  {Object} params\r\n */\r\nexport async function getUserByTokenApi(params) {\r\n  let res = await axios\r\n    .post(BASE_URL + \"/user/accessToken\", params)\r\n    .then((res) => {\r\n      return res.data.data;\r\n    })\r\n    .catch((err) => {\r\n      // alert(\"Login wrong\")\r\n      console.error(err);\r\n    });\r\n  return res;\r\n}\r\n","import schema from \"async-validator\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport Api from \"utils/api\";\r\nimport { createOne, updateOne } from \"utils/request\";\r\n\r\nexport default {\r\n  dispatch: async (type, payload, api) => {\r\n    switch (type) {\r\n      case \"update\":\r\n        await updateOne(api, payload);\r\n        break;\r\n      case \"create\":\r\n        await createOne(api, payload);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return;\r\n  },\r\n  fieldValidate: async (descriptor, object) => {\r\n    let validator = new schema(descriptor);\r\n    return validator\r\n      .validate(object)\r\n      .then(() => {\r\n        // what did the function validate\r\n        let fields = Object.keys(descriptor);\r\n        let newMsg = [];\r\n        for (const field of fields) {\r\n          newMsg.push({ field, message: null });\r\n        }\r\n        return newMsg;\r\n      })\r\n      .catch(({ errors, fields }) => {\r\n        return errors;\r\n      });\r\n  },\r\n\r\n  updateField: (e, state, setState) => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  },\r\n  getErrorProp: (dataKey, state) => {\r\n    return state[\"errMsg\"][dataKey];\r\n  },\r\n  updateFormMsg: (errors, state, setState) => {\r\n    let msg = state.errMsg === null ? {} : state.errMsg;\r\n    for (const error of errors) {\r\n      msg[error.field] = error.message;\r\n    }\r\n\r\n    setState({ ...state, errMsg: msg });\r\n  },\r\n  canDispatch: (errors) => {\r\n    for (const i of errors) {\r\n      if (i[\"message\"] !== null) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  },\r\n  getDescriptors: (dataProps) => {\r\n    const objList = Object.keys(dataProps);\r\n    let descriptors = {};\r\n    for (const i of objList) {\r\n      if (dataProps[i][\"descriptor\"] !== undefined) {\r\n        Object.assign(descriptors, dataProps[i][\"descriptor\"]);\r\n      }\r\n    }\r\n    return descriptors;\r\n  },\r\n  createStateFromDataProps: (rowDataExisted, dataProps, rowData) => {\r\n    const keyList = Object.keys(dataProps);\r\n    let obj = {};\r\n    for (const i of keyList) {\r\n      Object.assign(obj, { [i]: rowDataExisted ? rowData[i] : \"\" });\r\n    }\r\n    return obj;\r\n  },\r\n  clearInputVal: (nullValState, state) => {\r\n  \r\n    let newState = state;\r\n    newState = Object.assign(newState, nullValState);\r\n    return newState;\r\n  },\r\n};\r\n","\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Checkbox,\r\n} from \"semantic-ui-react\";\r\nimport { Table, Column, HeaderCell, Cell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\n\r\n\r\nexport default  ({ rowData, dataKey, onClick, idName, ...props }) => {\r\n    // must deliver  dataKey, IdKey, onChange like IdKey=\"adminId\" onChange={this.handleChange} dataKey=\"password\"\r\n    let checkVal = rowData[dataKey];\r\n    let editable = null;\r\n    return (\r\n      <Cell {...props}>\r\n        <Checkbox\r\n          checked={checkVal}\r\n          onClick={(event, data) => {\r\n            onClick(data, rowData[idName]);\r\n          }}\r\n        />\r\n      </Cell>\r\n    );\r\n  };","\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport {  Cell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nexport default  ({ rowData, dataKey, onClick, ...props }) => {\r\n    return (\r\n      <Cell {...props} style={{ padding: \"6px 0\" }}>\r\n        <Button\r\n          appearance=\"link\"\r\n          onClick={() => {\r\n            onClick(dataKey, rowData[dataKey]);\r\n          }}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </Cell>\r\n    );\r\n  };","import oldFormProps from \"components/base/form/formProps\";\r\nimport CheckCell from \"components/table/components/CheckCell\";\r\nimport DeleteActionCell from \"components/table/components/DeleteActionCell\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { Cell, Column, HeaderCell, Table } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Header, Menu, Modal, Segment } from \"semantic-ui-react\";\r\nimport { createOne, deleteOne, getList, updateOne } from \"utils/request\";\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class EditTable\r\n * @extends {Component}\r\n */\r\n\r\nexport default class extends Component {\r\n  static defaultProps = {};\r\n  state = {\r\n    list: [],\r\n    checkedAll: false,\r\n    rowHeight: 50,\r\n  };\r\n  static propTypes = {\r\n    cols: PropTypes.array,\r\n  };\r\n\r\n  /**\r\n   * get list form back-end\r\n   *\r\n   * @memberof EditTable\r\n   */\r\n  updateTable = async () => {\r\n    const { url } = this.props;\r\n    getList(url).then((list) => {\r\n      this.setState({ list });\r\n      // console.log(list);\r\n    });\r\n  };\r\n  /**\r\n    deliver to 'this' father node\r\n * initialize the table\r\n *\r\n * @memberof EditTable\r\n */\r\n  componentDidMount() {\r\n    this.updateTable();\r\n  }\r\n  handleChange = (id, key, value) => {\r\n    const { list } = this.state;\r\n    const { idName } = this.props;\r\n    for (let item of list) {\r\n      if (item[idName] === id) {\r\n        item[key] = value;\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ list });\r\n  };\r\n  /**\r\n   * connect to the delete button\r\n   *\r\n   * @memberof EditTable\r\n   */\r\n  handleDelete = (dataKey, id) => {\r\n    const { url } = this.props;\r\n    const param = { [dataKey]: id };\r\n    // NOTE: @Requestparam\r\n    deleteOne(url, param).then((res) => {\r\n      this.updateTable();\r\n    });\r\n  };\r\n\r\n  handleCheck = (data, id) => {\r\n    const { list } = this.state;\r\n    const { idName } = this.props;\r\n    for (let item of list) {\r\n      if (item[idName] === id) {\r\n        if (item[\"checked\"] === true) {\r\n          item[\"checked\"] = false;\r\n        } else {\r\n          item[\"checked\"] = true;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ list });\r\n  };\r\n  handleDeleteSelected = async () => {\r\n    const { url, idName } = this.props;\r\n    const { list } = this.state;\r\n    for (let item of list) {\r\n      if (item[\"checked\"] === true) {\r\n        const param = { [idName]: item[idName] };\r\n        await deleteOne(url, param);\r\n      }\r\n    }\r\n\r\n    // NOTE : @Requestparam\r\n\r\n    this.updateTable();\r\n  };\r\n  handleRefresh = () => {\r\n    this.updateTable();\r\n  };\r\n  dispatch = async (type, payload, api) => {\r\n    switch (type) {\r\n      case \"update\":\r\n        await updateOne(api, payload);\r\n        break;\r\n      case \"create\":\r\n        await createOne(api, payload);\r\n \r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.updateTable();\r\n  };\r\n  render() {\r\n    const { list, checkedAll, rowHeight } = this.state;\r\n    const { idName, tableTitle, tableColumns, getFormElement } = this.props;\r\n    const formProps = {\r\n      ...oldFormProps,\r\n      dispatch: this.dispatch,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          <Header textAlign=\"center\" as=\"h2\">\r\n            {tableTitle}\r\n          </Header>\r\n        </Segment>\r\n        <Menu>\r\n          <Menu.Item>\r\n            <Modal\r\n              trigger={<Button>Add</Button>}\r\n              closeIcon\r\n              closeOnDimmerClick={false}\r\n            >\r\n              {getFormElement(\"create\", formProps)}\r\n            </Modal>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            icon=\"minus\"\r\n            as={Button}\r\n            name=\"Delete Selected\"\r\n            onClick={this.handleDeleteSelected}\r\n          />\r\n          <Menu.Item\r\n            icon=\"redo\"\r\n            as={Button}\r\n            name=\"\"\r\n            onClick={this.handleRefresh}\r\n          />\r\n        </Menu>\r\n\r\n        <Table\r\n          data={list}\r\n          autoHeight\r\n          virtualized\r\n          bordered\r\n          defaultExpandAllRows\r\n          rowHeight={rowHeight}\r\n        >\r\n          {/* checkbox columns */}\r\n          <Column width={50} align=\"center\" fixed>\r\n            <HeaderCell></HeaderCell>\r\n            <CheckCell\r\n              dataKey=\"checked\"\r\n              idName={idName}\r\n              onClick={this.handleCheck}\r\n            />\r\n          </Column>\r\n          {/* data columns */}\r\n          {tableColumns}\r\n          <Column width={100} sort=\"true\" resizable align=\"center\">\r\n            <HeaderCell>Edit</HeaderCell>\r\n            <Cell>\r\n              {(rowData, rowIndex) => {\r\n                return (\r\n                  <Modal\r\n                    trigger={<Button>Edit</Button>}\r\n                    closeIcon\r\n                    closeOnDimmerClick={false}\r\n                  >\r\n                    {getFormElement(\"update\", formProps, rowData)}\r\n                  </Modal>\r\n                );\r\n              }}\r\n            </Cell>\r\n          </Column>\r\n          <Column width={100} sort=\"true\" resizable align=\"center\">\r\n            <HeaderCell>Delete</HeaderCell>\r\n            <DeleteActionCell dataKey={idName} onClick={this.handleDelete} />\r\n          </Column>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// class table extends Component {\r\n//   componentWillMount() {}\r\n\r\n//   componentDidMount() {}\r\n\r\n//   componentWillReceiveProps(nextProps) {}\r\n\r\n//   shouldComponentUpdate(nextProps, nextState) {}\r\n\r\n//   componentWillUpdate(nextProps, nextState) {}\r\n\r\n//   componentDidUpdate(prevProps, prevState) {}\r\n\r\n//   componentWillUnmount() {}\r\n\r\n//   render() {\r\n//     return <div></div>;\r\n//   }\r\n// }\r\n","import { AdminForm } from \"components/admin/admin/AdminForm\";\r\nimport EditTable from \"components/table/EditTable\";\r\nimport React, { Component } from \"react\";\r\nimport { Cell, Column, HeaderCell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nclass AdminTable extends Component {\r\n  static defaultProps = {\r\n    tableHeaders: [\r\n      {\r\n        title: \"ID\",\r\n        dataKey: \"adminId\",\r\n      },\r\n      {\r\n        title: \"Username\",\r\n        dataKey: \"username\",\r\n      },\r\n      {\r\n        title: \"Password\",\r\n        dataKey: \"password\",\r\n      },\r\n    ],\r\n    url: \"/admin\",\r\n    idName: \"adminId\",\r\n    tableTitle: \"Admin Manage\",\r\n  };\r\n  state = {\r\n    columns: [],\r\n  };\r\n  componentDidMount() {\r\n    this.createAdminCols();\r\n  }\r\n  // NOTE: async function return a Promise!!!\r\n  createAdminCols = async () => {\r\n    const { tableHeaders } = this.props;\r\n\r\n    let columns = [];\r\n    let index = 0;\r\n    for (const header of tableHeaders) {\r\n      columns.push(\r\n        <Column key={index++} width={200} resizable align=\"center\">\r\n          <HeaderCell>{header[\"title\"]}</HeaderCell>\r\n          <Cell dataKey={header[\"dataKey\"]} />\r\n        </Column>\r\n      );\r\n    }\r\n    // columns.push(\r\n    //   <Column width={100} sort=\"true\" resizable align=\"center\">\r\n    //     <HeaderCell>Edit</HeaderCell>\r\n    //     <AdminFormCell type=\"update\" formProps={formProps} />\r\n    //   </Column>\r\n    // );\r\n    this.setState({ columns });\r\n  };\r\n  getFormElement = (type, formProps, rowData) => {\r\n\r\n    return <AdminForm rowData={rowData} type={type} formProps={formProps} />;\r\n  };\r\n  render() {\r\n    let { columns } = this.state;\r\n    console.log(columns);\r\n    return (\r\n      <EditTable\r\n        {...this.props}\r\n        tableColumns={columns}\r\n        getFormElement={this.getFormElement}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminTable;\r\n","import BaseForm from \"components/base/form/BaseTableForm\";\r\nimport { FormFieldInput } from \"components/base/form/FormFieldInput\";\r\nimport React, { useState } from \"react\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Dropdown, Form } from \"semantic-ui-react\";\r\nimport Api from \"utils/api\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nconst { Film, Type } = Api;\r\nconst api = Film;\r\nconst FilmForm = ({ rowData, type, formProps, typeOptions }) => {\r\n  const FormField = Form.Field;\r\n  const {\r\n    getDescriptors,\r\n    createStateFromDataProps,\r\n  } = formProps;\r\n  let header = {\r\n    update: \"Edit a film\",\r\n    create: \"Add a film\",\r\n  };\r\n  const dataProps = {\r\n    type: {\r\n      descriptor: {\r\n        // type: [Rules.required(\"cinema contact\")],\r\n      },\r\n      dataKey: \"type\",\r\n      title: \"Type\",\r\n      placeholder: \"Please enter a film name\",\r\n    },\r\n    name: {\r\n      descriptor: {\r\n        name: [Rules.required(\"name\")],\r\n      },\r\n      dataKey: \"name\",\r\n      title: \"Film\",\r\n      placeholder: \"Please enter a film name\",\r\n    },\r\n    director: {\r\n      descriptor: {\r\n        director: [Rules.required(\"director\")],\r\n      },\r\n      dataKey: \"director\",\r\n      title: \"Director\",\r\n      placeholder: \"Please enter a director name\",\r\n    },\r\n    introduction: {\r\n      descriptor: {\r\n        introduction: [Rules.required(\"introduction\")],\r\n      },\r\n      dataKey: \"introduction\",\r\n      title: \"Introduction\",\r\n      placeholder: \"Please enter introduction\",\r\n    },\r\n    poster: {\r\n      descriptor: {\r\n        poster: [Rules.required(\"poster\")],\r\n      },\r\n      dataKey: \"poster\",\r\n      title: \"Poster\",\r\n      placeholder: \"Please select a poster\",\r\n    },\r\n    duration: {\r\n      descriptor: {\r\n        duration: [Rules.required(\"duration\")],\r\n      },\r\n      dataKey: \"duration\",\r\n      title: \"Duration\",\r\n      placeholder: \"Please enter duration\",\r\n    },\r\n    actors: {\r\n      descriptor: {\r\n        actors: [Rules.required(\"actors\")],\r\n      },\r\n      dataKey: \"actors\",\r\n      title: \"Actors\",\r\n      placeholder: \"Please enter actors\",\r\n    },\r\n    status: {\r\n      descriptor: {\r\n        status: [Rules.required(\"status\")],\r\n      },\r\n      dataKey: \"status\",\r\n      title: \"Status\",\r\n      placeholder: \"Please enter the status\",\r\n    },\r\n  };\r\n\r\n  const [state, setState] = useState(() => {\r\n    const rowDataExisted = rowData !== undefined;\r\n    const obj = createStateFromDataProps(rowDataExisted, dataProps, rowData);\r\n    return {\r\n      ...obj,\r\n      filmId: rowDataExisted ? rowData[\"filmId\"] : \"\",\r\n      errMsg: {},\r\n    };\r\n  });\r\n  const descriptors = getDescriptors(dataProps);\r\n  header = header[type];\r\n  formProps = {\r\n    ...formProps,\r\n    state,\r\n    setState,\r\n    descriptors,\r\n    header,\r\n    dataProps,\r\n    type,\r\n    api,\r\n  };\r\n  const getNameField = (key) => {\r\n    const fieldProps = {\r\n      ...dataProps[\"name\"],\r\n      initVal: state.name,\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  const getTypeField = (key) => {\r\n    const { dataKey, title, placeholder } = dataProps[\"type\"];\r\n    const initValId = state.typeId;\r\n    let pos = 0;\r\n    for (let i = 0; i < typeOptions.length; i++) {\r\n      if (typeOptions[i][\"key\"] === initValId) {\r\n        pos = i;\r\n        break;\r\n      }\r\n    }\r\n    const onTypeChange = (e, v) => {\r\n      setState({ ...state, typeId: v.value });\r\n    };\r\n    return (\r\n      <FormField\r\n        key={key}\r\n        control={Dropdown}\r\n        label={title}\r\n        options={typeOptions}\r\n        onChange={onTypeChange}\r\n        placeholder={placeholder}\r\n        name={dataKey}\r\n        defaultValue={typeOptions[pos].value}\r\n        selection\r\n      />\r\n    );\r\n  };\r\n\r\n  const getDirectorField = (key) => {\r\n    const dataName = \"director\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  const getIntroductionField = (key) => {\r\n    const dataName = \"introduction\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  const getPosterField = (key) => {\r\n    const dataName = \"poster\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  const getDurationField = (key) => {\r\n    const dataName = \"duration\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  const getActorsField = (key) => {\r\n    const dataName = \"actors\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  const getStatusField = (key) => {\r\n    const dataName = \"status\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  // NOTE:  写成组件形式会导致重复render->失焦\r\n  const getForms = () => {\r\n    let index = 0;\r\n    let formFields = [];\r\n    formFields.push(getNameField(index++));\r\n    formFields.push(getActorsField(index++));\r\n    formFields.push(getDirectorField(index++));\r\n    formFields.push(getIntroductionField(index++));\r\n    formFields.push(getPosterField(index++));\r\n    formFields.push(getStatusField(index++));\r\n    formFields.push(getTypeField(index++));\r\n    formFields.push(getDurationField(index++));\r\n    return formFields;\r\n  };\r\n  const formFields = getForms();\r\n  formProps = {\r\n    ...formProps,\r\n    formFields,\r\n  };\r\n  return (\r\n    <BaseForm formProps={formProps} />\r\n  );\r\n};\r\nexport default FilmForm;\r\n","import FilmForm from \"components/admin/film/FilmForm\";\r\nimport EditTable from \"components/table/EditTable\";\r\nimport React, { Component } from \"react\";\r\nimport { Cell, Column, HeaderCell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport Api from \"utils/api\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nimport { getList } from \"utils/request\";\r\nconst { Film, Type } = Api;\r\nconst api = Film;\r\nclass FilmTable extends Component {\r\n  static defaultProps = {\r\n    tableHeaders: [\r\n      {\r\n        title: \"ID\",\r\n        dataKey: \"filmId\",\r\n      },\r\n      {\r\n        title: \"Type\",\r\n        dataKey: \"type\",\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        dataKey: \"name\",\r\n      },\r\n      {\r\n        title: \"Director\",\r\n        dataKey: \"director\",\r\n      },\r\n      {\r\n        title: \"Introduction\",\r\n        dataKey: \"introduction\",\r\n      },\r\n      {\r\n        title: \"Poster\",\r\n        dataKey: \"poster\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataKey: \"status\",\r\n      },\r\n      {\r\n        title: \"Actors\",\r\n        dataKey: \"actors\",\r\n      },\r\n      {\r\n        title: \"Rating\",\r\n        dataKey: \"rating\",\r\n      },\r\n    ],\r\n    url: \"/film\",\r\n    idName: \"filmId\",\r\n    tableTitle: \"Film Manage\",\r\n  };\r\n  state = {\r\n    columns: [],\r\n    typeOptions: [],\r\n  };\r\n  componentDidMount() {\r\n    this.createFilmCols();\r\n    this.getTypeOptions();\r\n  }\r\n\r\n  getTypeOptions = () => {\r\n    let typeOptions = [];\r\n    getList(Type).then((typeList) => {\r\n      for (const type of typeList) {\r\n        typeOptions.push({\r\n          key: type[\"typeId\"],\r\n          value: type[\"typeId\"],\r\n          text: type[\"type\"],\r\n        });\r\n      }\r\n      this.setState({ typeOptions });\r\n    });\r\n  };\r\n  // NOTE: async function return a Promise!!!\r\n  createFilmCols = async () => {\r\n    const { tableHeaders } = this.props;\r\n    let columns = [],\r\n      index = 0;\r\n    for (const header of tableHeaders) {\r\n      columns.push(\r\n        <Column key={index++} width={100} resizable align=\"center\">\r\n          <HeaderCell>{header[\"title\"]}</HeaderCell>\r\n          <Cell dataKey={header[\"dataKey\"]} />\r\n        </Column>\r\n      );\r\n    }\r\n    this.setState({ columns });\r\n  };\r\n  getFormElement = (type, formProps, rowData) => {\r\n    const { typeOptions } = this.state;\r\n    return (\r\n      <FilmForm\r\n        rowData={rowData}\r\n        type={type}\r\n        formProps={formProps}\r\n        typeOptions={typeOptions}\r\n      />\r\n    );\r\n  };\r\n  render() {\r\n    let { columns } = this.state;\r\n    return (\r\n      <EditTable\r\n        {...this.props}\r\n        tableColumns={columns}\r\n        getFormElement={this.getFormElement}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilmTable;\r\n","import { FormFieldInput } from \"components/base/form/FormFieldInput\";\r\nimport React, { useState } from \"react\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Checkbox, Form, Header, Segment } from \"semantic-ui-react\";\r\nimport Api from \"utils/api\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nimport BaseForm from \"components/base/form/BaseTableForm\";\r\nconst { Order } = Api;\r\nconst api = Order;\r\n// OrderForm\r\nexport default ({ rowData, type, formProps }) => {\r\n  const FormField = Form.Field;\r\n  const {\r\n    dispatch,\r\n    updateFormMsg,\r\n    fieldValidate,\r\n    canDispatch,\r\n    getDescriptors,\r\n    createStateFromDataProps,\r\n  } = formProps;\r\n  let header = {\r\n    update: \"Edit an order\",\r\n    create: \"Add an order\",\r\n  };\r\n  header = header[type];\r\n  const dataProps = {\r\n    orderTime: {\r\n      descriptor: {\r\n        orderTime: [Rules.required(\"orderTime\")],\r\n      },\r\n      dataKey: \"orderTime\",\r\n      title: \"Order time\",\r\n      placeholder: \"Please enter order time\",\r\n    },\r\n    payTime: {\r\n      descriptor: {\r\n        payTime: [Rules.required(\"payment time\")],\r\n      },\r\n      dataKey: \"payTime\",\r\n      title: \"Payment time\",\r\n      placeholder: \"Please enter the payment time\",\r\n    },\r\n    status: {\r\n      descriptor: {\r\n        status: [Rules.required(\"status\")],\r\n      },\r\n      dataKey: \"status\",\r\n      title: \"Status\",\r\n      placeholder: \"Please enter the order status\",\r\n    },\r\n    fee: {\r\n      descriptor: {\r\n        tefeel: [Rules.required(\"fee\")],\r\n      },\r\n      dataKey: \"fee\",\r\n      title: \"Fee\",\r\n      placeholder: \"Please enter the fee\",\r\n    },\r\n  };\r\n  const [state, setState] = useState(() => {\r\n    const rowDataExisted = rowData !== undefined;\r\n    const obj = createStateFromDataProps(rowDataExisted, dataProps, rowData);\r\n    return {\r\n      ...obj,\r\n      userId: rowDataExisted ? rowData[\"orderId\"] : \"\",\r\n      errMsg: {},\r\n    };\r\n  });\r\n  const descriptors = getDescriptors(dataProps);\r\n  formProps = {\r\n    ...formProps,\r\n    state,\r\n    setState,\r\n    descriptors,\r\n    header,\r\n    dataProps,\r\n    type,\r\n    api,\r\n  };\r\n\r\n  const getOrderTimeField = (key) => {\r\n    const dataName = \"orderTime\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getFeeField = (key) => {\r\n    const dataName = \"fee\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getStatusField = (key) => {\r\n    const dataName = \"status\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getPayTimeField = (key) => {\r\n    const dataName = \"payTime\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  // NOTE:  写成组件形式会导致重复render->失焦\r\n  const getForms = () => {\r\n    let index = 0;\r\n    let formFields = [];\r\n    formFields.push(getOrderTimeField(index++));\r\n    formFields.push(getPayTimeField(index++));\r\n    formFields.push(getStatusField(index++));\r\n    formFields.push(getFeeField(index++));\r\n    return formFields;\r\n  };\r\n  const formFields = getForms();\r\n  formProps = {\r\n    ...formProps,\r\n    formFields,\r\n  };\r\n  return <BaseForm formProps={formProps} />;\r\n};\r\n","import DeleteActionCell from \"components/table/components/DeleteActionCell\";\r\nimport React, { Component } from \"react\";\r\nimport { Cell, Column, HeaderCell, Table } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Form, Header, Modal, Segment } from \"semantic-ui-react\";\r\nimport Api from \"utils/api\";\r\nimport { getList, createOne, deleteOne, updateOne } from \"utils/request\";\r\nimport OrderForm from \"./OrderForm\";\r\nimport oldFormProps from \"components/base/form/formProps\";\r\nconst { Order } = Api;\r\nconst api = Order;\r\nconst rowKey = \"orderId\";\r\nclass OrderTable extends Component {\r\n  static defaultProps = {\r\n    tableHeaders: [\r\n      {\r\n        title: \"ID\",\r\n        dataKey: \"orderId\",\r\n      },\r\n      {\r\n        title: \"Order Time\",\r\n        dataKey: \"orderTime\",\r\n      },\r\n      {\r\n        title: \"Pay Time\",\r\n        dataKey: \"payTime\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataKey: \"status\",\r\n      },\r\n      {\r\n        title: \"Fee\",\r\n        dataKey: \"fee\",\r\n      },\r\n    ],\r\n    url: \"/order\",\r\n    idName: \"orderId\",\r\n    tableTitle: \"Order Manage\",\r\n  };\r\n  state = {\r\n    columns: [],\r\n    data: {},\r\n    expandedRowKeys: [],\r\n  };\r\n  componentDidMount() {\r\n    this.createFilmCols();\r\n    const { url } = this.props;\r\n    let list = {};\r\n    getList(url).then((res) => {\r\n      list = res;\r\n      this.setState({ data: list });\r\n    });\r\n    this.updateTable();\r\n  }\r\n  updateTable = async () => {\r\n    const { url } = this.props;\r\n    getList(url).then((list) => {\r\n      this.setState({ list });\r\n      // console.log(list);\r\n    });\r\n  };\r\n  /**\r\n    deliver to 'this' father node\r\n * initialize the table\r\n *\r\n * @memberof EditTable\r\n */\r\n  handleChange = (id, key, value) => {\r\n    const { list } = this.state;\r\n    const { idName } = this.props;\r\n    for (let item of list) {\r\n      if (item[idName] === id) {\r\n        item[key] = value;\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ list });\r\n  };\r\n  /**\r\n   * connect to the delete button\r\n   *\r\n   * @memberof EditTable\r\n   */\r\n  handleDelete = (dataKey, id) => {\r\n    const { url } = this.props;\r\n    const param = { [dataKey]: id };\r\n    // NOTE: @Requestparam\r\n    deleteOne(url, param).then((res) => {\r\n      this.updateTable();\r\n    });\r\n  };\r\n\r\n  handleCheck = (data, id) => {\r\n    const { list } = this.state;\r\n    const { idName } = this.props;\r\n    for (let item of list) {\r\n      if (item[idName] === id) {\r\n        if (item[\"checked\"] === true) {\r\n          item[\"checked\"] = false;\r\n        } else {\r\n          item[\"checked\"] = true;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ list });\r\n  };\r\n  handleDeleteSelected = async () => {\r\n    const { url, idName } = this.props;\r\n    const { list } = this.state;\r\n    for (let item of list) {\r\n      if (item[\"checked\"] === true) {\r\n        const param = { [idName]: item[idName] };\r\n        await deleteOne(url, param);\r\n      }\r\n    }\r\n\r\n    // NOTE : @Requestparam\r\n\r\n    this.updateTable();\r\n  };\r\n  handleRefresh = () => {\r\n    this.updateTable();\r\n  };\r\n  dispatch = async (type, payload, api) => {\r\n    switch (type) {\r\n      case \"update\":\r\n        await updateOne(api, payload);\r\n        break;\r\n      case \"create\":\r\n        await createOne(api, payload);\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.updateTable();\r\n  };\r\n  handleExpanded = (rowData, dataKey) => {\r\n    const { expandedRowKeys } = this.state;\r\n\r\n    let open = false;\r\n    const nextExpandedRowKeys = [];\r\n\r\n    expandedRowKeys.forEach((key) => {\r\n      if (key === rowData[rowKey]) {\r\n        open = true;\r\n      } else {\r\n        nextExpandedRowKeys.push(key);\r\n      }\r\n    });\r\n\r\n    if (!open) {\r\n      nextExpandedRowKeys.push(rowData[rowKey]);\r\n    }\r\n    this.setState({\r\n      expandedRowKeys: nextExpandedRowKeys,\r\n    });\r\n  };\r\n  // NOTE: async function return a Promise!!!\r\n  createFilmCols = async () => {\r\n    const { tableHeaders } = this.props;\r\n    let columns = [],\r\n      index = 0;\r\n    for (const header of tableHeaders) {\r\n      columns.push(\r\n        <Column key={index++} width={100} resizable align=\"center\">\r\n          <HeaderCell>{header[\"title\"]}</HeaderCell>\r\n          <Cell dataKey={header[\"dataKey\"]} />\r\n        </Column>\r\n      );\r\n    }\r\n    this.setState({ columns });\r\n  };\r\n  getFormElement = (type, formProps, rowData) => {\r\n    return <OrderForm rowData={rowData} type={type} formProps={formProps} />;\r\n  };\r\n  // TODO: End here\r\n  render() {\r\n    const { idName } = this.props;\r\n    const formProps = {\r\n      ...oldFormProps,\r\n      dispatch: this.dispatch,\r\n    };\r\n    let { columns, expandedRowKeys, data } = this.state;\r\n    return (\r\n      <Table\r\n        rowExpandedHeight={600}\r\n        height={400}\r\n        data={data}\r\n        rowKey={rowKey}\r\n        expandedRowKeys={expandedRowKeys}\r\n        onRowClick={(data) => {\r\n          console.log(data);\r\n        }}\r\n        renderRowExpanded={(rowData) => {\r\n          const { user, session, film, cinema, room } = rowData;\r\n          return (\r\n            <div>\r\n              <Segment>\r\n                <Form>\r\n                  <Header content=\"User Info\" />{\" \"}\r\n                  <Form.Input\r\n                    fluid\r\n                    label=\"Username\"\r\n                    value={user[\"username\"]}\r\n                    readOnly\r\n                  />\r\n                  <Form.Input\r\n                    fluid\r\n                    label=\"Email\"\r\n                    value={user[\"email\"]}\r\n                    readOnly\r\n                  />\r\n                </Form>\r\n              </Segment>\r\n              <Segment>\r\n                <Form>\r\n                  <Header content=\"Film Info\" />{\" \"}\r\n                  <Form.Input\r\n                    fluid\r\n                    label=\"Film\"\r\n                    value={film[\"name\"]}\r\n                    readOnly\r\n                  />\r\n                  <Form.Input\r\n                    fluid\r\n                    label=\"Director\"\r\n                    value={film[\"director\"]}\r\n                    readOnly\r\n                  />\r\n                </Form>\r\n              </Segment>\r\n            </div>\r\n          );\r\n        }}\r\n      >\r\n        {/* checked: false\r\ncinema: null\r\neditable: false\r\nfee: 11111\r\nfilm: {filmId: 18, typeId: 5, name: \"www\", director: \"12312\", introduction: \"123123sdf\", …}\r\norderId: 1\r\norderTime: \"2020-04-27 17:39\"\r\npayTime: \"2020-04-29 17:39\"\r\nroom: {roomId: 5, cinemaId: 7, seats: 50, roomName: \"E\"}\r\nsession: {sessionId: 5, filmId: 18, time: \"2020-07-10 08:30\", status: null, remainingSeats: 450, …}\r\nsessionId: 5\r\nstatus: \"\"\r\nuser: {username: \"liang\", email: \"347733121@qq.com\", password: \"123\", tel: \"2223\", isStudent: 1, …}\r\nuserId: 1 */}\r\n        <Column width={100} align=\"center\">\r\n          <HeaderCell>#</HeaderCell>\r\n          <ExpandCell\r\n            dataKey=\"id\"\r\n            expandedRowKeys={expandedRowKeys}\r\n            onChange={this.handleExpanded}\r\n          />\r\n        </Column>\r\n        {columns}\r\n        <Column width={100} sort=\"true\" resizable align=\"center\">\r\n          <HeaderCell>Edit</HeaderCell>\r\n          <Cell>\r\n            {(rowData, rowIndex) => {\r\n              return (\r\n                <Modal\r\n                  trigger={<Button>Edit</Button>}\r\n                  closeIcon\r\n                  closeOnDimmerClick={false}\r\n                >\r\n                  {this.getFormElement(\"update\", formProps, rowData)}\r\n                </Modal>\r\n              );\r\n            }}\r\n          </Cell>\r\n        </Column>\r\n        <Column width={100} sort=\"true\" resizable align=\"center\">\r\n          <HeaderCell>Delete</HeaderCell>\r\n          <DeleteActionCell dataKey={idName} onClick={this.handleDelete} />\r\n        </Column>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\nconst ExpandCell = ({\r\n  rowData,\r\n  dataKey,\r\n  expandedRowKeys,\r\n  onChange,\r\n  ...props\r\n}) => (\r\n  <Cell {...props}>\r\n    <Button\r\n      size=\"xs\"\r\n      onClick={() => {\r\n        onChange(rowData);\r\n      }}\r\n    >\r\n      {expandedRowKeys.some((key) => key === rowData[rowKey]) ? \"-\" : \"+\"}\r\n    </Button>\r\n  </Cell>\r\n);\r\nexport default OrderTable;\r\n","\r\nexport function dateFormat( date) {\r\n    let fmt=\"YYYY-mm-dd HH:MM\"\r\n    let ret;\r\n    const opt = {\r\n        \"Y+\": date.getFullYear().toString(),        // 年\r\n        \"m+\": (date.getMonth() + 1).toString(),     // 月\r\n        \"d+\": date.getDate().toString(),            // 日\r\n        \"H+\": date.getHours().toString(),           // 时\r\n        \"M+\": date.getMinutes().toString(),         // 分\r\n        \"S+\": date.getSeconds().toString()          // 秒\r\n        // 有其他格式化字符需求可以继续添加，必须转化成字符串\r\n    };\r\n    for (let k in opt) {\r\n        ret = new RegExp(\"(\" + k + \")\").exec(fmt);\r\n        if (ret) {\r\n            fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, \"0\")))\r\n        };\r\n    };\r\n    return fmt;\r\n  }","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport { Checkbox, Dropdown, Modal, Button } from \"semantic-ui-react\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nimport { Column, HeaderCell, Cell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { getList, updateOne, deleteOne, createOne } from \"utils/request\";\r\nimport   EditCell  from \"components/table/components/EditCell\";\r\nimport  EditTable from \"components/table/EditTable\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useState } from \"react\";\r\nimport {dateFormat} from 'utils/timeFormat';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nclass SessionTable extends Component {\r\n  static defaultProps = {\r\n    url: \"/session\",\r\n    idName: \"sessionId\",\r\n    dataToLabel: {\r\n      sessionId: \"ID\",\r\n      cinemaName: \"Cinema\",\r\n      time: \"Time\",\r\n      remainingSeats: \"Remaining Seats\",\r\n      filmName: \"Film\",\r\n      roomName: \"Room\",\r\n      status: \"Status\",\r\n    },\r\n\r\n    listName: \"list\",\r\n    tableHeader: \"Session Manage\",\r\n    // ------------------------\r\n    // Modal Form content ()\r\n    // ------------------------\r\n    modalHeader: \"Add a new session\",\r\n    labelNames: [\r\n      \"Cinema\",\r\n      \"Film\",\r\n      \"Time\",\r\n      \"Actors\",\r\n      \"Rating\",\r\n      \"Introduction\",\r\n\r\n      \"Poster\",\r\n      \"Status\",\r\n    ],\r\n    dataNames: [\r\n      \"name\",\r\n      \"duration\",\r\n      \"director\",\r\n      \"actors\",\r\n      \"rating\",\r\n      \"introduction\",\r\n\r\n      \"poster\",\r\n      \"status\",\r\n    ],\r\n    // descriptor: {\r\n    //   name: [\r\n    //     Rules.required(\"Film name\"),\r\n    //     Rules.isType(Rules.TYPE.string),\r\n    //     Rules.isDuplicate(\"/film/filmName-duplication\", \"name\"),\r\n    //   ],\r\n    // },\r\n  };\r\n  state = {\r\n    items: [],\r\n  };\r\n  componentWillMount() {\r\n    this.createSessionCols();\r\n  }\r\n  /**\r\n   * @param  {int} id : row data id\r\n   * @param  { r } selectedObj\r\n   */\r\n\r\n  onDropdownChange = async (id, selectedObj) => {\r\n    const { url } = this.props;\r\n    const { list } = this.child.state;\r\n    const { idName } = this.props;\r\n    for (let item of list) {\r\n      if (id === item[idName]) {\r\n        item[selectedObj.dropdownIdName] = selectedObj.dropdownItemId;\r\n        await updateOne(url, item);\r\n        this.child.updateTable();\r\n        break;\r\n      }\r\n    }\r\n\r\n    console.log(list);\r\n  };\r\n  onDatePickerChange = async (date, id) => {\r\n    const { url, idName } = this.props;\r\n    const { list } = this.child.state;\r\n    for (let item of list) {\r\n      if (id === item[idName]) {\r\n\r\n        item[\"time\"] =date\r\n        await updateOne(url, item);\r\n        this.child.updateTable();\r\n        break;\r\n      }\r\n    }\r\n\r\n    console.log(list);\r\n  };\r\n  createSessionCols = async () => {\r\n    const { url, listName, dataToLabel, idName } = this.props;\r\n    let list = [];\r\n    await getList(url, listName).then((myList) => {\r\n      list = myList;\r\n    });\r\n    /**  \r\n    \r\n    */\r\n    for (let item of list) {\r\n      item[\"cinemaName\"] = item[\"film\"][\"name\"];\r\n      item[\"filmName\"] = item[\"cinema\"][\"name\"];\r\n      item[\"roomName\"] = item[\"room\"][\"roomName\"];\r\n    }\r\n    console.log(\"--------\");\r\n    console.log(list);\r\n    let items = [],\r\n      count = 0;\r\n\r\n    const dataMapKeys = Object.keys(dataToLabel);\r\n\r\n    for (let key of dataMapKeys) {\r\n      let dropdownInfo = {};\r\n      let dropdownList = [];\r\n      switch (key) {\r\n        case \"cinemaName\":\r\n          await getList(\"/cinema\").then((myList) => {\r\n            dropdownList = myList;\r\n            dropdownInfo[\"tableName\"] = \"cinema\";\r\n            dropdownInfo[\"idName\"] = \"cinemaId\";\r\n            dropdownInfo[\"value\"] = \"name\";\r\n            dropdownInfo[\"url\"] = \"/cinema\";\r\n          });\r\n\r\n          break;\r\n        case \"filmName\":\r\n          await getList(\"/film\").then((myList) => {\r\n            dropdownList = myList;\r\n            dropdownInfo[\"tableName\"] = \"film\";\r\n            dropdownInfo[\"idName\"] = \"filmId\";\r\n            dropdownInfo[\"value\"] = \"name\";\r\n            dropdownInfo[\"url\"] = \"/film\";\r\n          });\r\n          break;\r\n        case \"roomName\":\r\n          await getList(\"/room\").then((myList) => {\r\n            dropdownList = myList;\r\n            dropdownInfo[\"tableName\"] = \"room\";\r\n            dropdownInfo[\"idName\"] = \"roomId\";\r\n            dropdownInfo[\"value\"] = \"roomName\";\r\n            dropdownInfo[\"url\"] = \"/room\";\r\n          });\r\n          break;\r\n        default:\r\n      }\r\n      if (key === \"cinemaName\" || key === \"filmName\" || key === \"roomName\") {\r\n        dropdownInfo[\"list\"] = dropdownList;\r\n        items.push(\r\n          <Column key={count} width={100} sort=\"true\" flexGrow align=\"center\">\r\n            <HeaderCell>{dataToLabel[key]}</HeaderCell>\r\n            <DropdownCell\r\n              idName={idName}\r\n              dataKey={key}\r\n              dropdownInfo={dropdownInfo}\r\n              onChange={this.onDropdownChange}\r\n            />\r\n            {/* onChange */}\r\n          </Column>\r\n        );\r\n        continue;\r\n      } else if (key === \"time\") {\r\n        items.push(\r\n          <Column key={count} width={100} sort=\"true\" resizable align=\"center\">\r\n            <HeaderCell>{dataToLabel[key]}</HeaderCell>\r\n            <DatePickerCell\r\n              idName={idName}\r\n              dataKey={key}\r\n              onChange={this.onDatePickerChange}\r\n            ></DatePickerCell>\r\n          </Column>\r\n        );\r\n      } else {\r\n        items.push(\r\n          <Column key={count} width={100} sort=\"true\" resizable align=\"center\">\r\n            <HeaderCell>{dataToLabel[key]}</HeaderCell>\r\n            <Cell\r\n              idName={idName}\r\n              dataKey={key}\r\n              onChange={this.child.handleChange}\r\n            />\r\n          </Column>\r\n        );\r\n      }\r\n    }\r\n    this.setState({ items });\r\n\r\n    return null;\r\n  };\r\n  render() {\r\n    let { items } = this.state;\r\n\r\n    return (\r\n      <EditTable\r\n        {...this.props}\r\n        tableColumns={items}\r\n        onRef={(ref) => {\r\n          this.child = ref;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst DropdownCell = ({\r\n  rowData,\r\n  dataKey,\r\n  onChange,\r\n  idName,\r\n  dropdownInfo,\r\n  onOpen,\r\n  onClose,\r\n  ...props\r\n}) => {\r\n  // must deliver  dataKey, IdKey, onChange like IdKey=\"adminId\" onChange={this.handleChange} dataKey=\"password\"\r\n  let options = [];\r\n  for (let item of dropdownInfo[\"list\"]) {\r\n    let opt = {\r\n      key: item[dropdownInfo[\"idName\"]],\r\n      text: item[dropdownInfo[\"value\"]],\r\n      value: item[dropdownInfo[\"value\"]],\r\n    };\r\n    options.push(opt);\r\n  }\r\n\r\n  return (\r\n    <Cell {...props}>\r\n      <Modal\r\n        trigger={\r\n          <Button\r\n            content={rowData[dropdownInfo[\"tableName\"]][dropdownInfo[\"value\"]]}\r\n          />\r\n        }\r\n      >\r\n        <Dropdown\r\n          fluid\r\n          selection\r\n          search\r\n          options={options}\r\n          onChange={(e, data) => {\r\n            let dropdownItemId = -1;\r\n            for (let opt of options) {\r\n              if (opt[\"value\"] === data.value) {\r\n                dropdownItemId = opt[\"key\"];\r\n                break;\r\n              }\r\n            }\r\n            const obj = {\r\n              dropdownItemId: dropdownItemId,\r\n              dropdownIdName: dropdownInfo[\"idName\"],\r\n            };\r\n            onChange(rowData[idName], obj);\r\n          }}\r\n          placeholder={\r\n            rowData[dropdownInfo[\"tableName\"]][dropdownInfo[\"value\"]]\r\n          }\r\n        />\r\n      </Modal>\r\n    </Cell>\r\n  );\r\n};\r\n\r\nconst DatePickerCell = ({ rowData, dataKey, onChange, idName, ...props }) => {\r\n  const [date, setNewDate] = useState();\r\n  // must deliver  dataKey, IdKey, onChange like IdKey=\"adminId\" onChange={this.handleChange} dataKey=\"password\"\r\n\r\n  return (\r\n    <Cell {...props}>\r\n      <Modal trigger={<Button content={rowData[dataKey]} />}>\r\n        <MyDatePicker\r\n          date={rowData[dataKey]}\r\n          itemId={rowData[idName]}\r\n          onChange={onChange}\r\n        />\r\n      </Modal>\r\n    </Cell>\r\n  );\r\n};\r\n\r\nexport default SessionTable;\r\nconst MyDatePicker = ({ date, itemId, onChange, ...props }) => {\r\n  const [startDate, setStartDate] = useState(new Date(date));\r\n\r\n  return (\r\n    <DatePicker\r\n      selected={startDate}\r\n      onChange={(date) => {\r\n        setStartDate(date);\r\n        onChange(dateFormat(date), itemId);\r\n      }}\r\n      showTimeSelect\r\n      timeFormat=\"HH:mm\"\r\n      timeIntervals={15}\r\n      timeCaption=\"time\"\r\n      dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n    />\r\n  );\r\n};\r\n\r\n","import { FormFieldInput } from \"components/base/form/FormFieldInput\";\r\nimport React, { useState } from \"react\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Checkbox, Form, Header, Segment } from \"semantic-ui-react\";\r\nimport Api from \"utils/api\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nimport BaseForm from \"components/base/form/BaseTableForm\";\r\nconst { User } = Api;\r\nconst api = User;\r\nexport default ({ rowData, type, formProps }) => {\r\n  const FormField = Form.Field;\r\n  const {\r\n    dispatch,\r\n    updateFormMsg,\r\n    fieldValidate,\r\n    canDispatch,\r\n    getDescriptors,\r\n    createStateFromDataProps,\r\n  } = formProps;\r\n  let header = {\r\n    update: \"Edit a user\",\r\n    create: \"Add a user\",\r\n  };\r\n  header = header[type];\r\n  const dataProps = {\r\n    username: {\r\n      descriptor: {\r\n        username: [Rules.required(\"username\")],\r\n      },\r\n      dataKey: \"username\",\r\n      title: \"Username\",\r\n      placeholder: \"Please enter username\",\r\n    },\r\n    password: {\r\n      descriptor: {\r\n        password: [Rules.required(\"usepasswordrname\")],\r\n      },\r\n      dataKey: \"password\",\r\n      title: \"Password\",\r\n      placeholder: \"Please enter password\",\r\n    },\r\n    email: {\r\n      descriptor: {\r\n        email: [Rules.required(\"email\")],\r\n      },\r\n      dataKey: \"email\",\r\n      title: \"Email\",\r\n      placeholder: \"Please enter your email\",\r\n    },\r\n    tel: {\r\n      descriptor: {\r\n        tel: [Rules.required(\"tel\")],\r\n      },\r\n      dataKey: \"tel\",\r\n      title: \"Phone number\",\r\n      placeholder: \"Please enter your phone number\",\r\n    },\r\n    isStudent: {\r\n      dataKey: \"isStudent\",\r\n      title: \"Is a student\",\r\n      placeholder: \"Are you a student\",\r\n    },\r\n  };\r\n  const [state, setState] = useState(() => {\r\n    const rowDataExisted = rowData !== undefined;\r\n    const obj = createStateFromDataProps(rowDataExisted, dataProps, rowData);\r\n    return {\r\n      ...obj,\r\n      userId: rowDataExisted ? rowData[\"userId\"] : \"\",\r\n      errMsg: {},\r\n    };\r\n  });\r\n  const descriptors = getDescriptors(dataProps);\r\n  formProps = {\r\n    ...formProps,\r\n    state,\r\n    setState,\r\n    descriptors,\r\n    header,\r\n    dataProps,\r\n    type,\r\n    api,\r\n  };\r\n  const getUsernameField = (key) => {\r\n    const dataName = \"username\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getPasswordField = (key) => {\r\n    const dataName = \"password\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getEmailField = (key) => {\r\n    const dataName = \"email\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getTelField = (key) => {\r\n    const dataName = \"tel\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getIsStudentField = (key) => {\r\n    const { dataKey, title, placeholder } = dataProps[\"isStudent\"];\r\n    const initVal = state.isStudent === 0 ? false : true;\r\n    const onIsStudentChange = (e, val) => {\r\n      const status = val[\"checked\"];\r\n      console.log(val[\"checked\"]);\r\n      setState({\r\n        ...state,\r\n        isStudent: status === true ? 1 : 0,\r\n      });\r\n    };\r\n    return (\r\n      <FormField\r\n        key={key}\r\n        defaultChecked={initVal}\r\n        control={Checkbox}\r\n        label={title}\r\n        onChange={onIsStudentChange}\r\n        placeholder={placeholder}\r\n        name={dataKey}\r\n      />\r\n    );\r\n  };\r\n\r\n  // NOTE:  写成组件形式会导致重复render->失焦\r\n  const getForms = () => {\r\n    let index = 0;\r\n    let formFields = [];\r\n    formFields.push(getUsernameField(index++));\r\n    formFields.push(getPasswordField(index++));\r\n    formFields.push(getEmailField(index++));\r\n    formFields.push(getTelField(index++));\r\n    formFields.push(getIsStudentField(index++));\r\n    return formFields;\r\n  };\r\n  const formFields = getForms();\r\n  formProps = {\r\n    ...formProps,\r\n    formFields,\r\n  };\r\n  return <BaseForm formProps={formProps} />;\r\n};\r\n","import UserForm from \"components/admin/user/UserForm\";\r\nimport EditTable from \"components/table/EditTable\";\r\nimport React, { Component } from \"react\";\r\nimport { Cell, Column, HeaderCell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nclass UserTable extends Component {\r\n  static defaultProps = {\r\n    tableHeaders: [\r\n      {\r\n        title: \"ID\",\r\n        dataKey: \"userId\",\r\n      },\r\n      {\r\n        title: \"Username\",\r\n        dataKey: \"username\",\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        dataKey: \"email\",\r\n      },\r\n      {\r\n        title: \"Password\",\r\n        dataKey: \"password\",\r\n      },\r\n      {\r\n        title: \"Phone Number\",\r\n        dataKey: \"tel\",\r\n      },\r\n      {\r\n        title: \"Student\",\r\n        dataKey: \"isStudent\",\r\n      },\r\n    ],\r\n    url: \"/user\",\r\n    idName: \"userId\",\r\n    tableTitle: \"User Manage\",\r\n  };\r\n  state = {\r\n    columns: [],\r\n    isStudent: null,\r\n  };\r\n  componentWillMount() {\r\n    this.createUserCols();\r\n  }\r\n\r\n  // NOTE: async function return a Promise!!!\r\n  createUserCols = async () => {\r\n    const { tableHeaders } = this.props;\r\n    let columns = [],\r\n      index = 0;\r\n    for (const header of tableHeaders) {\r\n      if (header.dataKey === \"isStudent\") {\r\n        continue;\r\n      }\r\n      columns.push(\r\n        <Column key={index++} width={200} resizable align=\"center\">\r\n          <HeaderCell>{header[\"title\"]}</HeaderCell>\r\n          <Cell dataKey={header[\"dataKey\"]} />\r\n        </Column>\r\n      );\r\n    }\r\n    columns.push(\r\n      <Column key={index++} width={200} resizable align=\"center\">\r\n        <HeaderCell>{\"isStudent\"}</HeaderCell>\r\n        <Cell>\r\n          {(rowData, rowIndex) => {\r\n            return rowData[\"isStudent\"] !== 0 ? \"True\" : \"False\";\r\n          }}\r\n        </Cell>\r\n      </Column>\r\n    );\r\n    this.setState({ columns });\r\n  };\r\n  getFormElement = (type, formProps, rowData) => {\r\n    return <UserForm rowData={rowData} type={type} formProps={formProps} />;\r\n  };\r\n  render() {\r\n    let { columns } = this.state;\r\n    return (\r\n      <EditTable\r\n        {...this.props}\r\n        tableColumns={columns}\r\n        getFormElement={this.getFormElement}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserTable;\r\n","import { FormFieldInput } from \"components/base/form/FormFieldInput\";\r\nimport React, { useState } from \"react\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Form, Segment, Header, Modal } from \"semantic-ui-react\";\r\nimport Api from \"utils/api\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nimport BaseForm from \"components/base/form/BaseTableForm\";\r\nconst { Cinema } = Api;\r\nconst api = Cinema;\r\nexport const CinemaForm = ({ rowData, type, formProps }) => {\r\n  let header = {\r\n    update: \"Edit a cinema\",\r\n    create: \"Add a cinema\",\r\n  };\r\n  const dataProps = {\r\n    name: {\r\n      descriptor: {\r\n        name: [Rules.required(\"Cinema\")],\r\n      },\r\n      dataKey: \"name\",\r\n      title: \"Cinema\",\r\n      placeholder: \"Please enter a cinema name\",\r\n    },\r\n    tel: {\r\n      descriptor: {\r\n        tel: [Rules.required(\"cinema contact\")],\r\n      },\r\n      dataKey: \"tel\",\r\n      title: \"Telephone number\",\r\n      placeholder: \"Please enter the cinema contact\",\r\n    },\r\n    location: {\r\n      descriptor: {\r\n        location: [Rules.required(\"location\")],\r\n      },\r\n      dataKey: \"location\",\r\n      title: \"Location\",\r\n      placeholder: \"Please enter the location\",\r\n    },\r\n  };\r\n  header = header[type];\r\n  const FormField = Form.Field;\r\n  const {\r\n    dispatch,\r\n    updateFormMsg,\r\n    fieldValidate,\r\n    canDispatch,\r\n    getDescriptors,\r\n    createStateFromDataProps,\r\n    clearInputVal,\r\n  } = formProps;\r\n  const [state, setState] = useState(() => {\r\n    const rowDataExisted = rowData !== undefined;\r\n    const obj = createStateFromDataProps(rowDataExisted, dataProps, rowData);\r\n    return {\r\n      ...obj,\r\n      cinemaId: rowDataExisted ? rowData[\"cinemaId\"] : \"\",\r\n      errMsg: {},\r\n    };\r\n  });\r\n\r\n  const descriptors = getDescriptors(dataProps);\r\n  formProps = {\r\n    ...formProps,\r\n    state,\r\n    setState,\r\n    descriptors,\r\n    header,\r\n    dataProps,\r\n    type,\r\n    api,\r\n  };\r\n  const getNameField = (key) => {\r\n    const fieldProps = {\r\n      ...dataProps[\"name\"],\r\n      initVal: state.name,\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getTelField = (key) => {\r\n    const fieldProps = {\r\n      ...dataProps[\"tel\"],\r\n      initVal: state.tel,\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getLocationField = (key) => {\r\n    const fieldProps = {\r\n      ...dataProps[\"location\"],\r\n      initVal: state.location,\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  // NOTE:  写成组件形式会导致重复render->失焦\r\n  const getForms = () => {\r\n    let formFields = [];\r\n    let index = 0;\r\n    formFields.push(getNameField(index++));\r\n    formFields.push(getLocationField(index++));\r\n    formFields.push(getTelField(index++));\r\n    return formFields;\r\n  };\r\n  const formFields = getForms();\r\n  formProps = {\r\n    ...formProps,\r\n    formFields,\r\n  };\r\n  return (\r\n    <BaseForm formProps={formProps} />\r\n  );\r\n};\r\n","\r\nimport { CinemaForm } from \"components/admin/cinema/CinemaForm\";\r\nimport EditTable from \"components/table/EditTable\";\r\nimport React, { Component } from \"react\";\r\nimport { Cell, Column, HeaderCell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nclass CinemaTable extends Component {\r\n  static defaultProps = {\r\n    tableHeaders: [\r\n      {\r\n        title: \"ID\",\r\n        dataKey: \"cinemaId\",\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        dataKey: \"name\",\r\n      },\r\n      {\r\n        title: \"Location\",\r\n        dataKey: \"location\",\r\n      },\r\n      {\r\n        title: \"Tel\",\r\n        dataKey: \"tel\",\r\n      },\r\n    \r\n    ],\r\n    url: \"/cinema\",\r\n    idName: \"cinemaId\",\r\n    tableTitle: \"Cinema Manage\",\r\n  };\r\n  state = {\r\n    columns: [],\r\n\r\n  };\r\n  componentWillMount() {\r\n    this.createCinemaCols();\r\n  }\r\n  // NOTE: async function return a Promise!!!\r\n  createCinemaCols = async () => {\r\n    const { tableHeaders } = this.props;\r\n    let columns = [];\r\n    let index=0\r\n    for (const header of tableHeaders) {\r\n      columns.push(\r\n        <Column key={index++} width={200} resizable align=\"center\">\r\n          <HeaderCell>{header[\"title\"]}</HeaderCell>\r\n          <Cell dataKey={header[\"dataKey\"]} />\r\n        </Column>\r\n      );\r\n    }\r\n    this.setState({ columns });\r\n  };\r\n  getFormElement = (type, formProps, rowData) => {\r\n\r\n    return <CinemaForm rowData={rowData} type={type} formProps={formProps} />;\r\n  };\r\n  render() {\r\n    let { columns } = this.state;\r\n    console.log(columns);\r\n    return (\r\n      <EditTable\r\n        {...this.props}\r\n        tableColumns={columns}\r\n        getFormElement={this.getFormElement}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CinemaTable;","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport { Grid, Menu, Sidebar, Segment, Table } from \"semantic-ui-react\";\r\n\r\n\r\n\r\nclass CommentTable extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentTable;","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport { Grid, Menu, Sidebar, Segment, Table, Button } from \"semantic-ui-react\";\r\nimport AdminSidebar from \"./adminSidebar\";\r\nimport AdminTable from \"components/admin/admin/adminTable\";\r\nimport FilmTable from \"../film/filmTable\";\r\nimport OrderTable from \"../order/orderTable\";\r\nimport SessionTable from \"../tables/sessionTable\";\r\nimport UserTable from \"../user/userTable\";\r\nimport CinemaTable from \"../cinema/cinemaTable\";\r\nimport CommentTable from \"components/admin/tables/commentTable.js\";\r\nexport default class AdminIndex extends Component {\r\n  // carefully check Menu.Item and Menu.item\r\n  state = {\r\n    visible: false,\r\n  };\r\n  handleClick() {\r\n    let { visible } = this.state;\r\n    visible = !visible;\r\n    this.setState({ visible });\r\n  }\r\n  render() {\r\n    // NOTE the best way to write css in react\r\n    const { visible } = this.state;\r\n\r\n    const minHeight = document.body.clientHeight + \"px\";\r\n    let windowHeight = { minHeight: minHeight };\r\n\r\n\r\n    return (\r\n      <Sidebar.Pushable>\r\n        <Grid columns={1}>\r\n          <Grid.Row stretched>\r\n            <Grid.Column style={windowHeight}>\r\n              <AdminSidebar visible={visible} />\r\n              <Sidebar.Pusher>\r\n                <Menu>\r\n                  <Menu.Item\r\n                    as={Button}\r\n                    icon=\"sidebar\"\r\n                    onClick={this.handleClick.bind(this)}\r\n                  />\r\n                </Menu>\r\n\r\n                <Switch>\r\n                  <Route path=\"/admin/admin-manage\"  component={AdminTable} />\r\n                  <Route path=\"/admin/order-manage\" component={OrderTable} />\r\n                  <Route\r\n                    path=\"/admin/session-manage\"\r\n                    component={SessionTable}\r\n                  />\r\n                  <Route path=\"/admin/film-manage\" component={FilmTable} />\r\n                  <Route path=\"/admin/cinema-manage\" component={CinemaTable} />\r\n                  <Route\r\n                    path=\"/admin/comment-manage\"\r\n                    component={CommentTable}\r\n                  />\r\n                  <Route path=\"/admin/user-manage\" component={UserTable} />\r\n                </Switch>\r\n              </Sidebar.Pusher>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Sidebar.Pushable>\r\n    );\r\n  }\r\n}\r\n","const initState = {\r\n  userId: \"\",\r\n};\r\nconst actionTypes = {\r\n  SAVE_USER_ID: \"saveUserId\",\r\n  CLEAR_USER_ID: \"clearUserId\",\r\n};\r\nexport const actions = {\r\n  saveUserId: function (data) {\r\n    console.log(`UserId is ${data}`)\r\n    return {\r\n      type: actionTypes.SAVE_USER_ID,\r\n      data,\r\n    };\r\n  },\r\n  clearUserId: function () {\r\n    return {\r\n      type: actionTypes.CLEAR_USER_ID,\r\n      data: \"\",\r\n    };\r\n  },\r\n};\r\nexport const userReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SAVE_USER_ID:\r\n\r\n      return {\r\n        ...state,\r\n        userId: action.data,\r\n      };\r\n    case actionTypes.CLEAR_USER_ID:\r\n      return {\r\n        ...state,\r\n        userId: -1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n/**\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  rePassword: \"\",\r\n  accessToken: \"\",\r\n\r\n  HANDLE_CHANGE_EMAIL: \"handleChangeEmail\",\r\n  SUBMIT: \"submit\",\r\n  HANDLE_CHANGE_PASSWORD: \"handleChangePassword\",\r\n  HANDLE_CHANGE_USERNAME: \"handleChangeUsername\",\r\n  GET_ACCESS_TOKEN: \"getAccessToken\",\r\nsubmitRegisterInfo: function (data) {\r\n  return {\r\n    type: actionTypes.SUBMIT,\r\n    data,\r\n  };\r\n},\r\nhandleChangePassword: function (data) {\r\n  return {\r\n    type: actionTypes.HANDLE_CHANGE_PASSWORD,\r\n    data,\r\n  };\r\n},\r\nhandleChangeUsername: function (data) {\r\n  return {\r\n    type: actionTypes.HANDLE_CHANGE_USERNAME,\r\n    data,\r\n  };\r\n},\r\nhandleChangeEmail: function (data) {\r\n  return {\r\n    type: actionTypes.HANDLE_CHANGE_EMAIL,\r\n    data,\r\n  };\r\n},\r\ngetAccessToken: function (data) {\r\n  return {\r\n    type: actionTypes.GET_ACCESS_TOKEN,\r\n    data,\r\n  };\r\n},\r\n\r\nexport const userReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SUBMIT:\r\n      return {\r\n        ...state,\r\n        username: action.data,\r\n      };\r\n    case actionTypes.HANDLE_CHANGE_EMAIL:\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        email: action.data,\r\n      };\r\n\r\n    case actionTypes.HANDLE_CHANGE_USERNAME:\r\n      return {\r\n        ...state,\r\n        username: action.data,\r\n      };\r\n\r\n    case actionTypes.HANDLE_CHANGE_PASSWORD:\r\n      return {\r\n        ...state,\r\n        password: action.data,\r\n      };\r\n    case actionTypes.GET_ACCESS_TOKEN:\r\n      return {\r\n        ...state,\r\n        accessToken: action.data,\r\n      };\r\n    case actionTypes.SAVE_USER_ID:\r\n      return {\r\n        ...state,\r\n        userId: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n*/\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  Form,\r\n  FormInput,\r\n  Grid,\r\n  Segment,\r\n  Message,\r\n  Header,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { BrowserRouter as Router,Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actions } from \"redux/user\";\r\nimport PropTypes from \"prop-types\";\r\nimport { auth } from \"utils/request\";\r\n// import history from \"utils/history\";\r\nclass LoginForm extends Component {\r\n  static contextTypes = {\r\n    router: PropTypes.object.isRequired,\r\n  };\r\n  state = {\r\n    proof: \"\",\r\n    password: \"\",\r\n  };\r\n  static propTypes = {\r\n    accessToken: PropTypes.string,\r\n  };\r\n  submit() {\r\n    const { proof, password } = this.state;\r\n    const {saveUserId}=this.props\r\n    const params = { proof, password };\r\n    auth(params).then((res) => {\r\n      console.log(`UserId is ${res[\"data\"][\"userId\"]}`)\r\n      saveUserId(res[\"data\"][\"userId\"])\r\n      setTimeout(this.props.history.replace(\"/index\"), 1000);\r\n    });\r\n  }\r\n  render() {\r\n    const { proof, password } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.submit.bind(this)}>\r\n        <Segment stacked>\r\n          <Form.Field>\r\n            <Input\r\n              icon=\"user\"\r\n              placeholder=\"Username or email\"\r\n              type=\"text\"\r\n              value={proof}\r\n              onChange={(e) => this.setState({ proof: e.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Input\r\n              icon=\"lock\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => this.setState({ password: e.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Button primary type=\"submit\" fluid>\r\n            Login\r\n          </Button>\r\n        </Segment>\r\n        <Message>\r\n          <Link to=\"/forget-pwd\">Forget password?</Link>{\" \"}\r\n          <Link to=\"/register\" style={{ float: \"right\" }}>\r\n            Register\r\n          </Link>\r\n        </Message>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    userId: state.user.userId,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    saveUserId: bindActionCreators(actions.saveUserId, dispatch),\r\n  };\r\n}\r\n\r\n//   const RegisterForm=RegisterFormUI\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(LoginForm)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  Form,\r\n  FormInput,\r\n  Grid,\r\n  Segment,\r\n  Message,\r\n  Header,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport {withRouter } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport LoginForm from \"./loginForm\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nclass Login extends Component {\r\n  static contextTypes = {\r\n    router: PropTypes.object.isRequired,\r\n  };\r\n  render() {\r\n  \r\n    \r\n    return (\r\n      <Grid\r\n        container\r\n        centered\r\n        textAlign=\"center\"\r\n        style={{ marginTop: \"10%\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Row>\r\n          <Grid.Column width={8}>\r\n            <Header as=\"h1\" textAlign=\"center\">\r\n              Login in\r\n            </Header>\r\n            <LoginForm />\r\n          </Grid.Column>{\" \"}\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    //   username: state.registerReducer.username,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    // handleChangeUsername:bindActionCreators(actions.handleChangeUsername,dispatch),\r\n  };\r\n}\r\n\r\n//   const RegisterForm=RegisterFormUI\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(Login)) \r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { actions } from \"../../../redux/user\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport schema from \"async-validator\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nimport Alert from \"components/public/Alert\";\r\nimport {\r\n  Grid,\r\n  Segment,\r\n  Form,\r\n  Message,\r\n  Input,\r\n  Checkbox,\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  getList,\r\n  updateOne,\r\n  deleteOne,\r\n  createOne,\r\n  getOne,\r\n} from \"utils/request\";\r\nclass RegisterFormUI extends Component {\r\n  static defaultProps = {\r\n    descriptor: {\r\n      username: [\r\n        Rules.required(\"Username\"),\r\n        Rules.isLength(3, 10, \"Username\"),\r\n        Rules.isType(Rules.TYPE.string),\r\n        Rules.isDuplicate(\"/user/username-duplication\", \"username\"),\r\n      ],\r\n      password: [Rules.required(\"password\"), Rules.isLength(3, 10)],\r\n      email: [Rules.required(\"Email\"), Rules.isType(Rules.TYPE.email)],\r\n    },\r\n  };\r\n\r\n  state = {\r\n    isStudent: 0,\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    rePassword: \"\",\r\n    errorInfo: {\r\n      header: \"\",\r\n      show: false,\r\n      contentList: [],\r\n    },\r\n  };\r\n\r\n  // Change(e){\r\n  //   //e.target.name代表你当前输入Input框对应的Name,如email,password\r\n  // // e.target.value 代表当前输入的值\r\n  // this.setState({\r\n  //   [e.target.name] : e.target.value\r\n  // })\r\n  submit = () => {\r\n    const { descriptor, history } = this.props;\r\n    let {\r\n      email,\r\n      password,\r\n      username,\r\n      rePassword,\r\n      isStudent,\r\n      errorInfo,\r\n    } = this.state;\r\n    errorInfo.contentList = [];\r\n    let validator = new schema(descriptor);\r\n\r\n    let obj = {\r\n      username: username,\r\n      email: email,\r\n      password: password,\r\n      rePassword: rePassword,\r\n      isStudent: isStudent,\r\n    };\r\n    validator\r\n      .validate(obj)\r\n      .then(async (e) => {\r\n        if (password === rePassword) {\r\n          await createOne(\"/user\", obj);\r\n          Alert.show(\"Sign up\", \"Successfully!\");\r\n          setTimeout(history.push(\"/index\"), 1000);\r\n          errorInfo.show = false;\r\n        } else {\r\n          errorInfo.contentList.push(\"passwords are not same\");\r\n          errorInfo.show = true;\r\n        }\r\n        this.setState({ errorInfo });\r\n      })\r\n      .catch(({ errors, fields }) => {\r\n        errorInfo.header = \"Error\";\r\n        for (let error of errors) {\r\n          errorInfo.contentList.push(error[\"message\"]);\r\n        }\r\n        errorInfo.show = true;\r\n        this.setState({ errorInfo });\r\n      });\r\n  };\r\n  render() {\r\n    const { isStudent, errorInfo } = this.state;\r\n\r\n    return (\r\n      <Grid centered>\r\n        <Grid.Column width={8}>\r\n          <Form onSubmit={this.submit}>\r\n            <Segment>\r\n              <Form.Field\r\n                control={Input}\r\n                icon=\"user\"\r\n                placeholder=\"Username\"\r\n                type=\"text\"\r\n                onChange={(e) => this.setState({ username: e.target.value })}\r\n                value={this.props.username}\r\n              />\r\n\r\n              <Form.Field\r\n                control={Input}\r\n                icon=\"mail\"\r\n                placeholder=\"Email\"\r\n                type=\"text\"\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n                value={this.props.email}\r\n              />\r\n\r\n              <Form.Field\r\n                control={Input}\r\n                icon=\"lock\"\r\n                placeholder=\"Enter password\"\r\n                type=\"password\"\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n                value={this.props.password}\r\n              />\r\n\r\n              <Form.Field\r\n                control={Input}\r\n                placeholder=\"Enter password again\"\r\n                type=\"password\"\r\n                icon=\"lock\"\r\n                onChange={(e) => this.setState({ rePassword: e.target.value })}\r\n              />\r\n\r\n              <Form.Field\r\n                control={Checkbox}\r\n                toggle\r\n                label=\"Are you a student?\"\r\n                onClick={() => {\r\n                  this.setState({ isStudent: !isStudent });\r\n                }}\r\n              />\r\n              {isStudent ? (\r\n                <Form.Input placeholder=\"Enter your student ID\"></Form.Input>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {errorInfo.show ? <ErrorMessage errorInfo={errorInfo} /> : \"\"}\r\n\r\n              <Form.Button primary type=\"submit\" className=\"btn\" fluid>\r\n                Sign up\r\n              </Form.Button>\r\n            </Segment>\r\n            <Message>\r\n              <Link>Forget password?</Link>\r\n            </Message>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    // userId: state.user.userId,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    // saveUserId: bindActionCreators(actions.saveUserId, dispatch),\r\n  };\r\n}\r\nconst RegisterForm = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RegisterFormUI);\r\nexport default withRouter(RegisterForm);\r\n\r\nconst ErrorMessage = ({ errorInfo }) => {\r\n  const { show, header, contentList } = errorInfo;\r\n  return <Message header={header} list={contentList} />;\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport poster from \"../../../poster.jpg\";\r\nimport axios from \"axios\";\r\nimport { actions } from \"../../../redux/user\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Responsive,\r\n  Segment,\r\n  Sidebar,\r\n  Form,\r\n  Message,\r\n  Visibility,\r\n  Input,\r\n  Checkbox,\r\n  Label,\r\n  Card,\r\n  Rating\r\n} from \"semantic-ui-react\";\r\nimport RegisterFormUI from './registerForm'\r\nclass RegisterUI extends Component {\r\n  render() {\r\n    const h = document.body.clientHeight;\r\n    return (\r\n      <Grid verticalAlign=\"middle\" className=\"my_container\">\r\n        <Grid.Row style={{ height: h + \"px\" }}>\r\n          <Grid.Column width={8}>\r\n            <Message>Enjoy Movie</Message>{\" \"}\r\n          </Grid.Column>\r\n          <Grid.Column width={8}>\r\n            <RegisterFormUI />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst Register = connect()(RegisterUI);\r\nexport default Register;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  Grid,\r\n  Icon,\r\n  Image,\r\n  Menu,\r\n  Input,\r\n  Card,\r\n  Rating,\r\n} from \"semantic-ui-react\";\r\nimport login from \"../user/login/login\";\r\nimport Register from \"../user/register/register\";\r\nimport { getList, updateOne, deleteOne, createOne } from \"utils/request\";\r\nexport default class TopMenu extends Component {\r\n  state = {\r\n    activeItem: \"\",\r\n  };\r\n  render() {\r\n    var sto = window.sessionStorage;\r\n    let profileUrl = \"/profile\";\r\n\r\n    const { activeItem } = this.state;\r\n    return (\r\n      <Grid>\r\n        <Grid.Row columns={1} verticalAlign=\"middle\">\r\n          <Grid.Column width={16}>\r\n            <Menu>\r\n              {/* <span>Logo</span> */}\r\n\r\n              <NavLink to=\"/index\">\r\n                <Menu.Item\r\n                  icon=\"home\"\r\n                  name=\"Index\"\r\n                  active={activeItem === \"index\"}\r\n                  onClick={this.handleItemClick}\r\n                >\r\n                  <Icon name=\"home\" />\r\n                  Index\r\n                </Menu.Item>\r\n              </NavLink>\r\n              <NavLink to=\"/cinema\">\r\n                <Menu.Item\r\n                  name=\"Cinema\"\r\n                  active={activeItem === \"cinema\"}\r\n                  onClick={this.handleItemClick}\r\n                >\r\n                  <Icon name=\"video\"></Icon>\r\n                  Cinema\r\n                </Menu.Item>\r\n              </NavLink>\r\n              <NavLink to=\"/film\">\r\n                <Menu.Item\r\n                  name=\"films\"\r\n                  active={activeItem === \"films\"}\r\n                  onClick={this.handleItemClick}\r\n                >\r\n                  <Icon name=\"film\"></Icon>\r\n                  Films\r\n                </Menu.Item>\r\n              </NavLink>\r\n              <Menu.Menu position=\"right\">\r\n                <NavLink to={\"/profile\"}>\r\n                  {\" \"}\r\n                  <Menu.Item\r\n                    name=\"profile\"\r\n                    active={activeItem === \"profile\"}\r\n                    onClick={this.handleItemClick}\r\n                  >\r\n                    <Icon name=\"user\" />\r\n                  </Menu.Item>\r\n                </NavLink>\r\n                <Menu.Item>\r\n                  <Input\r\n                    type=\"text\"\r\n                    icon=\"search\"\r\n                    placeholder=\"Search Films...\"\r\n                  />\r\n                </Menu.Item>\r\n              </Menu.Menu>\r\n            </Menu>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","export function getPlaceHolder(width, height) {\r\n  let baseURL = \"https://picsum.photos/\";\r\n  if (width === undefined && height === undefined) {\r\n    return baseURL+\"480/320\";\r\n  } else if(width !== undefined &&height === undefined){\r\n    return baseURL + width ;\r\n  }else{\r\n    return baseURL + width + \"/\" + height;\r\n  }\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Icon,\r\n  Image,\r\n  Menu,\r\n  Input,\r\n  Card,\r\n  Rating,\r\n  Placeholder,\r\n} from \"semantic-ui-react\";\r\nimport { getList, updateOne, deleteOne, createOne } from \"utils/request\";\r\nimport {getPlaceHolder} from \"utils/placeHolder\"\r\nexport default class IndexBody extends Component {\r\n  state = {\r\n    filmList: [],\r\n  };\r\n\r\n  componentWillMount() {\r\n    let filmList=[]\r\n    getList(\"/film\").then(list=>{\r\n        \r\n       filmList=list\r\n       this.setState({ filmList });\r\n    });\r\n\r\n    console.log(filmList)\r\n  }\r\n  render() {\r\n\r\n    let { filmList } = this.state;\r\n    const items=[]\r\n    if(filmList===undefined){\r\n      filmList=[]\r\n    }\r\n    filmList.map((data, index) => {\r\n      items.push (\r\n        <Grid.Column textAlign=\"center\">\r\n          <FilmCard\r\n            key={index}\r\n            filmData={data}\r\n          />\r\n        </Grid.Column>\r\n      );\r\n      return null\r\n    })\r\n    return (\r\n      <Grid container columns={4} celled>\r\n        <Grid.Row>\r\n          {items}\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nclass FilmCard extends Component {\r\n  state = {};\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleOnRate = this.handleOnRate.bind(this);\r\n  }\r\n  handleOnRate(e, { rating, maxRating }) {\r\n\r\n  }\r\n  render() {\r\n      const {filmData}=this.props\r\n    return (\r\n      <Card size=\"large\" centered style={{ width: \"115px\" }}>\r\n        <Link to={\"/film/\"+filmData.filmId}>\r\n          <Image\r\n            size=\"big\"\r\n            style={{ width: \"115px\", height: \"163px\" }}\r\n            src={getPlaceHolder(115,163)}\r\n          ></Image>\r\n          <Card.Content>{filmData.name}</Card.Content>\r\n          {/* {this.props.name} */}\r\n        </Link>\r\n        <Rating\r\n          defaultRating={3}\r\n          onRate={this.handleOnRate}\r\n          maxRating={5}\r\n          icon=\"star outline\"\r\n        ></Rating>{\" \"}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n// \"duration\": null,\r\n// \"actors\": null,\r\n// \"director\": null,\r\n// \"filmId\": 18,\r\n// \"name\": \"www\",\r\n// \"rating\": null,\r\n// \"typeId\": 4,\r\n// \"type\": \"what\",\r\n// \"poster\": null,\r\n// \"introduction\": null,\r\n// \"status\": \"Not released\"\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport {\r\n  Link,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport { Grid, Icon, Image, List, Item, Button } from \"semantic-ui-react\";\r\nimport { getPlaceHolder } from \"utils/placeHolder\";\r\nimport {\r\n  getList,\r\n  updateOne,\r\n  deleteOne,\r\n  createOne,\r\n  getOne,\r\n} from \"utils/request\";\r\nimport { Table, Column, HeaderCell, Cell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nclass SessionInfo extends Component {\r\n  static defaultProps = {\r\n    url: \"/session\",\r\n    idName: \"sessionId\",\r\n    dataToLabel: {\r\n      sessionId: \"ID\",\r\n      cinemaName: \"Cinema\",\r\n      time: \"Time\",\r\n      remainingSeats: \"Remaining Seats\",\r\n      filmName: \"Film\",\r\n      roomName: \"Room\",\r\n      status: \"Status\",\r\n    },\r\n    // TODO: decrease the number var as soon as possible\r\n    listName: \"list\",\r\n  };\r\n  state = {\r\n    list: [],\r\n    cols: [],\r\n    sessionList: [],\r\n  };\r\n  componentWillReceiveProps(nextProp) {\r\n    console.log(nextProp.sessionList);\r\n    this.createAdminCols();\r\n  }\r\n  handleBook = (id) => {\r\n    const { history } = this.props;\r\n    setTimeout(history.push(\"/session/\" + id), 500);\r\n  };\r\n  createAdminCols = () => {\r\n    const { url, dataToLabel, idName } = this.props;\r\n\r\n    let cols = [];\r\n\r\n    const dataMapKeys = Object.keys(dataToLabel);\r\n    dataMapKeys.forEach((dataKey) => {\r\n      cols.push(\r\n        <Column width={100} align=\"center\" flexGrow>\r\n          <HeaderCell>{dataToLabel[dataKey]}</HeaderCell>\r\n          <Cell dataKey={dataKey} idName={idName} />\r\n        </Column>\r\n      );\r\n    });\r\n    cols.push(\r\n      <Column width={100} align=\"center\" flexGrow>\r\n        <HeaderCell>{\"Action\"}</HeaderCell>\r\n        <Cell dataKey={idName} idName={idName}>\r\n          {(rowData) => {\r\n            return (\r\n              <Button\r\n                content=\"Book\"\r\n                onClick={() => {\r\n                  this.handleBook(rowData[idName]);\r\n                }}\r\n              />\r\n            );\r\n          }}\r\n        </Cell>\r\n      </Column>\r\n    );\r\n    this.setState({ cols });\r\n  };\r\n  render() {\r\n    // NOTE: use snippet 'log'\r\n    const { sessionList } = this.props;\r\n    let list = Object.assign([], sessionList);\r\n\r\n    for (let item of list) {\r\n      console.log(item);\r\n      item[\"cinemaName\"] = item[\"cinema\"][\"name\"];\r\n      item[\"filmName\"] = item[\"film\"][\"name\"];\r\n      item[\"roomName\"] = item[\"room\"][\"roomName\"];\r\n     \r\n    }\r\n\r\n    const { cols } = this.state;\r\n    return (\r\n      <Table data={sessionList} autoHeight bordered defaultExpandAllRows>\r\n        {cols}\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SessionInfo);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Icon,\r\n  Image,\r\n  Menu,\r\n  Input,\r\n  Card,\r\n  Rating,\r\n  List,\r\n  Item,\r\n} from \"semantic-ui-react\";\r\nimport { getPlaceHolder } from \"utils/placeHolder\";\r\nimport {\r\n  getOne,\r\n} from \"utils/request\";\r\nimport SessionInfo from './sessionInfo'\r\nvar faker = require(\"faker\");\r\n\r\nclass FilmDetail extends Component {\r\n  state = {\r\n    filmData: {},\r\n    name: \"\",\r\n    duration: 0,\r\n    actors: \"\",\r\n    director: \"\",\r\n    rating: 0,\r\n    type: \"\",\r\n    poster: \"\",\r\n    introduction: \"\",\r\n    status: \"\",\r\n    sessionList:[],\r\n  };\r\n  componentWillMount() {\r\n    const id = this.props.match.params.id;\r\n    console.log(id);\r\n    getOne(\"/film/\" + id).then((filmData) => {\r\n      this.setState({ filmData });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { filmData } = this.state;\r\n    const filmContent = [];\r\n    const {sessionList}=filmData\r\n\r\n    if (\r\n      filmData.duration === 0 ||\r\n      filmData.duration === undefined ||\r\n      filmData.duration === null\r\n    ) {\r\n      filmData.duration = faker.random.number();\r\n    }\r\n    if (filmData.actors === null) {\r\n      filmData.actors=\"\"\r\n      for (let i = 0; i < 5; i++) {\r\n        filmData.actors += faker.name.findName() + \", \";\r\n      }\r\n      filmData.actors += faker.name.findName() + \"\";\r\n    }\r\n    if(filmData.type===null||filmData.type===undefined){\r\n      filmData.type=faker.hacker.noun()\r\n    }\r\n    if(filmData.introduction===null||filmData.introduction===undefined){\r\n      filmData.introduction=faker.lorem.paragraph()\r\n    }\r\n    const cards=[{\r\n      header:\"Film Name\",\r\n      description:\"\"\r\n    },]\r\n    filmContent.push(\r\n      <List celled relaxed size=\"large\" >\r\n        <List.Item>\r\n          <Image src={getPlaceHolder(500)}></Image>\r\n        </List.Item>\r\n        <List.Item\r\n          header=\"Film Name:\"\r\n          content={filmData.name}\r\n     \r\n        />\r\n        <List.Item header=\"Duration:\" content={filmData.duration + \" min\"} />\r\n        <List.Item header=\"Actors:\" content={filmData.actors} />\r\n        <List.Item header=\"Type:\" content={filmData.type} />\r\n        <List.Item header=\"rating:\" content={filmData.rating} />\r\n        <List.Item header=\"introduction:\" content={filmData.introduction} />\r\n        <List.Item header=\"status:\" content={filmData.status} />\r\n      </List>\r\n    );\r\n      // TODO\r\n    // ----------session list-------\r\n    // ----------comment list-------\r\n    // console.log(sessionList)\r\n    return (\r\n      <Grid centered>\r\n        <Grid.Row textAlign=\"left\" columns={2} >\r\n          <Grid.Column width={8} >{filmContent}</Grid.Column>\r\n        </Grid.Row>\r\n\r\n        <Grid.Row textAlign=\"left\" columns={2} >\r\n          <Grid.Column width={15} > <SessionInfo sessionList={sessionList}/> </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nFilmDetail.propTypes = {};\r\n\r\nexport default FilmDetail;\r\n// \"duration\": null,\r\n// \"actors\": null,\r\n// \"director\": null,\r\n// \"filmId\": 18,\r\n// \"name\": \"www\",\r\n// \"rating\": null,\r\n// \"typeId\": 4,\r\n// \"type\": \"what\",\r\n// \"poster\": null,\r\n// \"introduction\": null,\r\n// \"status\": \"Not released\"\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Segment,\r\n  Form,\r\n  Message,\r\n  Input,\r\n  Checkbox,\r\n} from \"semantic-ui-react\";\r\nconst styleMeta = {\r\n  // font:\"#5f5447\"\r\n  color: \"#5f6368\",\r\n  fontFamily: \"Roboto,Arial,sans-serif\",\r\n  fontSize: \"11px\",\r\n};\r\nconst styleInfo = {\r\n  // font:\"#5f5447\"\r\n  color: \"#202124\",\r\n  fontFamily: \"Roboto,Arial,sans-serif\",\r\n  fontSize: \"16px\",\r\n};\r\n\r\nconst SegmentInfo = ({\r\n  meta,\r\n  info,\r\n  editable,\r\n  dataKey,\r\n  onEditChange,\r\n  onEditClick,\r\n}) => {\r\n  return (\r\n    <Segment size=\"large\">\r\n      <Grid columns={2}>\r\n        <Grid.Row verticalAlign=\"middle\">\r\n          <Grid.Column style={styleMeta}>{meta}</Grid.Column>\r\n          <Grid.Column style={styleInfo} textAlign=\"center\">\r\n            {editable === true ? (\r\n              <Input\r\n                defaultValue={info}\r\n                onChange={(event) => {\r\n                  onEditChange(dataKey, event.target.value);\r\n                }}\r\n              />\r\n            ) : (\r\n              info\r\n            )}\r\n          </Grid.Column>\r\n          <Grid.Column textAlign=\"right\"></Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\nexport default SegmentInfo;\r\n","import SegmentInfo from \"components/public/SegmentInfo\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actions } from \"redux/user\";\r\n// import { BrowserRouter as Router,Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Button, Checkbox, Confirm, Grid, Segment } from \"semantic-ui-react\";\r\nimport { getOne, updateOne } from \"utils/request\";\r\nimport { getUserByToken, setTokenNull } from \"utils/token\";\r\nconst styleMeta = {\r\n  // font:\"#5f5447\"\r\n  color: \"#5f6368\",\r\n  fontFamily: \"Roboto,Arial,sans-serif\",\r\n  fontSize: \"11px\",\r\n};\r\nconst styleInfo = {\r\n  // font:\"#5f5447\"\r\n  color: \"#202124\",\r\n  fontFamily: \"Roboto,Arial,sans-serif\",\r\n  fontSize: \"16px\",\r\n};\r\n\r\nclass Profile extends Component {\r\n  static defaultProps = {\r\n    dataNameToMeta: {\r\n      username: \"Username\",\r\n      password: \"Password\",\r\n      email: \"Email\",\r\n      tel: \"Phone\",\r\n      isStudent: \"Is a student\",\r\n    },\r\n  };\r\n  state = {\r\n    user: {},\r\n    checked: false,\r\n    confirmOpened: false,\r\n  };\r\n async componentWillMount() {\r\n    let { user } = this.state;\r\n    // const id = this.props.userId;\r\n    let id = -1;\r\n    await getUserByToken().then((res) => {\r\n      id = res[\"userId\"];\r\n    });\r\n\r\n    getOne(\"/user/\" + id).then((res) => {\r\n      user = res;\r\n      this.setState({ user });\r\n      if (user.isStudent === 1) {\r\n        this.setState({ checked: true });\r\n      }\r\n    });\r\n  }\r\n  componentWillUpdate() {}\r\n  onEditChange = (dataKey, newVal) => {\r\n    let { user, checked } = this.state;\r\n    user[dataKey] = newVal;\r\n    this.setState({ user });\r\n  };\r\n  handleCheckBox = (e) => {\r\n    let { user, checked } = this.state;\r\n    this.setState({ checked: !checked });\r\n    user.isStudent = !checked;\r\n    updateOne(\"/user\", user);\r\n  };\r\n  onEditClick = (e) => {\r\n    let { user, checked } = this.state;\r\n    if (user[\"editable\"] === true) {\r\n      updateOne(\"/user\", user);\r\n    }\r\n    user[\"editable\"] = !user[\"editable\"];\r\n    console.log(user[\"editable\"]);\r\n    this.setState({ user });\r\n  };\r\n\r\n  handleLogout = () => {\r\n    const { history, clearUserId } = this.props;\r\n    setTokenNull();\r\n    clearUserId();\r\n    history.push(\"/index\");\r\n  };\r\n  render() {\r\n    let segments = [];\r\n    let { user, checked, confirmOpened } = this.state;\r\n    const { dataNameToMeta } = this.props;\r\n    const { editable } = user;\r\n    const keys = Object.keys(dataNameToMeta);\r\n    for (let key of keys) {\r\n      const meta = dataNameToMeta[key],\r\n        info = user[key];\r\n      if (key === \"isStudent\") {\r\n        segments.push(\r\n          <Segment size=\"large\">\r\n            <Grid columns={2}>\r\n              <Grid.Row verticalAlign=\"middle\">\r\n                <Grid.Column style={styleMeta}>{meta}</Grid.Column>\r\n                <Grid.Column style={styleInfo} textAlign=\"center\">\r\n                  <Checkbox checked={checked} onChange={this.handleCheckBox} />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        );\r\n        continue;\r\n      }\r\n      segments.push(\r\n        <SegmentInfo\r\n          meta={meta}\r\n          info={info}\r\n          dataKey={key}\r\n          onEditChange={this.onEditChange}\r\n          editable={editable}\r\n          onEditClick={this.onEditClick}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={12}>\r\n            <Segment.Group content=\"\">{segments}</Segment.Group>\r\n            <Button\r\n              floated=\"left\"\r\n              color=\"green\"\r\n              size=\"large\"\r\n              content={editable ? \"Save\" : \"Edit\"}\r\n              onClick={this.onEditClick}\r\n            />\r\n            <Button\r\n              floated=\"right\"\r\n              negative\r\n              size=\"large\"\r\n              content={\"Log out\"}\r\n              onClick={(e) => {\r\n                this.setState({ confirmOpened: true });\r\n              }}\r\n            />\r\n            <Confirm\r\n              open={confirmOpened}\r\n              onCancel={(e) => {\r\n                this.setState({ confirmOpened: false });\r\n              }}\r\n              onConfirm={(e) => {\r\n                this.handleLogout();\r\n                this.setState({ confirmOpened: false });\r\n              }}\r\n            ></Confirm>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    //   username: state.registerReducer.username,\r\n    userId: state.user.userId,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    clearUserId: bindActionCreators(actions.clearUserId, dispatch),\r\n  };\r\n}\r\n\r\n//   const RegisterForm=RegisterFormUI\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport Alert from \"components/public/Alert\";\r\nimport {\r\n  Link,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Item,\r\n  Button,\r\n  Segment,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { getPlaceHolder } from \"utils/placeHolder\";\r\nimport {\r\n  getList,\r\n  updateOne,\r\n  deleteOne,\r\n  createOne,\r\n  getOne,\r\n} from \"utils/request\";\r\nimport SegmentInfo from \"components/public/SegmentInfo\";\r\nimport { getUserByToken } from \"utils/token\";\r\nimport { dateFormat } from \"utils/timeFormat\";\r\nclass SessionDetail extends Component {\r\n  /**\r\nsessionId: 2\r\nfilmId: 19\r\ntime: \"2020-04-10 14:30\"\r\nstatus: null\r\nremainingSeats: 50\r\nroomId: 3\r\ncinemaId: 5\r\nprice: null\r\ncinema: null\r\nfilm: null\r\nroom: null\r\neditable: false */\r\n  static defaultProps = {\r\n    dataToLabel: {\r\n      filmName: \"Film\",\r\n      time: \"Time\",\r\n      status: \"Status\",\r\n      remainingSeats: \"Remaining seats\",\r\n      cinemaName: \"Cinema\",\r\n      roomName: \"Room\",\r\n      price: \"Price\",\r\n    },\r\n  };\r\n  state = {\r\n    segments: [],\r\n    film: {},\r\n    cinema: {},\r\n    room: {},\r\n  };\r\n  handleBook = async () => {\r\n    const { history } = this.props;\r\n    const { data } = this.state;\r\n    const sessionId = this.props.match.params.id;\r\n    let now = new Date();\r\n    now = dateFormat(now);\r\n    let userId = -1;\r\n    await getUserByToken().then((res) => {\r\n      userId = res[\"userId\"];\r\n      console.log('====================================');\r\n      console.log(res);\r\n      console.log('====================================');\r\n    });\r\n    let obj = {\r\n      userId: userId,\r\n      sessionId: sessionId,\r\n      orderTime: now,\r\n      payTime: now,\r\n      status: \"has paid\",\r\n      fee: data[\"price\"],\r\n    };\r\n    await createOne(\"/order\", obj).then((res) => {\r\n      Alert.show(\"Order\", \"the order is creating\");\r\n      history.push(\"/profile\");\r\n    });\r\n  };\r\n  componentWillMount() {\r\n    const id = this.props.match.params.id;\r\n    getOne(\"/session/\" + id).then((data) => {\r\n      const film = data[\"film\"];\r\n      const cinema = data[\"cinema\"];\r\n      const room = data[\"room\"];\r\n      data[\"filmName\"] = film[\"name\"];\r\n      data[\"cinemaName\"] = cinema[\"name\"];\r\n      data[\"roomName\"] = room[\"roomName\"];\r\n      this.setState({ data, film, cinema, room });\r\n    });\r\n  }\r\n  //   TODO: finish order system\r\n  render() {\r\n    let segments = [];\r\n    let { data } = this.state;\r\n    data = Object.assign({}, data);\r\n    let { dataToLabel, history } = this.props;\r\n    dataToLabel = Object.assign({}, dataToLabel);\r\n    let cols = Object.keys(dataToLabel);\r\n    cols.forEach((dataName) => {\r\n      segments.push(\r\n        <SegmentInfo\r\n          meta={dataToLabel[dataName]}\r\n          info={data[dataName]}\r\n          editable={false}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={12}>\r\n            <Header size=\"huge\">Session Detail</Header>\r\n            <Segment.Group>{segments}</Segment.Group>\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              size=\"massive\"\r\n              content=\"Book!\"\r\n              onClick={this.handleBook}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    userId: state.user.userId,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    // handleChangeUsername:bindActionCreators(actions.handleChangeUsername,dispatch),\r\n  };\r\n}\r\n\r\n//   const RegisterForm=RegisterFormUI\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SessionDetail);\r\n// \"orderId\": 1,\r\n// \"userId\": 1,\r\n// \"sessionId\": 5,\r\n// \"orderTime\": \"2020-04-27 17:39\",\r\n// \"payTime\": \"2020-04-29 17:39\",\r\n// \"status\": \"\",\r\n// \"fee\": 11111,\r\n","import {\r\n  createBrowserHistory,\r\n  createHashHistory,\r\n  createMemoryHistory,\r\n} from \"history\";\r\nimport { isLogged } from \"utils/token\";\r\nexport function loginJump(history) {\r\n  if (!isLogged()) {\r\n    setTimeout(() => {\r\n      history.replace(\"/login\");\r\n    }, 1000);\r\n  } \r\n\r\n}\r\n","import { isLogged } from \"utils/token\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\nimport { loginJump } from \"utils/history\";\r\nclass PrivateRoute extends Component {\r\n  componentWillMount() {\r\n    const { history } = this.props;\r\n    loginJump(history);\r\n  }\r\n  componentWillUpdate() {\r\n    const { history } = this.props;\r\n    loginJump(history);\r\n    // TODO: fix  book ticket and profile \r\n  }\r\n  render() {\r\n    let { component: Component, ...rest } = this.props;\r\n    return isLogged() ? (\r\n      <Route {...rest} render={(props) => <Component {...props} />} />\r\n    ) : (\r\n      <Message error size=\"massive\">\r\n        Please Login...\r\n      </Message>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PrivateRoute);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Login from \"components/user/login/login\";\r\nimport Register from \"components/user/register/register\";\r\nimport { getList, updateOne, deleteOne, createOne } from \"utils/request\";\r\nimport TopMenu from \"../public/TopMenu\";\r\nimport IndexBody from \"./IndexBody\";\r\nimport FilmDetail from \"components/film/FilmDetail.js\";\r\nimport Profile from \"../user/profile/profile\";\r\nimport OrderDetail from \"components/order/orderDetail\"\r\nimport { isTokenNull } from \"utils/token\";\r\nimport SessionDetail from 'components/session/sessionDetail'\r\nimport PrivateRoute from \"Route/PrivateRoute\";\r\nclass Index extends Component {\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <TopMenu />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column width={16}>\r\n            <Switch>\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <PrivateRoute exact path=\"/profile\" component={Profile} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <PrivateRoute exact path=\"/film/:id\" component={FilmDetail} />\r\n              <PrivateRoute exact path=\"/session/:id\" component={SessionDetail} />\r\n              <PrivateRoute  path=\"/index\" component={IndexBody} />\r\n              <PrivateRoute  path=\"/\" component={IndexBody} />\r\n              {/* TODO test area */}\r\n            </Switch>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n\r\nclass Model extends Component {\r\n  componentWillMount() {}\r\n\r\n  componentDidMount() {}\r\n\r\n  componentWillReceiveProps(nextProps) {}\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {}\r\n\r\n  componentWillUpdate(nextProps, nextState) {}\r\n\r\n  componentDidUpdate(prevProps, prevState) {}\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n","\r\nimport {\r\n    combineReducers,\r\n} from 'redux';\r\nimport {userReducer} from './user';\r\n// import {xxx} mean that need to export like this: export XXX ,import xxx from means that export default xxx \r\nconst rootReducers = combineReducers({ \r\n  user:userReducer,\r\n\r\n});\r\n\r\nexport default rootReducers;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport AdminIndex from \"./components/admin/adminIndex/adminIndex\";\nimport Index from \"./components/index/index\";\nimport \"./index.css\";\nimport rootReducers from \"./redux/rootReducer\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nlet store = createStore(rootReducers);\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <Switch>\n        <Route path=\"/admin\" component={AdminIndex} />\n        <Route path=\"/index\" component={Index} />\n        <Route path=\"/\" component={Index} />\n      </Switch>\n    </Provider>\n  </Router>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/poster.e21d4c71.jpg\";"],"sourceRoot":""}