{"version":3,"sources":["redux/user.js","utils/token.js","components/public/Alert.js","utils/request.js","components/user/login/loginForm.js","components/user/login/login.js","utils/validatorRules.js","components/user/register/registerForm.js","components/user/register/register.js","components/public/TopMenu.js","utils/placeHolder.js","components/index/IndexBody.js","components/film/sessionInfo.js","components/film/FilmDetail.js","components/public/SegmentInfo.js","components/user/profile/profile.js","utils/timeFormat.js","components/session/sessionDetail.js","utils/history.js","Route/PrivateRoute.js","components/index/index.js","serviceWorker.js","mock/mockdata.js","test/postList.js","redux/rootReducer.js","components/admin/adminIndex/adminSidebar.js","components/base/form/FormFieldInput.js","utils/api.js","components/base/form/BaseTableForm.js","components/admin/admin/AdminForm.js","components/base/form/formProps.js","components/table/components/CheckCell.js","components/table/components/DeleteActionCell.js","components/table/EditTable.js","components/admin/admin/adminTable.js","components/admin/film/FilmForm.js","components/admin/film/filmTable.js","components/admin/order/OrderForm.js","components/admin/order/orderTable.js","components/admin/tables/sessionTable.js","components/admin/user/UserForm.js","components/admin/user/userTable.js","components/admin/cinema/CinemaForm.js","components/admin/cinema/cinemaTable.js","components/admin/tables/commentTable.js","components/admin/adminIndex/adminIndex.js","index.js","poster.jpg"],"names":["initState","userId","actionTypes","actions","data","console","log","type","sto","window","sessionStorage","headers","getToken","getItem","setToken","token","setItem","isTokenNull","setTokenNull","isLogged","getUserByToken","a","param","accessToken","getUserByTokenApi","then","res","Alert","defaultProps","header","content","state","open","error","show","setState","setTimeout","this","Modal","size","onClose","Message","Component","div","document","createElement","body","appendChild","Box","ReactDOM","render","React","BASE_URL","Authorization","getTokenHeader","instance","axios","create","baseURL","timeout","getList","url","get","map","item","catch","err","response","updateOne","put","deleteOne","delete","params","createOne","obj","post","getOne","LoginForm","proof","password","saveUserId","props","auth","history","replace","Form","onSubmit","submit","bind","Segment","stacked","Field","Input","icon","placeholder","value","onChange","e","target","Button","primary","fluid","to","style","float","contextTypes","router","PropTypes","object","isRequired","withRouter","connect","ownProps","user","dispatch","bindActionCreators","Login","Grid","container","centered","textAlign","marginTop","verticalAlign","Row","Column","width","Header","as","Rules","dataLabel","required","message","min","max","dataName","string","number","boolean","method","regexp","integer","array","enum","date","email","typeName","asyncValidator","rule","Promise","resolve","reject","code","RegisterFormUI","isStudent","username","rePassword","errorInfo","contentList","descriptor","validator","schema","validate","push","errors","fields","control","Checkbox","toggle","label","onClick","className","RegisterForm","ErrorMessage","list","RegisterUI","h","clientHeight","height","Register","TopMenu","activeItem","columns","Menu","Item","name","active","handleItemClick","Icon","position","getPlaceHolder","undefined","IndexBody","filmList","items","index","key","filmData","celled","FilmCard","handleOnRate","rating","maxRating","Card","filmId","Image","src","Content","Rating","defaultRating","onRate","SessionInfo","cols","sessionList","handleBook","id","createAdminCols","dataToLabel","idName","Object","keys","forEach","dataKey","align","flexGrow","rowData","nextProp","assign","autoHeight","bordered","defaultExpandAllRows","sessionId","cinemaName","time","remainingSeats","filmName","roomName","status","listName","faker","require","FilmDetail","duration","actors","director","poster","introduction","match","filmContent","random","i","findName","hacker","noun","lorem","paragraph","List","relaxed","styleMeta","color","fontFamily","fontSize","styleInfo","SegmentInfo","meta","info","editable","onEditChange","onEditClick","defaultValue","event","Profile","checked","confirmOpened","newVal","handleCheckBox","handleLogout","clearUserId","segments","dataNameToMeta","Group","floated","negative","Confirm","onCancel","onConfirm","tel","dateFormat","ret","fmt","opt","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","k","RegExp","exec","length","padStart","SessionDetail","film","cinema","room","now","Date","orderTime","payTime","fee","basic","price","loginJump","PrivateRoute","component","rest","Index","exact","path","Boolean","location","hostname","Mock","mock","PostItem","title","author","rootReducers","combineReducers","action","AdminSidebar","visible","Sidebar","animation","direction","vertical","FormFieldInput","formProps","getErrorProp","fieldValidate","updateFormMsg","updateField","initVal","descriptors","FormField","onBlur","canDispatch","createStateFromDataProps","clearInputVal","formFields","dataProps","api","nullValState","newState","positive","labelPosition","AdminForm","update","getDescriptors","useState","rowDataExisted","cinemaId","errMsg","fieldProps","getUsernameField","getPasswordField","getForms","payload","newMsg","field","msg","checkVal","padding","appearance","checkedAll","rowHeight","updateTable","handleChange","handleDelete","handleCheck","handleDeleteSelected","handleRefresh","tableTitle","tableColumns","getFormElement","oldFormProps","trigger","closeIcon","closeOnDimmerClick","virtualized","fixed","CheckCell","sort","resizable","rowIndex","DeleteActionCell","AdminTable","tableHeaders","Api","FilmForm","typeOptions","getNameField","getActorsField","getDirectorField","getIntroductionField","getPosterField","getStatusField","initValId","typeId","pos","Dropdown","options","v","selection","getTypeField","getDurationField","Type","FilmTable","getTypeOptions","typeList","text","createFilmCols","tefeel","getOrderTimeField","getPayTimeField","getFeeField","rowKey","OrderTable","expandedRowKeys","handleExpanded","nextExpandedRowKeys","OrderForm","rowExpandedHeight","onRowClick","renderRowExpanded","session","readOnly","ExpandCell","some","SessionTable","onDropdownChange","selectedObj","child","dropdownIdName","dropdownItemId","onDatePickerChange","createSessionCols","myList","dataMapKeys","dropdownInfo","dropdownList","onRef","ref","tableHeader","modalHeader","labelNames","dataNames","DropdownCell","onOpen","search","DatePickerCell","itemId","MyDatePicker","startDate","setStartDate","selected","showTimeSelect","timeFormat","timeIntervals","timeCaption","getEmailField","getTelField","defaultChecked","val","getIsStudentField","UserTable","createUserCols","UserForm","CinemaForm","getLocationField","CinemaTable","createCinemaCols","CommentTable","AdminIndex","windowHeight","minHeight","Pushable","stretched","Pusher","handleClick","store","createStore","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5a9bab76.chunk.js","sourcesContent":["const initState = {\r\n  userId: \"\",\r\n};\r\nconst actionTypes = {\r\n  SAVE_USER_ID: \"saveUserId\",\r\n  CLEAR_USER_ID: \"clearUserId\",\r\n};\r\nexport const actions = {\r\n  saveUserId: function (data) {\r\n    console.log(`UserId is ${data}`)\r\n    return {\r\n      type: actionTypes.SAVE_USER_ID,\r\n      data,\r\n    };\r\n  },\r\n  clearUserId: function () {\r\n    return {\r\n      type: actionTypes.CLEAR_USER_ID,\r\n      data: \"\",\r\n    };\r\n  },\r\n};\r\nexport const userReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SAVE_USER_ID:\r\n\r\n      return {\r\n        ...state,\r\n        userId: action.data,\r\n      };\r\n    case actionTypes.CLEAR_USER_ID:\r\n      return {\r\n        ...state,\r\n        userId: -1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n/**\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  rePassword: \"\",\r\n  accessToken: \"\",\r\n\r\n  HANDLE_CHANGE_EMAIL: \"handleChangeEmail\",\r\n  SUBMIT: \"submit\",\r\n  HANDLE_CHANGE_PASSWORD: \"handleChangePassword\",\r\n  HANDLE_CHANGE_USERNAME: \"handleChangeUsername\",\r\n  GET_ACCESS_TOKEN: \"getAccessToken\",\r\nsubmitRegisterInfo: function (data) {\r\n  return {\r\n    type: actionTypes.SUBMIT,\r\n    data,\r\n  };\r\n},\r\nhandleChangePassword: function (data) {\r\n  return {\r\n    type: actionTypes.HANDLE_CHANGE_PASSWORD,\r\n    data,\r\n  };\r\n},\r\nhandleChangeUsername: function (data) {\r\n  return {\r\n    type: actionTypes.HANDLE_CHANGE_USERNAME,\r\n    data,\r\n  };\r\n},\r\nhandleChangeEmail: function (data) {\r\n  return {\r\n    type: actionTypes.HANDLE_CHANGE_EMAIL,\r\n    data,\r\n  };\r\n},\r\ngetAccessToken: function (data) {\r\n  return {\r\n    type: actionTypes.GET_ACCESS_TOKEN,\r\n    data,\r\n  };\r\n},\r\n\r\nexport const userReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SUBMIT:\r\n      return {\r\n        ...state,\r\n        username: action.data,\r\n      };\r\n    case actionTypes.HANDLE_CHANGE_EMAIL:\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        email: action.data,\r\n      };\r\n\r\n    case actionTypes.HANDLE_CHANGE_USERNAME:\r\n      return {\r\n        ...state,\r\n        username: action.data,\r\n      };\r\n\r\n    case actionTypes.HANDLE_CHANGE_PASSWORD:\r\n      return {\r\n        ...state,\r\n        password: action.data,\r\n      };\r\n    case actionTypes.GET_ACCESS_TOKEN:\r\n      return {\r\n        ...state,\r\n        accessToken: action.data,\r\n      };\r\n    case actionTypes.SAVE_USER_ID:\r\n      return {\r\n        ...state,\r\n        userId: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n*/\r\n","import { getUserByTokenApi } from \"utils/request\";\r\nlet sto = window.sessionStorage;\r\nlet headers = {};\r\n\r\nexport function getTokenHeader() {\r\n  let token = getToken();\r\n  // token=\"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsaWFuZyIsImV4cCI6MTU4NzIyNDM0NSwiaWF0IjoxNTg3MjE3MTQ1fQ.GvHmecWhnJSQp5pq9ccGLOok1DmYle55u3k7ZcJSvyJJAfb9BZushjvKa6vEdwLQvcmIBpKu0QrINUZIkvD_rQ\"\r\n  if (!isTokenNull()) {\r\n    token = \"Bearer \" + token;\r\n    headers = { Authorization: token };\r\n    return headers;\r\n  }\r\n  return headers;\r\n}\r\nexport function getToken() {\r\n  let token = sto.getItem(\"accessToken\");\r\n  return token;\r\n}\r\nexport function setToken(token) {\r\n  let sto = window.sessionStorage;\r\n  sto.setItem(\"accessToken\", token);\r\n}\r\nexport function isTokenNull() {\r\n  let token = getToken();\r\n  if (token === null || token === \"-1\") {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nexport function setTokenNull() {\r\n  let sto = window.sessionStorage;\r\n  sto.setItem(\"accessToken\", \"-1\");\r\n}\r\nexport function isLogged() {\r\n  return !isTokenNull();\r\n}\r\nexport async function getUserByToken() {\r\n\r\n  let param = {\r\n      accessToken: getToken(),\r\n    };\r\n  let res = await getUserByTokenApi(param).then((res) => {\r\n    return res;\r\n  });\r\n  return res;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Modal, Message } from \"semantic-ui-react\";\r\nimport ReactDOM from \"react-dom\";\r\nclass Alert extends Component {\r\n  defaultProps = {\r\n    header: \"\",\r\n    content: \"\",\r\n  };\r\n  state = {\r\n    open: false,\r\n    header: \"\",\r\n    content: \"\",\r\n    error: false,\r\n  };\r\n  show = (header, content, error) => {\r\n    if (error === \"error\") {\r\n      error = true;\r\n    } else {\r\n      error = false;\r\n    }\r\n    this.setState({ open: true, header, content, error });\r\n    setTimeout(() => {\r\n      this.setState({ open: false });\r\n    }, 10000);\r\n  };\r\n  render() {\r\n    const { open, header, content, error } = this.state;\r\n    return (\r\n      <Modal\r\n        size=\"mini\"\r\n        onClose={() => {\r\n          this.setState({ open: false });\r\n        }}\r\n        open={open}\r\n        \r\n      >\r\n        {/* <Modal.Header>{header}</Modal.Header>\r\n        <Modal.Content>{content}</Modal.Content> */}\r\n        <Message error={error} header={header} content={content} />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nlet div = document.createElement(\"div\");\r\nlet props = {};\r\ndocument.body.appendChild(div);\r\nlet Box = ReactDOM.render(React.createElement(Alert, props), div);\r\nexport default Box;\r\n","import axios from \"axios\";\r\nimport { getTokenHeader, setToken, getToken } from \"utils/token\";\r\nimport Alert from \"components/public/Alert\";\r\nconst BASE_URL = \"http://localhost:8090/api\";\r\nlet headers = getTokenHeader();\r\nvar instance = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 10000,\r\n  headers,\r\n});\r\n// \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsaWFuZyIsImV4cCI6MTU4NzIyNDM0NSwiaWF0IjoxNTg3MjE3MTQ1fQ.GvHmecWhnJSQp5pq9ccGLOok1DmYle55u3k7ZcJSvyJJAfb9BZushjvKa6vEdwLQvcmIBpKu0QrINUZIkvD_rQ\"\r\n/**\r\n * get list from back end\r\n * \r\n * @param  {String} url (\"api/user\")\r\n */\r\nexport async function getList(url) {\r\n  let data = [];\r\n  let response = await instance\r\n    .get(url)\r\n    .then((res) => {\r\n      console.log(res);\r\n      data = res.data.data;\r\n      data.map((item) => {\r\n        item[\"editable\"] = false;\r\n        item[\"checked\"] = false;\r\n        return null;\r\n      });\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n\r\n  return response;\r\n}\r\n\r\n/**\r\n * @param  {String } url :api url\r\n * @param  {Object } item : like {username: 123, password:123}\r\n */\r\nexport async function updateOne(url, item) {\r\n  await instance\r\n    .put(url, item)\r\n    .then((res) => {\r\n      console.log(res);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n}\r\n/**\r\n * @param  {String} url\r\n * @param  {Object} param such as {userId : 1}\r\n */\r\nexport async function deleteOne(url, param) {\r\n  url = BASE_URL + url;\r\n  // NOTE: @RequestParam\r\n  await instance\r\n    .delete(url, { params: param })\r\n    .then((res) => {\r\n      console.log(res);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n}\r\n\r\nexport async function createOne(url, obj) {\r\n  const params = obj;\r\n  instance\r\n    .post(url, params)\r\n    .then((res) => {\r\n      console.log(res);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n}\r\n/**\r\n * @param  {String} url :(api/user/1)\r\n */\r\nexport async function getOne(url) {\r\n  let data = [];\r\n  let response = await instance\r\n    .get(url, \"\")\r\n    .then((res) => {\r\n      console.log(res);\r\n      data = res.data.data;\r\n      data[\"editable\"] = false;\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n\r\n  return response;\r\n}\r\n/**\r\n * @param  {Object} params :{ proof : liang , password :1234}\r\n * @returns {String} accessToken \r\n *  use toke to access any resource\r\n */\r\nexport async function auth(params) {\r\n  let res = await axios\r\n    .post(BASE_URL + \"/auth\", params)\r\n    .then((res) => {\r\n      setToken(res.data.data[\"accessToken\"]);\r\n      console.log(\"successfully login, token is \"+ getToken() );\r\n      return res.data;\r\n    })\r\n    .catch((err) => {\r\n      // alert(\"Login wrong\")\r\n      Alert.show(\"Login failed\", \"please contact your admin\", \"error\");\r\n      console.error(err);\r\n    });\r\n  return res;\r\n}\r\n/**\r\n * @param  {Object} params\r\n */\r\nexport async function getUserByTokenApi(params) {\r\n  let res = await axios\r\n    .post(BASE_URL + \"/user/accessToken\", params)\r\n    .then((res) => {\r\n      return res.data.data;\r\n    })\r\n    .catch((err) => {\r\n      // alert(\"Login wrong\")\r\n      console.error(err);\r\n    });\r\n  return res;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  Form,\r\n  FormInput,\r\n  Grid,\r\n  Segment,\r\n  Message,\r\n  Header,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { BrowserRouter as Router,Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actions } from \"redux/user\";\r\nimport PropTypes from \"prop-types\";\r\nimport { auth } from \"utils/request\";\r\n// import history from \"utils/history\";\r\nclass LoginForm extends Component {\r\n  static contextTypes = {\r\n    router: PropTypes.object.isRequired,\r\n  };\r\n  state = {\r\n    proof: \"\",\r\n    password: \"\",\r\n  };\r\n  static propTypes = {\r\n    accessToken: PropTypes.string,\r\n  };\r\n  submit() {\r\n    const { proof, password } = this.state;\r\n    const {saveUserId}=this.props\r\n    const params = { proof, password };\r\n    auth(params).then((res) => {\r\n      console.log(`UserId is ${res[\"data\"][\"userId\"]}`)\r\n      saveUserId(res[\"data\"][\"userId\"])\r\n      setTimeout(this.props.history.replace(\"/index\"), 1000);\r\n    });\r\n  }\r\n  render() {\r\n    const { proof, password } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.submit.bind(this)}>\r\n        <Segment stacked>\r\n          <Form.Field>\r\n            <Input\r\n              icon=\"user\"\r\n              placeholder=\"Username or email\"\r\n              type=\"text\"\r\n              value={proof}\r\n              onChange={(e) => this.setState({ proof: e.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Input\r\n              icon=\"lock\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => this.setState({ password: e.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Button primary type=\"submit\" fluid>\r\n            Login\r\n          </Button>\r\n        </Segment>\r\n        <Message>\r\n          <Link to=\"/forget-pwd\">Forget password?</Link>{\" \"}\r\n          <Link to=\"/register\" style={{ float: \"right\" }}>\r\n            Register\r\n          </Link>\r\n        </Message>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    userId: state.user.userId,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    saveUserId: bindActionCreators(actions.saveUserId, dispatch),\r\n  };\r\n}\r\n\r\n//   const RegisterForm=RegisterFormUI\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(LoginForm)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  Form,\r\n  FormInput,\r\n  Grid,\r\n  Segment,\r\n  Message,\r\n  Header,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport {withRouter } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport LoginForm from \"./loginForm\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nclass Login extends Component {\r\n  static contextTypes = {\r\n    router: PropTypes.object.isRequired,\r\n  };\r\n  render() {\r\n  \r\n    \r\n    return (\r\n      <Grid\r\n        container\r\n        centered\r\n        textAlign=\"center\"\r\n        style={{ marginTop: \"10%\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Row>\r\n          <Grid.Column width={8}>\r\n            <Header as=\"h1\" textAlign=\"center\">\r\n              Login in\r\n            </Header>\r\n            <LoginForm />\r\n          </Grid.Column>{\" \"}\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    //   username: state.registerReducer.username,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    // handleChangeUsername:bindActionCreators(actions.handleChangeUsername,dispatch),\r\n  };\r\n}\r\n\r\n//   const RegisterForm=RegisterFormUI\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(Login)) \r\n","import axios from \"axios\";\r\nconst BASE_URL = \"http://localhost:8090/api\";\r\nexport const Rules = {\r\n  required: (dataLabel) => ({\r\n    required: true,\r\n    message: dataLabel + \" is required\",\r\n  }),\r\n  isLength: (min, max,dataName) => ({\r\n    min: min,\r\n    max: max,\r\n    message: dataName+\": maximum length is \" + max + \" and  minimum is \" + min,\r\n  }),\r\n\r\n  TYPE: {\r\n    string: \"string\",\r\n    number: \"number\",\r\n    boolean: \"boolean\",\r\n    method: \"function\",\r\n    regexp: \"regexp\",\r\n    integer: \"integer\",\r\n    float: \"float\",\r\n    array: \"array\",\r\n    object: \"object\",\r\n    enum: \"enum\",\r\n    date: \"date\",\r\n    url: \"url\",\r\n\r\n    email: \"email\",\r\n  },\r\n  isType: (typeName) => ({\r\n    type: typeName,\r\n    message: \"require \" + typeName,\r\n  }),\r\n  isDuplicate: (url, dataName) => {\r\n    url = BASE_URL + url;\r\n    //   NOTE: get=>  const params = { params: { [dataName]: value } }\r\n    //   NOTE: if there are async requests ,you need asyncValidator\r\n    return {\r\n      asyncValidator: async (rule, value) => {\r\n        const params = { params: { [dataName]: value } };\r\n        let code = 0;\r\n// axios request is not sync\r\n        return new Promise((resolve, reject) => {\r\n          axios\r\n            .get(url, params)\r\n            .then((res) => {\r\n              console.log(res);\r\n              code = res.data.code;\r\n              if (code !== 200) {\r\n                reject(dataName + \" is duplicate\"); // reject with error message\r\n              } else {\r\n                resolve();\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              reject(dataName + \" is duplicate\");\r\n              console.error(err);\r\n            });\r\n        });\r\n      },\r\n    };\r\n  },\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { actions } from \"../../../redux/user\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport schema from \"async-validator\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nimport Alert from \"components/public/Alert\";\r\nimport {\r\n  Grid,\r\n  Segment,\r\n  Form,\r\n  Message,\r\n  Input,\r\n  Checkbox,\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  getList,\r\n  updateOne,\r\n  deleteOne,\r\n  createOne,\r\n  getOne,\r\n} from \"utils/request\";\r\nclass RegisterFormUI extends Component {\r\n  static defaultProps = {\r\n    descriptor: {\r\n      username: [\r\n        Rules.required(\"Username\"),\r\n        Rules.isLength(3, 10, \"Username\"),\r\n        Rules.isType(Rules.TYPE.string),\r\n        Rules.isDuplicate(\"/user/username-duplication\", \"username\"),\r\n      ],\r\n      password: [Rules.required(\"password\"), Rules.isLength(3, 10)],\r\n      email: [Rules.required(\"Email\"), Rules.isType(Rules.TYPE.email)],\r\n    },\r\n  };\r\n\r\n  state = {\r\n    isStudent: 0,\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    rePassword: \"\",\r\n    errorInfo: {\r\n      header: \"\",\r\n      show: false,\r\n      contentList: [],\r\n    },\r\n  };\r\n\r\n  // Change(e){\r\n  //   //e.target.name代表你当前输入Input框对应的Name,如email,password\r\n  // // e.target.value 代表当前输入的值\r\n  // this.setState({\r\n  //   [e.target.name] : e.target.value\r\n  // })\r\n  submit = () => {\r\n    const { descriptor, history } = this.props;\r\n    let {\r\n      email,\r\n      password,\r\n      username,\r\n      rePassword,\r\n      isStudent,\r\n      errorInfo,\r\n    } = this.state;\r\n    errorInfo.contentList = [];\r\n    let validator = new schema(descriptor);\r\n\r\n    let obj = {\r\n      username: username,\r\n      email: email,\r\n      password: password,\r\n      rePassword: rePassword,\r\n      isStudent: isStudent,\r\n    };\r\n    validator\r\n      .validate(obj)\r\n      .then(async (e) => {\r\n        if (password === rePassword) {\r\n          await createOne(\"/user\", obj);\r\n          Alert.show(\"Sign up\", \"Successfully!\");\r\n          setTimeout(history.push(\"/index\"), 1000);\r\n          errorInfo.show = false;\r\n        } else {\r\n          errorInfo.contentList.push(\"passwords are not same\");\r\n          errorInfo.show = true;\r\n        }\r\n        this.setState({ errorInfo });\r\n      })\r\n      .catch(({ errors, fields }) => {\r\n        errorInfo.header = \"Error\";\r\n        for (let error of errors) {\r\n          errorInfo.contentList.push(error[\"message\"]);\r\n        }\r\n        errorInfo.show = true;\r\n        this.setState({ errorInfo });\r\n      });\r\n  };\r\n  render() {\r\n    const { isStudent, errorInfo } = this.state;\r\n\r\n    return (\r\n      <Grid centered>\r\n        <Grid.Column width={8}>\r\n          <Form onSubmit={this.submit}>\r\n            <Segment>\r\n              <Form.Field\r\n                control={Input}\r\n                icon=\"user\"\r\n                placeholder=\"Username\"\r\n                type=\"text\"\r\n                onChange={(e) => this.setState({ username: e.target.value })}\r\n                value={this.props.username}\r\n              />\r\n\r\n              <Form.Field\r\n                control={Input}\r\n                icon=\"mail\"\r\n                placeholder=\"Email\"\r\n                type=\"text\"\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n                value={this.props.email}\r\n              />\r\n\r\n              <Form.Field\r\n                control={Input}\r\n                icon=\"lock\"\r\n                placeholder=\"Enter password\"\r\n                type=\"password\"\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n                value={this.props.password}\r\n              />\r\n\r\n              <Form.Field\r\n                control={Input}\r\n                placeholder=\"Enter password again\"\r\n                type=\"password\"\r\n                icon=\"lock\"\r\n                onChange={(e) => this.setState({ rePassword: e.target.value })}\r\n              />\r\n\r\n              <Form.Field\r\n                control={Checkbox}\r\n                toggle\r\n                label=\"Are you a student?\"\r\n                onClick={() => {\r\n                  this.setState({ isStudent: !isStudent });\r\n                }}\r\n              />\r\n              {isStudent ? (\r\n                <Form.Input placeholder=\"Enter your student ID\"></Form.Input>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {errorInfo.show ? <ErrorMessage errorInfo={errorInfo} /> : \"\"}\r\n\r\n              <Form.Button primary type=\"submit\" className=\"btn\" fluid>\r\n                Sign up\r\n              </Form.Button>\r\n            </Segment>\r\n            <Message>\r\n              <Link>Forget password?</Link>\r\n            </Message>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    // userId: state.user.userId,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    // saveUserId: bindActionCreators(actions.saveUserId, dispatch),\r\n  };\r\n}\r\nconst RegisterForm = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RegisterFormUI);\r\nexport default withRouter(RegisterForm);\r\n\r\nconst ErrorMessage = ({ errorInfo }) => {\r\n  const { show, header, contentList } = errorInfo;\r\n  return <Message header={header} list={contentList} />;\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport poster from \"../../../poster.jpg\";\r\nimport axios from \"axios\";\r\nimport { actions } from \"../../../redux/user\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Responsive,\r\n  Segment,\r\n  Sidebar,\r\n  Form,\r\n  Message,\r\n  Visibility,\r\n  Input,\r\n  Checkbox,\r\n  Label,\r\n  Card,\r\n  Rating\r\n} from \"semantic-ui-react\";\r\nimport RegisterFormUI from './registerForm'\r\nclass RegisterUI extends Component {\r\n  render() {\r\n    const h = document.body.clientHeight;\r\n    return (\r\n      <Grid verticalAlign=\"middle\" className=\"my_container\">\r\n        <Grid.Row style={{ height: h + \"px\" }}>\r\n          <Grid.Column width={8}>\r\n            <Message>Enjoy Movie</Message>{\" \"}\r\n          </Grid.Column>\r\n          <Grid.Column width={8}>\r\n            <RegisterFormUI />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst Register = connect()(RegisterUI);\r\nexport default Register;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  Grid,\r\n  Icon,\r\n  Image,\r\n  Menu,\r\n  Input,\r\n  Card,\r\n  Rating,\r\n} from \"semantic-ui-react\";\r\nimport login from \"../user/login/login\";\r\nimport Register from \"../user/register/register\";\r\nimport { getList, updateOne, deleteOne, createOne } from \"utils/request\";\r\nexport default class TopMenu extends Component {\r\n  state = {\r\n    activeItem: \"\",\r\n  };\r\n  render() {\r\n    var sto = window.sessionStorage;\r\n    let profileUrl = \"/profile\";\r\n\r\n    const { activeItem } = this.state;\r\n    return (\r\n      <Grid>\r\n        <Grid.Row columns={1} verticalAlign=\"middle\">\r\n          <Grid.Column width={16}>\r\n            <Menu>\r\n              {/* <span>Logo</span> */}\r\n\r\n              <NavLink to=\"/index\">\r\n                <Menu.Item\r\n                  icon=\"home\"\r\n                  name=\"Index\"\r\n                  active={activeItem === \"index\"}\r\n                  onClick={this.handleItemClick}\r\n                >\r\n                  <Icon name=\"home\" />\r\n                  Index\r\n                </Menu.Item>\r\n              </NavLink>\r\n              <NavLink to=\"/cinema\">\r\n                <Menu.Item\r\n                  name=\"Cinema\"\r\n                  active={activeItem === \"cinema\"}\r\n                  onClick={this.handleItemClick}\r\n                >\r\n                  <Icon name=\"video\"></Icon>\r\n                  Cinema\r\n                </Menu.Item>\r\n              </NavLink>\r\n              <NavLink to=\"/film\">\r\n                <Menu.Item\r\n                  name=\"films\"\r\n                  active={activeItem === \"films\"}\r\n                  onClick={this.handleItemClick}\r\n                >\r\n                  <Icon name=\"film\"></Icon>\r\n                  Films\r\n                </Menu.Item>\r\n              </NavLink>\r\n              <Menu.Menu position=\"right\">\r\n                <NavLink to={\"/profile\"}>\r\n                  {\" \"}\r\n                  <Menu.Item\r\n                    name=\"profile\"\r\n                    active={activeItem === \"profile\"}\r\n                    onClick={this.handleItemClick}\r\n                  >\r\n                    <Icon name=\"user\" />\r\n                  </Menu.Item>\r\n                </NavLink>\r\n                <Menu.Item>\r\n                  <Input\r\n                    type=\"text\"\r\n                    icon=\"search\"\r\n                    placeholder=\"Search Films...\"\r\n                  />\r\n                </Menu.Item>\r\n              </Menu.Menu>\r\n            </Menu>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","export function getPlaceHolder(width, height) {\r\n  let baseURL = \"https://picsum.photos/\";\r\n  if (width === undefined && height === undefined) {\r\n    return baseURL+\"480/320\";\r\n  } else if(width !== undefined &&height === undefined){\r\n    return baseURL + width ;\r\n  }else{\r\n    return baseURL + width + \"/\" + height;\r\n  }\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Icon,\r\n  Image,\r\n  Menu,\r\n  Input,\r\n  Card,\r\n  Rating,\r\n  Placeholder,\r\n} from \"semantic-ui-react\";\r\nimport { getList, updateOne, deleteOne, createOne } from \"utils/request\";\r\nimport {getPlaceHolder} from \"utils/placeHolder\"\r\nexport default class IndexBody extends Component {\r\n  state = {\r\n    filmList: [],\r\n  };\r\n\r\n  componentWillMount() {\r\n    let filmList=[]\r\n    getList(\"/film\").then(list=>{\r\n        \r\n       filmList=list\r\n       this.setState({ filmList });\r\n    });\r\n\r\n    console.log(filmList)\r\n  }\r\n  render() {\r\n\r\n    let { filmList } = this.state;\r\n    const items=[]\r\n    if(filmList===undefined){\r\n      filmList=[]\r\n    }\r\n    filmList.map((data, index) => {\r\n      items.push (\r\n        <Grid.Column textAlign=\"center\">\r\n          <FilmCard\r\n            key={index}\r\n            filmData={data}\r\n          />\r\n        </Grid.Column>\r\n      );\r\n      return null\r\n    })\r\n    return (\r\n      <Grid container columns={4} celled>\r\n        <Grid.Row>\r\n          {items}\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nclass FilmCard extends Component {\r\n  state = {};\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleOnRate = this.handleOnRate.bind(this);\r\n  }\r\n  handleOnRate(e, { rating, maxRating }) {\r\n\r\n  }\r\n  render() {\r\n      const {filmData}=this.props\r\n    return (\r\n      <Card size=\"large\" centered style={{ width: \"115px\" }}>\r\n        <Link to={\"/film/\"+filmData.filmId}>\r\n          <Image\r\n            size=\"big\"\r\n            style={{ width: \"115px\", height: \"163px\" }}\r\n            src={getPlaceHolder(115,163)}\r\n          ></Image>\r\n          <Card.Content>{filmData.name}</Card.Content>\r\n          {/* {this.props.name} */}\r\n        </Link>\r\n        <Rating\r\n          defaultRating={3}\r\n          onRate={this.handleOnRate}\r\n          maxRating={5}\r\n          icon=\"star outline\"\r\n        ></Rating>{\" \"}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n// \"duration\": null,\r\n// \"actors\": null,\r\n// \"director\": null,\r\n// \"filmId\": 18,\r\n// \"name\": \"www\",\r\n// \"rating\": null,\r\n// \"typeId\": 4,\r\n// \"type\": \"what\",\r\n// \"poster\": null,\r\n// \"introduction\": null,\r\n// \"status\": \"Not released\"\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport {\r\n  Link,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport { Grid, Icon, Image, List, Item, Button } from \"semantic-ui-react\";\r\nimport { getPlaceHolder } from \"utils/placeHolder\";\r\nimport {\r\n  getList,\r\n  updateOne,\r\n  deleteOne,\r\n  createOne,\r\n  getOne,\r\n} from \"utils/request\";\r\nimport { Table, Column, HeaderCell, Cell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nclass SessionInfo extends Component {\r\n  static defaultProps = {\r\n    url: \"/session\",\r\n    idName: \"sessionId\",\r\n    dataToLabel: {\r\n      sessionId: \"ID\",\r\n      cinemaName: \"Cinema\",\r\n      time: \"Time\",\r\n      remainingSeats: \"Remaining Seats\",\r\n      filmName: \"Film\",\r\n      roomName: \"Room\",\r\n      status: \"Status\",\r\n    },\r\n    // TODO: decrease the number var as soon as possible\r\n    listName: \"list\",\r\n  };\r\n  state = {\r\n    list: [],\r\n    cols: [],\r\n    sessionList: [],\r\n  };\r\n  componentWillReceiveProps(nextProp) {\r\n    console.log(nextProp.sessionList);\r\n    this.createAdminCols();\r\n  }\r\n  handleBook = (id) => {\r\n    const { history } = this.props;\r\n    setTimeout(history.push(\"/session/\" + id), 500);\r\n  };\r\n  createAdminCols = () => {\r\n    const { url, dataToLabel, idName } = this.props;\r\n\r\n    let cols = [];\r\n\r\n    const dataMapKeys = Object.keys(dataToLabel);\r\n    dataMapKeys.forEach((dataKey) => {\r\n      cols.push(\r\n        <Column width={100} align=\"center\" flexGrow>\r\n          <HeaderCell>{dataToLabel[dataKey]}</HeaderCell>\r\n          <Cell dataKey={dataKey} idName={idName} />\r\n        </Column>\r\n      );\r\n    });\r\n    cols.push(\r\n      <Column width={100} align=\"center\" flexGrow>\r\n        <HeaderCell>{\"Action\"}</HeaderCell>\r\n        <Cell dataKey={idName} idName={idName}>\r\n          {(rowData) => {\r\n            return (\r\n              <Button\r\n                content=\"Book\"\r\n                onClick={() => {\r\n                  this.handleBook(rowData[idName]);\r\n                }}\r\n              />\r\n            );\r\n          }}\r\n        </Cell>\r\n      </Column>\r\n    );\r\n    this.setState({ cols });\r\n  };\r\n  render() {\r\n    // NOTE: use snippet 'log'\r\n    const { sessionList } = this.props;\r\n    let list = Object.assign([], sessionList);\r\n\r\n    for (let item of list) {\r\n      console.log(item);\r\n      item[\"cinemaName\"] = item[\"cinema\"][\"name\"];\r\n      item[\"filmName\"] = item[\"film\"][\"name\"];\r\n      item[\"roomName\"] = item[\"room\"][\"roomName\"];\r\n     \r\n    }\r\n\r\n    const { cols } = this.state;\r\n    return (\r\n      <Table data={sessionList} autoHeight bordered defaultExpandAllRows>\r\n        {cols}\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SessionInfo);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Icon,\r\n  Image,\r\n  Menu,\r\n  Input,\r\n  Card,\r\n  Rating,\r\n  List,\r\n  Item,\r\n} from \"semantic-ui-react\";\r\nimport { getPlaceHolder } from \"utils/placeHolder\";\r\nimport {\r\n  getOne,\r\n} from \"utils/request\";\r\nimport SessionInfo from './sessionInfo'\r\nvar faker = require(\"faker\");\r\n\r\nclass FilmDetail extends Component {\r\n  state = {\r\n    filmData: {},\r\n    name: \"\",\r\n    duration: 0,\r\n    actors: \"\",\r\n    director: \"\",\r\n    rating: 0,\r\n    type: \"\",\r\n    poster: \"\",\r\n    introduction: \"\",\r\n    status: \"\",\r\n    sessionList:[],\r\n  };\r\n  componentWillMount() {\r\n    const id = this.props.match.params.id;\r\n    console.log(id);\r\n    getOne(\"/film/\" + id).then((filmData) => {\r\n      this.setState({ filmData });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { filmData } = this.state;\r\n    const filmContent = [];\r\n    const {sessionList}=filmData\r\n\r\n    if (\r\n      filmData.duration === 0 ||\r\n      filmData.duration === undefined ||\r\n      filmData.duration === null\r\n    ) {\r\n      filmData.duration = faker.random.number();\r\n    }\r\n    if (filmData.actors === null) {\r\n      filmData.actors=\"\"\r\n      for (let i = 0; i < 5; i++) {\r\n        filmData.actors += faker.name.findName() + \", \";\r\n      }\r\n      filmData.actors += faker.name.findName() + \"\";\r\n    }\r\n    if(filmData.type===null||filmData.type===undefined){\r\n      filmData.type=faker.hacker.noun()\r\n    }\r\n    if(filmData.introduction===null||filmData.introduction===undefined){\r\n      filmData.introduction=faker.lorem.paragraph()\r\n    }\r\n    const cards=[{\r\n      header:\"Film Name\",\r\n      description:\"\"\r\n    },]\r\n    filmContent.push(\r\n      <List celled relaxed size=\"large\" >\r\n        <List.Item>\r\n          <Image src={getPlaceHolder(500)}></Image>\r\n        </List.Item>\r\n        <List.Item\r\n          header=\"Film Name:\"\r\n          content={filmData.name}\r\n     \r\n        />\r\n        <List.Item header=\"Duration:\" content={filmData.duration + \" min\"} />\r\n        <List.Item header=\"Actors:\" content={filmData.actors} />\r\n        <List.Item header=\"Type:\" content={filmData.type} />\r\n        <List.Item header=\"rating:\" content={filmData.rating} />\r\n        <List.Item header=\"introduction:\" content={filmData.introduction} />\r\n        <List.Item header=\"status:\" content={filmData.status} />\r\n      </List>\r\n    );\r\n      // TODO\r\n    // ----------session list-------\r\n    // ----------comment list-------\r\n    // console.log(sessionList)\r\n    return (\r\n      <Grid centered>\r\n        <Grid.Row textAlign=\"left\" columns={2} >\r\n          <Grid.Column width={8} >{filmContent}</Grid.Column>\r\n        </Grid.Row>\r\n\r\n        <Grid.Row textAlign=\"left\" columns={2} >\r\n          <Grid.Column width={15} > <SessionInfo sessionList={sessionList}/> </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nFilmDetail.propTypes = {};\r\n\r\nexport default FilmDetail;\r\n// \"duration\": null,\r\n// \"actors\": null,\r\n// \"director\": null,\r\n// \"filmId\": 18,\r\n// \"name\": \"www\",\r\n// \"rating\": null,\r\n// \"typeId\": 4,\r\n// \"type\": \"what\",\r\n// \"poster\": null,\r\n// \"introduction\": null,\r\n// \"status\": \"Not released\"\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Segment,\r\n  Form,\r\n  Message,\r\n  Input,\r\n  Checkbox,\r\n} from \"semantic-ui-react\";\r\nconst styleMeta = {\r\n  // font:\"#5f5447\"\r\n  color: \"#5f6368\",\r\n  fontFamily: \"Roboto,Arial,sans-serif\",\r\n  fontSize: \"11px\",\r\n};\r\nconst styleInfo = {\r\n  // font:\"#5f5447\"\r\n  color: \"#202124\",\r\n  fontFamily: \"Roboto,Arial,sans-serif\",\r\n  fontSize: \"16px\",\r\n};\r\n\r\nconst SegmentInfo = ({\r\n  meta,\r\n  info,\r\n  editable,\r\n  dataKey,\r\n  onEditChange,\r\n  onEditClick,\r\n}) => {\r\n  return (\r\n    <Segment size=\"large\">\r\n      <Grid columns={2}>\r\n        <Grid.Row verticalAlign=\"middle\">\r\n          <Grid.Column style={styleMeta}>{meta}</Grid.Column>\r\n          <Grid.Column style={styleInfo} textAlign=\"center\">\r\n            {editable === true ? (\r\n              <Input\r\n                defaultValue={info}\r\n                onChange={(event) => {\r\n                  onEditChange(dataKey, event.target.value);\r\n                }}\r\n              />\r\n            ) : (\r\n              info\r\n            )}\r\n          </Grid.Column>\r\n          <Grid.Column textAlign=\"right\"></Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\nexport default SegmentInfo;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  Form,\r\n  FormInput,\r\n  Grid,\r\n  Segment,\r\n  Message,\r\n  Header,\r\n  Checkbox,\r\n  Icon,\r\n  Confirm,\r\n} from \"semantic-ui-react\";\r\n// import { BrowserRouter as Router,Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actions } from \"redux/user\";\r\nimport PropTypes from \"prop-types\";\r\nimport SegmentInfo from \"components/public/SegmentInfo\";\r\nimport { getUserByToken, setTokenNull } from \"utils/token\";\r\nimport {\r\n  getList,\r\n  updateOne,\r\n  deleteOne,\r\n  createOne,\r\n  getOne,\r\n} from \"utils/request\";\r\nconst styleMeta = {\r\n  // font:\"#5f5447\"\r\n  color: \"#5f6368\",\r\n  fontFamily: \"Roboto,Arial,sans-serif\",\r\n  fontSize: \"11px\",\r\n};\r\nconst styleInfo = {\r\n  // font:\"#5f5447\"\r\n  color: \"#202124\",\r\n  fontFamily: \"Roboto,Arial,sans-serif\",\r\n  fontSize: \"16px\",\r\n};\r\n\r\nclass Profile extends Component {\r\n  static defaultProps = {\r\n    dataNameToMeta: {\r\n      username: \"Username\",\r\n      password: \"Password\",\r\n      email: \"Email\",\r\n      tel: \"Phone\",\r\n      isStudent: \"Is a student\",\r\n    },\r\n  };\r\n  state = {\r\n    user: {},\r\n    checked: false,\r\n    confirmOpened: false,\r\n  };\r\n async componentWillMount() {\r\n    let { user } = this.state;\r\n    // const id = this.props.userId;\r\n    let id = -1;\r\n    await getUserByToken().then((res) => {\r\n      id = res[\"userId\"];\r\n    });\r\n\r\n    getOne(\"/user/\" + id).then((res) => {\r\n      user = res;\r\n      this.setState({ user });\r\n      if (user.isStudent === 1) {\r\n        this.setState({ checked: true });\r\n      }\r\n    });\r\n  }\r\n  componentWillUpdate() {}\r\n  onEditChange = (dataKey, newVal) => {\r\n    let { user, checked } = this.state;\r\n    user[dataKey] = newVal;\r\n    this.setState({ user });\r\n  };\r\n  handleCheckBox = (e) => {\r\n    let { user, checked } = this.state;\r\n    this.setState({ checked: !checked });\r\n    user.isStudent = !checked;\r\n    updateOne(\"/user\", user);\r\n  };\r\n  onEditClick = (e) => {\r\n    let { user, checked } = this.state;\r\n    if (user[\"editable\"] === true) {\r\n      updateOne(\"/user\", user);\r\n    }\r\n    user[\"editable\"] = !user[\"editable\"];\r\n    console.log(user[\"editable\"]);\r\n    this.setState({ user });\r\n  };\r\n\r\n  handleLogout = () => {\r\n    const { history, clearUserId } = this.props;\r\n    setTokenNull();\r\n    clearUserId();\r\n    history.push(\"/index\");\r\n  };\r\n  render() {\r\n    let segments = [];\r\n    let { user, checked, confirmOpened } = this.state;\r\n    const { dataNameToMeta } = this.props;\r\n    const { editable } = user;\r\n    const keys = Object.keys(dataNameToMeta);\r\n    for (let key of keys) {\r\n      const meta = dataNameToMeta[key],\r\n        info = user[key];\r\n      if (key === \"isStudent\") {\r\n        segments.push(\r\n          <Segment size=\"large\">\r\n            <Grid columns={2}>\r\n              <Grid.Row verticalAlign=\"middle\">\r\n                <Grid.Column style={styleMeta}>{meta}</Grid.Column>\r\n                <Grid.Column style={styleInfo} textAlign=\"center\">\r\n                  <Checkbox checked={checked} onChange={this.handleCheckBox} />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        );\r\n        continue;\r\n      }\r\n      segments.push(\r\n        <SegmentInfo\r\n          meta={meta}\r\n          info={info}\r\n          dataKey={key}\r\n          onEditChange={this.onEditChange}\r\n          editable={editable}\r\n          onEditClick={this.onEditClick}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={12}>\r\n            <Segment.Group content=\"\">{segments}</Segment.Group>\r\n            <Button\r\n              floated=\"left\"\r\n              color=\"green\"\r\n              size=\"large\"\r\n              content={editable ? \"Save\" : \"Edit\"}\r\n              onClick={this.onEditClick}\r\n            />\r\n            <Button\r\n              floated=\"right\"\r\n              negative\r\n              size=\"large\"\r\n              content={\"Log out\"}\r\n              onClick={(e) => {\r\n                this.setState({ confirmOpened: true });\r\n              }}\r\n            />\r\n            <Confirm\r\n              open={confirmOpened}\r\n              onCancel={(e) => {\r\n                this.setState({ confirmOpened: false });\r\n              }}\r\n              onConfirm={(e) => {\r\n                this.handleLogout();\r\n                this.setState({ confirmOpened: false });\r\n              }}\r\n            ></Confirm>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    //   username: state.registerReducer.username,\r\n    userId: state.user.userId,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    clearUserId: bindActionCreators(actions.clearUserId, dispatch),\r\n  };\r\n}\r\n\r\n//   const RegisterForm=RegisterFormUI\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","\r\nexport function dateFormat( date) {\r\n    let fmt=\"YYYY-mm-dd HH:MM\"\r\n    let ret;\r\n    const opt = {\r\n        \"Y+\": date.getFullYear().toString(),        // 年\r\n        \"m+\": (date.getMonth() + 1).toString(),     // 月\r\n        \"d+\": date.getDate().toString(),            // 日\r\n        \"H+\": date.getHours().toString(),           // 时\r\n        \"M+\": date.getMinutes().toString(),         // 分\r\n        \"S+\": date.getSeconds().toString()          // 秒\r\n        // 有其他格式化字符需求可以继续添加，必须转化成字符串\r\n    };\r\n    for (let k in opt) {\r\n        ret = new RegExp(\"(\" + k + \")\").exec(fmt);\r\n        if (ret) {\r\n            fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, \"0\")))\r\n        };\r\n    };\r\n    return fmt;\r\n  }","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport Alert from \"components/public/Alert\";\r\nimport {\r\n  Link,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Item,\r\n  Button,\r\n  Segment,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { getPlaceHolder } from \"utils/placeHolder\";\r\nimport {\r\n  getList,\r\n  updateOne,\r\n  deleteOne,\r\n  createOne,\r\n  getOne,\r\n} from \"utils/request\";\r\nimport SegmentInfo from \"components/public/SegmentInfo\";\r\nimport { getUserByToken } from \"utils/token\";\r\nimport { dateFormat } from \"utils/timeFormat\";\r\nclass SessionDetail extends Component {\r\n  /**\r\nsessionId: 2\r\nfilmId: 19\r\ntime: \"2020-04-10 14:30\"\r\nstatus: null\r\nremainingSeats: 50\r\nroomId: 3\r\ncinemaId: 5\r\nprice: null\r\ncinema: null\r\nfilm: null\r\nroom: null\r\neditable: false */\r\n  static defaultProps = {\r\n    dataToLabel: {\r\n      filmName: \"Film\",\r\n      time: \"Time\",\r\n      status: \"Status\",\r\n      remainingSeats: \"Remaining seats\",\r\n      cinemaName: \"Cinema\",\r\n      roomName: \"Room\",\r\n      price: \"Price\",\r\n    },\r\n  };\r\n  state = {\r\n    segments: [],\r\n    film: {},\r\n    cinema: {},\r\n    room: {},\r\n  };\r\n  handleBook = async () => {\r\n    const { history } = this.props;\r\n    const { data } = this.state;\r\n    const sessionId = this.props.match.params.id;\r\n    let now = new Date();\r\n    now = dateFormat(now);\r\n    let userId = -1;\r\n    await getUserByToken().then((res) => {\r\n      userId = res[\"userId\"];\r\n      console.log('====================================');\r\n      console.log(res);\r\n      console.log('====================================');\r\n    });\r\n    let obj = {\r\n      userId: userId,\r\n      sessionId: sessionId,\r\n      orderTime: now,\r\n      payTime: now,\r\n      status: \"has paid\",\r\n      fee: data[\"price\"],\r\n    };\r\n    await createOne(\"/order\", obj).then((res) => {\r\n      Alert.show(\"Order\", \"the order is creating\");\r\n      history.push(\"/profile\");\r\n    });\r\n  };\r\n  componentWillMount() {\r\n    const id = this.props.match.params.id;\r\n    getOne(\"/session/\" + id).then((data) => {\r\n      const film = data[\"film\"];\r\n      const cinema = data[\"cinema\"];\r\n      const room = data[\"room\"];\r\n      data[\"filmName\"] = film[\"name\"];\r\n      data[\"cinemaName\"] = cinema[\"name\"];\r\n      data[\"roomName\"] = room[\"roomName\"];\r\n      this.setState({ data, film, cinema, room });\r\n    });\r\n  }\r\n  //   TODO: finish order system\r\n  render() {\r\n    let segments = [];\r\n    let { data } = this.state;\r\n    data = Object.assign({}, data);\r\n    let { dataToLabel, history } = this.props;\r\n    dataToLabel = Object.assign({}, dataToLabel);\r\n    let cols = Object.keys(dataToLabel);\r\n    cols.forEach((dataName) => {\r\n      segments.push(\r\n        <SegmentInfo\r\n          meta={dataToLabel[dataName]}\r\n          info={data[dataName]}\r\n          editable={false}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={12}>\r\n            <Header size=\"huge\">Session Detail</Header>\r\n            <Segment.Group>{segments}</Segment.Group>\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              size=\"massive\"\r\n              content=\"Book!\"\r\n              onClick={this.handleBook}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    userId: state.user.userId,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    // handleChangeUsername:bindActionCreators(actions.handleChangeUsername,dispatch),\r\n  };\r\n}\r\n\r\n//   const RegisterForm=RegisterFormUI\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SessionDetail);\r\n// \"orderId\": 1,\r\n// \"userId\": 1,\r\n// \"sessionId\": 5,\r\n// \"orderTime\": \"2020-04-27 17:39\",\r\n// \"payTime\": \"2020-04-29 17:39\",\r\n// \"status\": \"\",\r\n// \"fee\": 11111,\r\n","import {\r\n  createBrowserHistory,\r\n  createHashHistory,\r\n  createMemoryHistory,\r\n} from \"history\";\r\nimport { isLogged } from \"utils/token\";\r\nexport function loginJump(history) {\r\n  if (!isLogged()) {\r\n    setTimeout(() => {\r\n      history.replace(\"/login\");\r\n    }, 1000);\r\n  } \r\n\r\n}\r\n","import { isLogged } from \"utils/token\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\nimport { loginJump } from \"utils/history\";\r\nclass PrivateRoute extends Component {\r\n  componentWillMount() {\r\n    const { history } = this.props;\r\n    loginJump(history);\r\n  }\r\n  componentWillUpdate() {\r\n    const { history } = this.props;\r\n    loginJump(history);\r\n    // TODO: fix  book ticket and profile \r\n  }\r\n  render() {\r\n    let { component: Component, ...rest } = this.props;\r\n    return isLogged() ? (\r\n      <Route {...rest} render={(props) => <Component {...props} />} />\r\n    ) : (\r\n      <Message error size=\"massive\">\r\n        Please Login...\r\n      </Message>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PrivateRoute);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Login from \"components/user/login/login\";\r\nimport Register from \"components/user/register/register\";\r\nimport { getList, updateOne, deleteOne, createOne } from \"utils/request\";\r\nimport TopMenu from \"../public/TopMenu\";\r\nimport IndexBody from \"./IndexBody\";\r\nimport FilmDetail from \"components/film/FilmDetail.js\";\r\nimport Profile from \"../user/profile/profile\";\r\nimport OrderDetail from \"components/order/orderDetail\"\r\nimport { isTokenNull } from \"utils/token\";\r\nimport SessionDetail from 'components/session/sessionDetail'\r\nimport PrivateRoute from \"Route/PrivateRoute\";\r\nclass Index extends Component {\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <TopMenu />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column width={16}>\r\n            <Switch>\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <PrivateRoute exact path=\"/profile\" component={Profile} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <PrivateRoute exact path=\"/film/:id\" component={FilmDetail} />\r\n              <PrivateRoute exact path=\"/session/:id\" component={SessionDetail} />\r\n              <PrivateRoute  path=\"/index\" component={IndexBody} />\r\n              <PrivateRoute  path=\"/\" component={IndexBody} />\r\n              {/* TODO test area */}\r\n            </Switch>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n\r\nclass Model extends Component {\r\n  componentWillMount() {}\r\n\r\n  componentDidMount() {}\r\n\r\n  componentWillReceiveProps(nextProps) {}\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {}\r\n\r\n  componentWillUpdate(nextProps, nextState) {}\r\n\r\n  componentDidUpdate(prevProps, prevState) {}\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Mock from 'mockjs'\r\nMock.mock('/data',{\r\n    'list|8':[{\r\n        'name':'@city',\r\n        'number|1-100':100\r\n    }]\r\n})","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport '../mock/mockdata'\r\nclass PostList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      news: [\r\n        {\r\n          title: \"大家一起来讨论React吧\",\r\n          author: \"张三\",\r\n          date: \"2017-09-01 10:00\"\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  handle_click = () => {\r\n    axios.get('http://rap2.taobao.org:38080/app/mock/248939/api/user')\r\n    .then(res => {\r\n        console.log(res)\r\n    })\r\n    .catch(err => {\r\n        console.error(err); \r\n    })\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.handle_click}>button</button>\r\n        <br />\r\n        帖子列表：\r\n        {this.state.news.map((item, i) => (\r\n          <div key={i}>\r\n            <PostItem\r\n              title={item.title}\r\n              author={item.author}\r\n              date={item.date}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PostItem extends Component {\r\n  render() {\r\n    const { title, author, date } = this.props;\r\n    return (\r\n      <div>\r\n        <div>{title}</div>\r\n        <div>\r\n          创建人：<span>{author}</span>\r\n        </div>\r\n        <div>\r\n          创建时间：<span>{date}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostList;\r\n","\r\nimport {\r\n    combineReducers,\r\n} from 'redux';\r\nimport {userReducer} from './user';\r\n// import {xxx} mean that need to export like this: export XXX ,import xxx from means that export default xxx \r\nconst rootReducers = combineReducers({ \r\n  user:userReducer,\r\n\r\n});\r\n\r\nexport default rootReducers;","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport { Grid, Menu, Sidebar, Segment, Table } from \"semantic-ui-react\";\r\n\r\nclass AdminSidebar extends Component {\r\n  render() {\r\n    const { visible } = this.props;\r\n    return (\r\n      <Sidebar\r\n        as={Menu}\r\n        width=\"thin\"\r\n        animation=\"push\"\r\n        direction=\"left\"\r\n        vertical\r\n        icon=\"labeled\"\r\n        visible={visible}\r\n      >\r\n        <NavLink to=\"/admin/user-manage\">\r\n          <Menu.Item icon=\"users\" name=\"User Manage\"></Menu.Item>\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/admin/admin-manage\">\r\n          <Menu.Item icon=\"user md\" name=\"Admin Manage\"></Menu.Item>\r\n        </NavLink>\r\n        <NavLink to=\"/admin/order-manage\">\r\n          <Menu.Item icon=\"server\" name=\"Order Manage\"></Menu.Item>\r\n        </NavLink>\r\n        <NavLink to=\"/admin/session-manage\">\r\n          <Menu.Item icon=\"compose\" name=\"Session Manage\"></Menu.Item>\r\n        </NavLink>\r\n        <NavLink to=\"/admin/film-manage\">\r\n          <Menu.Item icon=\"film\" name=\"Film Manage\"></Menu.Item>\r\n        </NavLink>\r\n        <NavLink to=\"/admin/cinema-manage\">\r\n          <Menu.Item icon=\"home\" name=\"Cinema Manage\"></Menu.Item>\r\n        </NavLink>\r\n        <NavLink to=\"/admin/comment-manage\">\r\n          <Menu.Item icon=\"comments\" name=\"Comment Manage\"></Menu.Item>\r\n        </NavLink>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nAdminSidebar.propTypes = {};\r\n\r\nexport default AdminSidebar;\r\n","import React from \"react\";\r\nimport { Form, Input } from \"semantic-ui-react\";\r\nexport const FormFieldInput = ({ formProps, ...props }) => {\r\n  const {\r\n    getErrorProp,\r\n    fieldValidate,\r\n    updateFormMsg,\r\n    updateField,\r\n    state,\r\n    setState,\r\n    title,\r\n    initVal,\r\n    placeholder,\r\n    dataKey,\r\n    descriptors,\r\n  } = formProps;\r\n  const FormField = Form.Field;\r\n\r\n  const descriptor = {\r\n    [dataKey]: descriptors[dataKey],\r\n  };\r\n\r\n  return (\r\n    <FormField\r\n      control={Input}\r\n      label={title}\r\n      placeholder={placeholder}\r\n      // NOTE:Warning: A component is changing an uncontrolled input of type text to be controlled. Input elements should not switch from uncontrolled to controlled (or vice versa).\r\n      value={initVal || \"\"}\r\n      onChange={(e) => {\r\n        updateField(e, state, setState);\r\n      }}\r\n      name={dataKey}\r\n      error={getErrorProp(dataKey, state)}\r\n      onBlur={async (e) => {\r\n        const errors = await fieldValidate(descriptor, state);\r\n        updateFormMsg(errors, state, setState);\r\n      }}\r\n    />\r\n  );\r\n};\r\n","export default{\r\n    User:\"/user\",\r\n    Cinema:\"/cinema\",\r\n    Comment:\"/comment\",\r\n    Film:\"/film\",\r\n    Room:\"/room\",\r\n    Seat:\"/seat\",\r\n    Session:\"/session\",\r\n    Order:\"/order\",\r\n    Type:\"/type\",\r\n    Admin:\"/admin\",\r\n    queryUser: (id)=>\"/user/\"+id,\r\n    queryAdmin: (id)=>\"/admin/\"+id,\r\n    queryCinema: (id)=>\"/cinema/\"+id,\r\n    queryComment: (id)=>\"/comment/\"+id,\r\n    queryFilm: (id)=>\"/film/\"+id,\r\n    queryRoom: (id)=>\"/room/\"+id,\r\n    querySeat: (id)=>\"/seat/\"+id,\r\n    querySession: (id)=>\"/session/\"+id,\r\n    queryOrder: (id)=>\"/order/\"+id,\r\n    queryType: (id)=>\"/type/\"+id,\r\n\r\n}","import React from \"react\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Form, Header, Segment } from \"semantic-ui-react\";\r\n// BaseForm\r\nexport default ({ formProps }) => {\r\n  const {\r\n    dispatch,\r\n    updateFormMsg,\r\n    fieldValidate,\r\n    canDispatch,\r\n    createStateFromDataProps,\r\n    clearInputVal,\r\n    formFields,\r\n    header,\r\n    dataProps,\r\n    type,\r\n    state,\r\n    setState,\r\n    descriptors,\r\n    api,\r\n  } = formProps;\r\n  return (\r\n    <Segment stacked size=\"huge\">\r\n      <Header>{header}</Header>\r\n      <Form>\r\n        <Button\r\n          floated=\"right\"\r\n          color=\"red\"\r\n          size=\"mini\"\r\n          icon=\"undo\"\r\n          onClick={() => {\r\n            const nullValState = createStateFromDataProps(false, dataProps);\r\n            const newState = clearInputVal(nullValState, state);\r\n            setState({ ...newState });\r\n          }}\r\n          content=\"Clear All\"\r\n        />\r\n        {formFields}\r\n        <Button\r\n          positive\r\n          icon=\"checkmark\"\r\n          type=\"submit\"\r\n          labelPosition=\"right\"\r\n          onClick={async (e) => {\r\n            const errors = await fieldValidate(descriptors, state);\r\n            updateFormMsg(errors, state, setState);\r\n            if (canDispatch(errors)) dispatch(type, state, api);\r\n          }}\r\n          content=\"OK\"\r\n        />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n","import { FormFieldInput } from \"components/base/form/FormFieldInput\";\r\nimport React, { useState } from \"react\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Form, Header, Segment } from \"semantic-ui-react\";\r\nimport Api from \"utils/api\";\r\nimport { Rules } from \"utils/validatorRules\";import BaseForm from \"components/base/form/BaseTableForm\";\r\nconst { Admin } = Api;\r\nconst api = Admin;\r\nexport const AdminForm = ({ rowData, type, formProps }) => {\r\n  let header = {\r\n    update: \"Edit an admin\",\r\n    create: \"Add an admin\",\r\n  };\r\n  header = header[type];\r\n  const dataProps = {\r\n    username: {\r\n      descriptor: {\r\n        username: [Rules.required(\"username\")],\r\n      },\r\n      dataKey: \"username\",\r\n      title: \"Username\",\r\n      placeholder: \"Please enter username\",\r\n    },\r\n    password: {\r\n      descriptor: {\r\n        password: [Rules.required(\"password\")],\r\n      },\r\n      dataKey: \"password\",\r\n      title: \"Password\",\r\n      placeholder: \"Please enter password\",\r\n    },\r\n  };\r\n  const {\r\n    dispatch,\r\n    updateFormMsg,\r\n    fieldValidate,\r\n    canDispatch,\r\n    getDescriptors,\r\n    createStateFromDataProps,\r\n    clearInputVal,\r\n  } = formProps;\r\n  const [state, setState] = useState(() => {\r\n    const rowDataExisted = rowData !== undefined;\r\n    const obj = createStateFromDataProps(rowDataExisted, dataProps, rowData);\r\n    return {\r\n      ...obj,\r\n      cinemaId: rowDataExisted ? rowData[\"adminId\"] : \"\",\r\n      errMsg: {},\r\n    };\r\n  });\r\n  const descriptors = getDescriptors(dataProps);\r\n  formProps = {\r\n    ...formProps,\r\n    state,\r\n    setState,\r\n    descriptors,\r\n    header,\r\n    dataProps,\r\n    type,\r\n    api,\r\n  };\r\n  const FormField = Form.Field;\r\n\r\n\r\n  const getPasswordField = (key) => {\r\n    const fieldProps = {\r\n      ...dataProps[\"password\"],\r\n      initVal: state.password,\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getUsernameField = (key) => {\r\n    const fieldProps = {\r\n      ...dataProps[\"username\"],\r\n      initVal: state.username,\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getForms = () => {\r\n    let formFields = [];\r\n    let index = 0;\r\n    formFields.push(getUsernameField(index++));\r\n    formFields.push(getPasswordField(index++));\r\n    return formFields;\r\n  };\r\n  const formFields = getForms();\r\n  formProps = {\r\n    ...formProps,\r\n    formFields,\r\n  };\r\n  return (\r\n    <BaseForm formProps={formProps} />\r\n  );\r\n};\r\n","import schema from \"async-validator\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport Api from \"utils/api\";\r\nimport { createOne, updateOne } from \"utils/request\";\r\n\r\nexport default {\r\n  dispatch: async (type, payload, api) => {\r\n    switch (type) {\r\n      case \"update\":\r\n        await updateOne(api, payload);\r\n        break;\r\n      case \"create\":\r\n        await createOne(api, payload);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return;\r\n  },\r\n  fieldValidate: async (descriptor, object) => {\r\n    let validator = new schema(descriptor);\r\n    return validator\r\n      .validate(object)\r\n      .then(() => {\r\n        // what did the function validate\r\n        let fields = Object.keys(descriptor);\r\n        let newMsg = [];\r\n        for (const field of fields) {\r\n          newMsg.push({ field, message: null });\r\n        }\r\n        return newMsg;\r\n      })\r\n      .catch(({ errors, fields }) => {\r\n        return errors;\r\n      });\r\n  },\r\n\r\n  updateField: (e, state, setState) => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  },\r\n  getErrorProp: (dataKey, state) => {\r\n    return state[\"errMsg\"][dataKey];\r\n  },\r\n  updateFormMsg: (errors, state, setState) => {\r\n    let msg = state.errMsg === null ? {} : state.errMsg;\r\n    for (const error of errors) {\r\n      msg[error.field] = error.message;\r\n    }\r\n\r\n    setState({ ...state, errMsg: msg });\r\n  },\r\n  canDispatch: (errors) => {\r\n    for (const i of errors) {\r\n      if (i[\"message\"] !== null) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  },\r\n  getDescriptors: (dataProps) => {\r\n    const objList = Object.keys(dataProps);\r\n    let descriptors = {};\r\n    for (const i of objList) {\r\n      if (dataProps[i][\"descriptor\"] !== undefined) {\r\n        Object.assign(descriptors, dataProps[i][\"descriptor\"]);\r\n      }\r\n    }\r\n    return descriptors;\r\n  },\r\n  createStateFromDataProps: (rowDataExisted, dataProps, rowData) => {\r\n    const keyList = Object.keys(dataProps);\r\n    let obj = {};\r\n    for (const i of keyList) {\r\n      Object.assign(obj, { [i]: rowDataExisted ? rowData[i] : \"\" });\r\n    }\r\n    return obj;\r\n  },\r\n  clearInputVal: (nullValState, state) => {\r\n  \r\n    let newState = state;\r\n    newState = Object.assign(newState, nullValState);\r\n    return newState;\r\n  },\r\n};\r\n","\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Checkbox,\r\n} from \"semantic-ui-react\";\r\nimport { Table, Column, HeaderCell, Cell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\n\r\n\r\nexport default  ({ rowData, dataKey, onClick, idName, ...props }) => {\r\n    // must deliver  dataKey, IdKey, onChange like IdKey=\"adminId\" onChange={this.handleChange} dataKey=\"password\"\r\n    let checkVal = rowData[dataKey];\r\n    let editable = null;\r\n    return (\r\n      <Cell {...props}>\r\n        <Checkbox\r\n          checked={checkVal}\r\n          onClick={(event, data) => {\r\n            onClick(data, rowData[idName]);\r\n          }}\r\n        />\r\n      </Cell>\r\n    );\r\n  };","\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport {  Cell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nexport default  ({ rowData, dataKey, onClick, ...props }) => {\r\n    return (\r\n      <Cell {...props} style={{ padding: \"6px 0\" }}>\r\n        <Button\r\n          appearance=\"link\"\r\n          onClick={() => {\r\n            onClick(dataKey, rowData[dataKey]);\r\n          }}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </Cell>\r\n    );\r\n  };","import oldFormProps from \"components/base/form/formProps\";\r\nimport CheckCell from \"components/table/components/CheckCell\";\r\nimport DeleteActionCell from \"components/table/components/DeleteActionCell\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { Cell, Column, HeaderCell, Table } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Header, Menu, Modal, Segment } from \"semantic-ui-react\";\r\nimport { createOne, deleteOne, getList, updateOne } from \"utils/request\";\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class EditTable\r\n * @extends {Component}\r\n */\r\n\r\nexport default class extends Component {\r\n  static defaultProps = {};\r\n  state = {\r\n    list: [],\r\n    checkedAll: false,\r\n    rowHeight: 50,\r\n  };\r\n  static propTypes = {\r\n    cols: PropTypes.array,\r\n  };\r\n\r\n  /**\r\n   * get list form back-end\r\n   *\r\n   * @memberof EditTable\r\n   */\r\n  updateTable = async () => {\r\n    const { url } = this.props;\r\n    getList(url).then((list) => {\r\n      this.setState({ list });\r\n      // console.log(list);\r\n    });\r\n  };\r\n  /**\r\n    deliver to 'this' father node\r\n * initialize the table\r\n *\r\n * @memberof EditTable\r\n */\r\n  componentDidMount() {\r\n    this.updateTable();\r\n  }\r\n  handleChange = (id, key, value) => {\r\n    const { list } = this.state;\r\n    const { idName } = this.props;\r\n    for (let item of list) {\r\n      if (item[idName] === id) {\r\n        item[key] = value;\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ list });\r\n  };\r\n  /**\r\n   * connect to the delete button\r\n   *\r\n   * @memberof EditTable\r\n   */\r\n  handleDelete = (dataKey, id) => {\r\n    const { url } = this.props;\r\n    const param = { [dataKey]: id };\r\n    // NOTE: @Requestparam\r\n    deleteOne(url, param).then((res) => {\r\n      this.updateTable();\r\n    });\r\n  };\r\n\r\n  handleCheck = (data, id) => {\r\n    const { list } = this.state;\r\n    const { idName } = this.props;\r\n    for (let item of list) {\r\n      if (item[idName] === id) {\r\n        if (item[\"checked\"] === true) {\r\n          item[\"checked\"] = false;\r\n        } else {\r\n          item[\"checked\"] = true;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ list });\r\n  };\r\n  handleDeleteSelected = async () => {\r\n    const { url, idName } = this.props;\r\n    const { list } = this.state;\r\n    for (let item of list) {\r\n      if (item[\"checked\"] === true) {\r\n        const param = { [idName]: item[idName] };\r\n        await deleteOne(url, param);\r\n      }\r\n    }\r\n\r\n    // NOTE : @Requestparam\r\n\r\n    this.updateTable();\r\n  };\r\n  handleRefresh = () => {\r\n    this.updateTable();\r\n  };\r\n  dispatch = async (type, payload, api) => {\r\n    switch (type) {\r\n      case \"update\":\r\n        await updateOne(api, payload);\r\n        break;\r\n      case \"create\":\r\n        await createOne(api, payload);\r\n \r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.updateTable();\r\n  };\r\n  render() {\r\n    const { list, checkedAll, rowHeight } = this.state;\r\n    const { idName, tableTitle, tableColumns, getFormElement } = this.props;\r\n    const formProps = {\r\n      ...oldFormProps,\r\n      dispatch: this.dispatch,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          <Header textAlign=\"center\" as=\"h2\">\r\n            {tableTitle}\r\n          </Header>\r\n        </Segment>\r\n        <Menu>\r\n          <Menu.Item>\r\n            <Modal\r\n              trigger={<Button>Add</Button>}\r\n              closeIcon\r\n              closeOnDimmerClick={false}\r\n            >\r\n              {getFormElement(\"create\", formProps)}\r\n            </Modal>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            icon=\"minus\"\r\n            as={Button}\r\n            name=\"Delete Selected\"\r\n            onClick={this.handleDeleteSelected}\r\n          />\r\n          <Menu.Item\r\n            icon=\"redo\"\r\n            as={Button}\r\n            name=\"\"\r\n            onClick={this.handleRefresh}\r\n          />\r\n        </Menu>\r\n\r\n        <Table\r\n          data={list}\r\n          autoHeight\r\n          virtualized\r\n          bordered\r\n          defaultExpandAllRows\r\n          rowHeight={rowHeight}\r\n        >\r\n          {/* checkbox columns */}\r\n          <Column width={50} align=\"center\" fixed>\r\n            <HeaderCell></HeaderCell>\r\n            <CheckCell\r\n              dataKey=\"checked\"\r\n              idName={idName}\r\n              onClick={this.handleCheck}\r\n            />\r\n          </Column>\r\n          {/* data columns */}\r\n          {tableColumns}\r\n          <Column width={100} sort=\"true\" resizable align=\"center\">\r\n            <HeaderCell>Edit</HeaderCell>\r\n            <Cell>\r\n              {(rowData, rowIndex) => {\r\n                return (\r\n                  <Modal\r\n                    trigger={<Button>Edit</Button>}\r\n                    closeIcon\r\n                    closeOnDimmerClick={false}\r\n                  >\r\n                    {getFormElement(\"update\", formProps, rowData)}\r\n                  </Modal>\r\n                );\r\n              }}\r\n            </Cell>\r\n          </Column>\r\n          <Column width={100} sort=\"true\" resizable align=\"center\">\r\n            <HeaderCell>Delete</HeaderCell>\r\n            <DeleteActionCell dataKey={idName} onClick={this.handleDelete} />\r\n          </Column>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// class table extends Component {\r\n//   componentWillMount() {}\r\n\r\n//   componentDidMount() {}\r\n\r\n//   componentWillReceiveProps(nextProps) {}\r\n\r\n//   shouldComponentUpdate(nextProps, nextState) {}\r\n\r\n//   componentWillUpdate(nextProps, nextState) {}\r\n\r\n//   componentDidUpdate(prevProps, prevState) {}\r\n\r\n//   componentWillUnmount() {}\r\n\r\n//   render() {\r\n//     return <div></div>;\r\n//   }\r\n// }\r\n","import { AdminForm } from \"components/admin/admin/AdminForm\";\r\nimport EditTable from \"components/table/EditTable\";\r\nimport React, { Component } from \"react\";\r\nimport { Cell, Column, HeaderCell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nclass AdminTable extends Component {\r\n  static defaultProps = {\r\n    tableHeaders: [\r\n      {\r\n        title: \"ID\",\r\n        dataKey: \"adminId\",\r\n      },\r\n      {\r\n        title: \"Username\",\r\n        dataKey: \"username\",\r\n      },\r\n      {\r\n        title: \"Password\",\r\n        dataKey: \"password\",\r\n      },\r\n    ],\r\n    url: \"/admin\",\r\n    idName: \"adminId\",\r\n    tableTitle: \"Admin Manage\",\r\n  };\r\n  state = {\r\n    columns: [],\r\n  };\r\n  componentDidMount() {\r\n    this.createAdminCols();\r\n  }\r\n  // NOTE: async function return a Promise!!!\r\n  createAdminCols = async () => {\r\n    const { tableHeaders } = this.props;\r\n\r\n    let columns = [];\r\n    let index = 0;\r\n    for (const header of tableHeaders) {\r\n      columns.push(\r\n        <Column key={index++} width={200} resizable align=\"center\">\r\n          <HeaderCell>{header[\"title\"]}</HeaderCell>\r\n          <Cell dataKey={header[\"dataKey\"]} />\r\n        </Column>\r\n      );\r\n    }\r\n    // columns.push(\r\n    //   <Column width={100} sort=\"true\" resizable align=\"center\">\r\n    //     <HeaderCell>Edit</HeaderCell>\r\n    //     <AdminFormCell type=\"update\" formProps={formProps} />\r\n    //   </Column>\r\n    // );\r\n    this.setState({ columns });\r\n  };\r\n  getFormElement = (type, formProps, rowData) => {\r\n\r\n    return <AdminForm rowData={rowData} type={type} formProps={formProps} />;\r\n  };\r\n  render() {\r\n    let { columns } = this.state;\r\n    console.log(columns);\r\n    return (\r\n      <EditTable\r\n        {...this.props}\r\n        tableColumns={columns}\r\n        getFormElement={this.getFormElement}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminTable;\r\n","import BaseForm from \"components/base/form/BaseTableForm\";\r\nimport { FormFieldInput } from \"components/base/form/FormFieldInput\";\r\nimport React, { useState } from \"react\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Dropdown, Form } from \"semantic-ui-react\";\r\nimport Api from \"utils/api\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nconst { Film, Type } = Api;\r\nconst api = Film;\r\nconst FilmForm = ({ rowData, type, formProps, typeOptions }) => {\r\n  const FormField = Form.Field;\r\n  const {\r\n    getDescriptors,\r\n    createStateFromDataProps,\r\n  } = formProps;\r\n  let header = {\r\n    update: \"Edit a film\",\r\n    create: \"Add a film\",\r\n  };\r\n  const dataProps = {\r\n    type: {\r\n      descriptor: {\r\n        // type: [Rules.required(\"cinema contact\")],\r\n      },\r\n      dataKey: \"type\",\r\n      title: \"Type\",\r\n      placeholder: \"Please enter a film name\",\r\n    },\r\n    name: {\r\n      descriptor: {\r\n        name: [Rules.required(\"name\")],\r\n      },\r\n      dataKey: \"name\",\r\n      title: \"Film\",\r\n      placeholder: \"Please enter a film name\",\r\n    },\r\n    director: {\r\n      descriptor: {\r\n        director: [Rules.required(\"director\")],\r\n      },\r\n      dataKey: \"director\",\r\n      title: \"Director\",\r\n      placeholder: \"Please enter a director name\",\r\n    },\r\n    introduction: {\r\n      descriptor: {\r\n        introduction: [Rules.required(\"introduction\")],\r\n      },\r\n      dataKey: \"introduction\",\r\n      title: \"Introduction\",\r\n      placeholder: \"Please enter introduction\",\r\n    },\r\n    poster: {\r\n      descriptor: {\r\n        poster: [Rules.required(\"poster\")],\r\n      },\r\n      dataKey: \"poster\",\r\n      title: \"Poster\",\r\n      placeholder: \"Please select a poster\",\r\n    },\r\n    duration: {\r\n      descriptor: {\r\n        duration: [Rules.required(\"duration\")],\r\n      },\r\n      dataKey: \"duration\",\r\n      title: \"Duration\",\r\n      placeholder: \"Please enter duration\",\r\n    },\r\n    actors: {\r\n      descriptor: {\r\n        actors: [Rules.required(\"actors\")],\r\n      },\r\n      dataKey: \"actors\",\r\n      title: \"Actors\",\r\n      placeholder: \"Please enter actors\",\r\n    },\r\n    status: {\r\n      descriptor: {\r\n        status: [Rules.required(\"status\")],\r\n      },\r\n      dataKey: \"status\",\r\n      title: \"Status\",\r\n      placeholder: \"Please enter the status\",\r\n    },\r\n  };\r\n\r\n  const [state, setState] = useState(() => {\r\n    const rowDataExisted = rowData !== undefined;\r\n    const obj = createStateFromDataProps(rowDataExisted, dataProps, rowData);\r\n    return {\r\n      ...obj,\r\n      filmId: rowDataExisted ? rowData[\"filmId\"] : \"\",\r\n      errMsg: {},\r\n    };\r\n  });\r\n  const descriptors = getDescriptors(dataProps);\r\n  header = header[type];\r\n  formProps = {\r\n    ...formProps,\r\n    state,\r\n    setState,\r\n    descriptors,\r\n    header,\r\n    dataProps,\r\n    type,\r\n    api,\r\n  };\r\n  const getNameField = (key) => {\r\n    const fieldProps = {\r\n      ...dataProps[\"name\"],\r\n      initVal: state.name,\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  const getTypeField = (key) => {\r\n    const { dataKey, title, placeholder } = dataProps[\"type\"];\r\n    const initValId = state.typeId;\r\n    let pos = 0;\r\n    for (let i = 0; i < typeOptions.length; i++) {\r\n      if (typeOptions[i][\"key\"] === initValId) {\r\n        pos = i;\r\n        break;\r\n      }\r\n    }\r\n    const onTypeChange = (e, v) => {\r\n      setState({ ...state, typeId: v.value });\r\n    };\r\n    return (\r\n      <FormField\r\n        key={key}\r\n        control={Dropdown}\r\n        label={title}\r\n        options={typeOptions}\r\n        onChange={onTypeChange}\r\n        placeholder={placeholder}\r\n        name={dataKey}\r\n        defaultValue={typeOptions[pos].value}\r\n        selection\r\n      />\r\n    );\r\n  };\r\n\r\n  const getDirectorField = (key) => {\r\n    const dataName = \"director\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  const getIntroductionField = (key) => {\r\n    const dataName = \"introduction\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  const getPosterField = (key) => {\r\n    const dataName = \"poster\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  const getDurationField = (key) => {\r\n    const dataName = \"duration\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  const getActorsField = (key) => {\r\n    const dataName = \"actors\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  const getStatusField = (key) => {\r\n    const dataName = \"status\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  // NOTE:  写成组件形式会导致重复render->失焦\r\n  const getForms = () => {\r\n    let index = 0;\r\n    let formFields = [];\r\n    formFields.push(getNameField(index++));\r\n    formFields.push(getActorsField(index++));\r\n    formFields.push(getDirectorField(index++));\r\n    formFields.push(getIntroductionField(index++));\r\n    formFields.push(getPosterField(index++));\r\n    formFields.push(getStatusField(index++));\r\n    formFields.push(getTypeField(index++));\r\n    formFields.push(getDurationField(index++));\r\n    return formFields;\r\n  };\r\n  const formFields = getForms();\r\n  formProps = {\r\n    ...formProps,\r\n    formFields,\r\n  };\r\n  return (\r\n    <BaseForm formProps={formProps} />\r\n  );\r\n};\r\nexport default FilmForm;\r\n","import FilmForm from \"components/admin/film/FilmForm\";\r\nimport EditTable from \"components/table/EditTable\";\r\nimport React, { Component } from \"react\";\r\nimport { Cell, Column, HeaderCell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport Api from \"utils/api\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nimport { getList } from \"utils/request\";\r\nconst { Film, Type } = Api;\r\nconst api = Film;\r\nclass FilmTable extends Component {\r\n  static defaultProps = {\r\n    tableHeaders: [\r\n      {\r\n        title: \"ID\",\r\n        dataKey: \"filmId\",\r\n      },\r\n      {\r\n        title: \"Type\",\r\n        dataKey: \"type\",\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        dataKey: \"name\",\r\n      },\r\n      {\r\n        title: \"Director\",\r\n        dataKey: \"director\",\r\n      },\r\n      {\r\n        title: \"Introduction\",\r\n        dataKey: \"introduction\",\r\n      },\r\n      {\r\n        title: \"Poster\",\r\n        dataKey: \"poster\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataKey: \"status\",\r\n      },\r\n      {\r\n        title: \"Actors\",\r\n        dataKey: \"actors\",\r\n      },\r\n      {\r\n        title: \"Rating\",\r\n        dataKey: \"rating\",\r\n      },\r\n    ],\r\n    url: \"/film\",\r\n    idName: \"filmId\",\r\n    tableTitle: \"Film Manage\",\r\n  };\r\n  state = {\r\n    columns: [],\r\n    typeOptions: [],\r\n  };\r\n  componentDidMount() {\r\n    this.createFilmCols();\r\n    this.getTypeOptions();\r\n  }\r\n\r\n  getTypeOptions = () => {\r\n    let typeOptions = [];\r\n    getList(Type).then((typeList) => {\r\n      for (const type of typeList) {\r\n        typeOptions.push({\r\n          key: type[\"typeId\"],\r\n          value: type[\"typeId\"],\r\n          text: type[\"type\"],\r\n        });\r\n      }\r\n      this.setState({ typeOptions });\r\n    });\r\n  };\r\n  // NOTE: async function return a Promise!!!\r\n  createFilmCols = async () => {\r\n    const { tableHeaders } = this.props;\r\n    let columns = [],\r\n      index = 0;\r\n    for (const header of tableHeaders) {\r\n      columns.push(\r\n        <Column key={index++} width={100} resizable align=\"center\">\r\n          <HeaderCell>{header[\"title\"]}</HeaderCell>\r\n          <Cell dataKey={header[\"dataKey\"]} />\r\n        </Column>\r\n      );\r\n    }\r\n    this.setState({ columns });\r\n  };\r\n  getFormElement = (type, formProps, rowData) => {\r\n    const { typeOptions } = this.state;\r\n    return (\r\n      <FilmForm\r\n        rowData={rowData}\r\n        type={type}\r\n        formProps={formProps}\r\n        typeOptions={typeOptions}\r\n      />\r\n    );\r\n  };\r\n  render() {\r\n    let { columns } = this.state;\r\n    return (\r\n      <EditTable\r\n        {...this.props}\r\n        tableColumns={columns}\r\n        getFormElement={this.getFormElement}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilmTable;\r\n","import { FormFieldInput } from \"components/base/form/FormFieldInput\";\r\nimport React, { useState } from \"react\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Checkbox, Form, Header, Segment } from \"semantic-ui-react\";\r\nimport Api from \"utils/api\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nimport BaseForm from \"components/base/form/BaseTableForm\";\r\nconst { Order } = Api;\r\nconst api = Order;\r\n// OrderForm\r\nexport default ({ rowData, type, formProps }) => {\r\n  const FormField = Form.Field;\r\n  const {\r\n    dispatch,\r\n    updateFormMsg,\r\n    fieldValidate,\r\n    canDispatch,\r\n    getDescriptors,\r\n    createStateFromDataProps,\r\n  } = formProps;\r\n  let header = {\r\n    update: \"Edit an order\",\r\n    create: \"Add an order\",\r\n  };\r\n  header = header[type];\r\n  const dataProps = {\r\n    orderTime: {\r\n      descriptor: {\r\n        orderTime: [Rules.required(\"orderTime\")],\r\n      },\r\n      dataKey: \"orderTime\",\r\n      title: \"Order time\",\r\n      placeholder: \"Please enter order time\",\r\n    },\r\n    payTime: {\r\n      descriptor: {\r\n        payTime: [Rules.required(\"payment time\")],\r\n      },\r\n      dataKey: \"payTime\",\r\n      title: \"Payment time\",\r\n      placeholder: \"Please enter the payment time\",\r\n    },\r\n    status: {\r\n      descriptor: {\r\n        status: [Rules.required(\"status\")],\r\n      },\r\n      dataKey: \"status\",\r\n      title: \"Status\",\r\n      placeholder: \"Please enter the order status\",\r\n    },\r\n    fee: {\r\n      descriptor: {\r\n        tefeel: [Rules.required(\"fee\")],\r\n      },\r\n      dataKey: \"fee\",\r\n      title: \"Fee\",\r\n      placeholder: \"Please enter the fee\",\r\n    },\r\n  };\r\n  const [state, setState] = useState(() => {\r\n    const rowDataExisted = rowData !== undefined;\r\n    const obj = createStateFromDataProps(rowDataExisted, dataProps, rowData);\r\n    return {\r\n      ...obj,\r\n      userId: rowDataExisted ? rowData[\"orderId\"] : \"\",\r\n      errMsg: {},\r\n    };\r\n  });\r\n  const descriptors = getDescriptors(dataProps);\r\n  formProps = {\r\n    ...formProps,\r\n    state,\r\n    setState,\r\n    descriptors,\r\n    header,\r\n    dataProps,\r\n    type,\r\n    api,\r\n  };\r\n\r\n  const getOrderTimeField = (key) => {\r\n    const dataName = \"orderTime\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getFeeField = (key) => {\r\n    const dataName = \"fee\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getStatusField = (key) => {\r\n    const dataName = \"status\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getPayTimeField = (key) => {\r\n    const dataName = \"payTime\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  // NOTE:  写成组件形式会导致重复render->失焦\r\n  const getForms = () => {\r\n    let index = 0;\r\n    let formFields = [];\r\n    formFields.push(getOrderTimeField(index++));\r\n    formFields.push(getPayTimeField(index++));\r\n    formFields.push(getStatusField(index++));\r\n    formFields.push(getFeeField(index++));\r\n    return formFields;\r\n  };\r\n  const formFields = getForms();\r\n  formProps = {\r\n    ...formProps,\r\n    formFields,\r\n  };\r\n  return <BaseForm formProps={formProps} />;\r\n};\r\n","import DeleteActionCell from \"components/table/components/DeleteActionCell\";\r\nimport React, { Component } from \"react\";\r\nimport { Cell, Column, HeaderCell, Table } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Form, Header, Modal, Segment } from \"semantic-ui-react\";\r\nimport Api from \"utils/api\";\r\nimport { getList, createOne, deleteOne, updateOne } from \"utils/request\";\r\nimport OrderForm from \"./OrderForm\";\r\nimport oldFormProps from \"components/base/form/formProps\";\r\nconst { Order } = Api;\r\nconst api = Order;\r\nconst rowKey = \"orderId\";\r\nclass OrderTable extends Component {\r\n  static defaultProps = {\r\n    tableHeaders: [\r\n      {\r\n        title: \"ID\",\r\n        dataKey: \"orderId\",\r\n      },\r\n      {\r\n        title: \"Order Time\",\r\n        dataKey: \"orderTime\",\r\n      },\r\n      {\r\n        title: \"Pay Time\",\r\n        dataKey: \"payTime\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataKey: \"status\",\r\n      },\r\n      {\r\n        title: \"Fee\",\r\n        dataKey: \"fee\",\r\n      },\r\n    ],\r\n    url: \"/order\",\r\n    idName: \"orderId\",\r\n    tableTitle: \"Order Manage\",\r\n  };\r\n  state = {\r\n    columns: [],\r\n    data: {},\r\n    expandedRowKeys: [],\r\n  };\r\n  componentDidMount() {\r\n    this.createFilmCols();\r\n    const { url } = this.props;\r\n    let list = {};\r\n    getList(url).then((res) => {\r\n      list = res;\r\n      this.setState({ data: list });\r\n    });\r\n    this.updateTable();\r\n  }\r\n  updateTable = async () => {\r\n    const { url } = this.props;\r\n    getList(url).then((list) => {\r\n      this.setState({ list });\r\n      // console.log(list);\r\n    });\r\n  };\r\n  /**\r\n    deliver to 'this' father node\r\n * initialize the table\r\n *\r\n * @memberof EditTable\r\n */\r\n  handleChange = (id, key, value) => {\r\n    const { list } = this.state;\r\n    const { idName } = this.props;\r\n    for (let item of list) {\r\n      if (item[idName] === id) {\r\n        item[key] = value;\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ list });\r\n  };\r\n  /**\r\n   * connect to the delete button\r\n   *\r\n   * @memberof EditTable\r\n   */\r\n  handleDelete = (dataKey, id) => {\r\n    const { url } = this.props;\r\n    const param = { [dataKey]: id };\r\n    // NOTE: @Requestparam\r\n    deleteOne(url, param).then((res) => {\r\n      this.updateTable();\r\n    });\r\n  };\r\n\r\n  handleCheck = (data, id) => {\r\n    const { list } = this.state;\r\n    const { idName } = this.props;\r\n    for (let item of list) {\r\n      if (item[idName] === id) {\r\n        if (item[\"checked\"] === true) {\r\n          item[\"checked\"] = false;\r\n        } else {\r\n          item[\"checked\"] = true;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ list });\r\n  };\r\n  handleDeleteSelected = async () => {\r\n    const { url, idName } = this.props;\r\n    const { list } = this.state;\r\n    for (let item of list) {\r\n      if (item[\"checked\"] === true) {\r\n        const param = { [idName]: item[idName] };\r\n        await deleteOne(url, param);\r\n      }\r\n    }\r\n\r\n    // NOTE : @Requestparam\r\n\r\n    this.updateTable();\r\n  };\r\n  handleRefresh = () => {\r\n    this.updateTable();\r\n  };\r\n  dispatch = async (type, payload, api) => {\r\n    switch (type) {\r\n      case \"update\":\r\n        await updateOne(api, payload);\r\n        break;\r\n      case \"create\":\r\n        await createOne(api, payload);\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.updateTable();\r\n  };\r\n  handleExpanded = (rowData, dataKey) => {\r\n    const { expandedRowKeys } = this.state;\r\n\r\n    let open = false;\r\n    const nextExpandedRowKeys = [];\r\n\r\n    expandedRowKeys.forEach((key) => {\r\n      if (key === rowData[rowKey]) {\r\n        open = true;\r\n      } else {\r\n        nextExpandedRowKeys.push(key);\r\n      }\r\n    });\r\n\r\n    if (!open) {\r\n      nextExpandedRowKeys.push(rowData[rowKey]);\r\n    }\r\n    this.setState({\r\n      expandedRowKeys: nextExpandedRowKeys,\r\n    });\r\n  };\r\n  // NOTE: async function return a Promise!!!\r\n  createFilmCols = async () => {\r\n    const { tableHeaders } = this.props;\r\n    let columns = [],\r\n      index = 0;\r\n    for (const header of tableHeaders) {\r\n      columns.push(\r\n        <Column key={index++} width={100} resizable align=\"center\">\r\n          <HeaderCell>{header[\"title\"]}</HeaderCell>\r\n          <Cell dataKey={header[\"dataKey\"]} />\r\n        </Column>\r\n      );\r\n    }\r\n    this.setState({ columns });\r\n  };\r\n  getFormElement = (type, formProps, rowData) => {\r\n    return <OrderForm rowData={rowData} type={type} formProps={formProps} />;\r\n  };\r\n  // TODO: End here\r\n  render() {\r\n    const { idName } = this.props;\r\n    const formProps = {\r\n      ...oldFormProps,\r\n      dispatch: this.dispatch,\r\n    };\r\n    let { columns, expandedRowKeys, data } = this.state;\r\n    return (\r\n      <Table\r\n        rowExpandedHeight={600}\r\n        height={400}\r\n        data={data}\r\n        rowKey={rowKey}\r\n        expandedRowKeys={expandedRowKeys}\r\n        onRowClick={(data) => {\r\n          console.log(data);\r\n        }}\r\n        renderRowExpanded={(rowData) => {\r\n          const { user, session, film, cinema, room } = rowData;\r\n          return (\r\n            <div>\r\n              <Segment>\r\n                <Form>\r\n                  <Header content=\"User Info\" />{\" \"}\r\n                  <Form.Input\r\n                    fluid\r\n                    label=\"Username\"\r\n                    value={user[\"username\"]}\r\n                    readOnly\r\n                  />\r\n                  <Form.Input\r\n                    fluid\r\n                    label=\"Email\"\r\n                    value={user[\"email\"]}\r\n                    readOnly\r\n                  />\r\n                </Form>\r\n              </Segment>\r\n              <Segment>\r\n                <Form>\r\n                  <Header content=\"Film Info\" />{\" \"}\r\n                  <Form.Input\r\n                    fluid\r\n                    label=\"Film\"\r\n                    value={film[\"name\"]}\r\n                    readOnly\r\n                  />\r\n                  <Form.Input\r\n                    fluid\r\n                    label=\"Director\"\r\n                    value={film[\"director\"]}\r\n                    readOnly\r\n                  />\r\n                </Form>\r\n              </Segment>\r\n            </div>\r\n          );\r\n        }}\r\n      >\r\n        {/* checked: false\r\ncinema: null\r\neditable: false\r\nfee: 11111\r\nfilm: {filmId: 18, typeId: 5, name: \"www\", director: \"12312\", introduction: \"123123sdf\", …}\r\norderId: 1\r\norderTime: \"2020-04-27 17:39\"\r\npayTime: \"2020-04-29 17:39\"\r\nroom: {roomId: 5, cinemaId: 7, seats: 50, roomName: \"E\"}\r\nsession: {sessionId: 5, filmId: 18, time: \"2020-07-10 08:30\", status: null, remainingSeats: 450, …}\r\nsessionId: 5\r\nstatus: \"\"\r\nuser: {username: \"liang\", email: \"347733121@qq.com\", password: \"123\", tel: \"2223\", isStudent: 1, …}\r\nuserId: 1 */}\r\n        <Column width={100} align=\"center\">\r\n          <HeaderCell>#</HeaderCell>\r\n          <ExpandCell\r\n            dataKey=\"id\"\r\n            expandedRowKeys={expandedRowKeys}\r\n            onChange={this.handleExpanded}\r\n          />\r\n        </Column>\r\n        {columns}\r\n        <Column width={100} sort=\"true\" resizable align=\"center\">\r\n          <HeaderCell>Edit</HeaderCell>\r\n          <Cell>\r\n            {(rowData, rowIndex) => {\r\n              return (\r\n                <Modal\r\n                  trigger={<Button>Edit</Button>}\r\n                  closeIcon\r\n                  closeOnDimmerClick={false}\r\n                >\r\n                  {this.getFormElement(\"update\", formProps, rowData)}\r\n                </Modal>\r\n              );\r\n            }}\r\n          </Cell>\r\n        </Column>\r\n        <Column width={100} sort=\"true\" resizable align=\"center\">\r\n          <HeaderCell>Delete</HeaderCell>\r\n          <DeleteActionCell dataKey={idName} onClick={this.handleDelete} />\r\n        </Column>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\nconst ExpandCell = ({\r\n  rowData,\r\n  dataKey,\r\n  expandedRowKeys,\r\n  onChange,\r\n  ...props\r\n}) => (\r\n  <Cell {...props}>\r\n    <Button\r\n      size=\"xs\"\r\n      onClick={() => {\r\n        onChange(rowData);\r\n      }}\r\n    >\r\n      {expandedRowKeys.some((key) => key === rowData[rowKey]) ? \"-\" : \"+\"}\r\n    </Button>\r\n  </Cell>\r\n);\r\nexport default OrderTable;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport { Checkbox, Dropdown, Modal, Button } from \"semantic-ui-react\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nimport { Column, HeaderCell, Cell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { getList, updateOne, deleteOne, createOne } from \"utils/request\";\r\nimport   EditCell  from \"components/table/components/EditCell\";\r\nimport  EditTable from \"components/table/EditTable\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useState } from \"react\";\r\nimport {dateFormat} from 'utils/timeFormat';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nclass SessionTable extends Component {\r\n  static defaultProps = {\r\n    url: \"/session\",\r\n    idName: \"sessionId\",\r\n    dataToLabel: {\r\n      sessionId: \"ID\",\r\n      cinemaName: \"Cinema\",\r\n      time: \"Time\",\r\n      remainingSeats: \"Remaining Seats\",\r\n      filmName: \"Film\",\r\n      roomName: \"Room\",\r\n      status: \"Status\",\r\n    },\r\n\r\n    listName: \"list\",\r\n    tableHeader: \"Session Manage\",\r\n    // ------------------------\r\n    // Modal Form content ()\r\n    // ------------------------\r\n    modalHeader: \"Add a new session\",\r\n    labelNames: [\r\n      \"Cinema\",\r\n      \"Film\",\r\n      \"Time\",\r\n      \"Actors\",\r\n      \"Rating\",\r\n      \"Introduction\",\r\n\r\n      \"Poster\",\r\n      \"Status\",\r\n    ],\r\n    dataNames: [\r\n      \"name\",\r\n      \"duration\",\r\n      \"director\",\r\n      \"actors\",\r\n      \"rating\",\r\n      \"introduction\",\r\n\r\n      \"poster\",\r\n      \"status\",\r\n    ],\r\n    // descriptor: {\r\n    //   name: [\r\n    //     Rules.required(\"Film name\"),\r\n    //     Rules.isType(Rules.TYPE.string),\r\n    //     Rules.isDuplicate(\"/film/filmName-duplication\", \"name\"),\r\n    //   ],\r\n    // },\r\n  };\r\n  state = {\r\n    items: [],\r\n  };\r\n  componentWillMount() {\r\n    this.createSessionCols();\r\n  }\r\n  /**\r\n   * @param  {int} id : row data id\r\n   * @param  { r } selectedObj\r\n   */\r\n\r\n  onDropdownChange = async (id, selectedObj) => {\r\n    const { url } = this.props;\r\n    const { list } = this.child.state;\r\n    const { idName } = this.props;\r\n    for (let item of list) {\r\n      if (id === item[idName]) {\r\n        item[selectedObj.dropdownIdName] = selectedObj.dropdownItemId;\r\n        await updateOne(url, item);\r\n        this.child.updateTable();\r\n        break;\r\n      }\r\n    }\r\n\r\n    console.log(list);\r\n  };\r\n  onDatePickerChange = async (date, id) => {\r\n    const { url, idName } = this.props;\r\n    const { list } = this.child.state;\r\n    for (let item of list) {\r\n      if (id === item[idName]) {\r\n\r\n        item[\"time\"] =date\r\n        await updateOne(url, item);\r\n        this.child.updateTable();\r\n        break;\r\n      }\r\n    }\r\n\r\n    console.log(list);\r\n  };\r\n  createSessionCols = async () => {\r\n    const { url, listName, dataToLabel, idName } = this.props;\r\n    let list = [];\r\n    await getList(url, listName).then((myList) => {\r\n      list = myList;\r\n    });\r\n    /**  \r\n    \r\n    */\r\n    for (let item of list) {\r\n      item[\"cinemaName\"] = item[\"film\"][\"name\"];\r\n      item[\"filmName\"] = item[\"cinema\"][\"name\"];\r\n      item[\"roomName\"] = item[\"room\"][\"roomName\"];\r\n    }\r\n    console.log(\"--------\");\r\n    console.log(list);\r\n    let items = [],\r\n      count = 0;\r\n\r\n    const dataMapKeys = Object.keys(dataToLabel);\r\n\r\n    for (let key of dataMapKeys) {\r\n      let dropdownInfo = {};\r\n      let dropdownList = [];\r\n      switch (key) {\r\n        case \"cinemaName\":\r\n          await getList(\"/cinema\").then((myList) => {\r\n            dropdownList = myList;\r\n            dropdownInfo[\"tableName\"] = \"cinema\";\r\n            dropdownInfo[\"idName\"] = \"cinemaId\";\r\n            dropdownInfo[\"value\"] = \"name\";\r\n            dropdownInfo[\"url\"] = \"/cinema\";\r\n          });\r\n\r\n          break;\r\n        case \"filmName\":\r\n          await getList(\"/film\").then((myList) => {\r\n            dropdownList = myList;\r\n            dropdownInfo[\"tableName\"] = \"film\";\r\n            dropdownInfo[\"idName\"] = \"filmId\";\r\n            dropdownInfo[\"value\"] = \"name\";\r\n            dropdownInfo[\"url\"] = \"/film\";\r\n          });\r\n          break;\r\n        case \"roomName\":\r\n          await getList(\"/room\").then((myList) => {\r\n            dropdownList = myList;\r\n            dropdownInfo[\"tableName\"] = \"room\";\r\n            dropdownInfo[\"idName\"] = \"roomId\";\r\n            dropdownInfo[\"value\"] = \"roomName\";\r\n            dropdownInfo[\"url\"] = \"/room\";\r\n          });\r\n          break;\r\n        default:\r\n      }\r\n      if (key === \"cinemaName\" || key === \"filmName\" || key === \"roomName\") {\r\n        dropdownInfo[\"list\"] = dropdownList;\r\n        items.push(\r\n          <Column key={count} width={100} sort=\"true\" flexGrow align=\"center\">\r\n            <HeaderCell>{dataToLabel[key]}</HeaderCell>\r\n            <DropdownCell\r\n              idName={idName}\r\n              dataKey={key}\r\n              dropdownInfo={dropdownInfo}\r\n              onChange={this.onDropdownChange}\r\n            />\r\n            {/* onChange */}\r\n          </Column>\r\n        );\r\n        continue;\r\n      } else if (key === \"time\") {\r\n        items.push(\r\n          <Column key={count} width={100} sort=\"true\" resizable align=\"center\">\r\n            <HeaderCell>{dataToLabel[key]}</HeaderCell>\r\n            <DatePickerCell\r\n              idName={idName}\r\n              dataKey={key}\r\n              onChange={this.onDatePickerChange}\r\n            ></DatePickerCell>\r\n          </Column>\r\n        );\r\n      } else {\r\n        items.push(\r\n          <Column key={count} width={100} sort=\"true\" resizable align=\"center\">\r\n            <HeaderCell>{dataToLabel[key]}</HeaderCell>\r\n            <Cell\r\n              idName={idName}\r\n              dataKey={key}\r\n              onChange={this.child.handleChange}\r\n            />\r\n          </Column>\r\n        );\r\n      }\r\n    }\r\n    this.setState({ items });\r\n\r\n    return null;\r\n  };\r\n  render() {\r\n    let { items } = this.state;\r\n\r\n    return (\r\n      <EditTable\r\n        {...this.props}\r\n        tableColumns={items}\r\n        onRef={(ref) => {\r\n          this.child = ref;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst DropdownCell = ({\r\n  rowData,\r\n  dataKey,\r\n  onChange,\r\n  idName,\r\n  dropdownInfo,\r\n  onOpen,\r\n  onClose,\r\n  ...props\r\n}) => {\r\n  // must deliver  dataKey, IdKey, onChange like IdKey=\"adminId\" onChange={this.handleChange} dataKey=\"password\"\r\n  let options = [];\r\n  for (let item of dropdownInfo[\"list\"]) {\r\n    let opt = {\r\n      key: item[dropdownInfo[\"idName\"]],\r\n      text: item[dropdownInfo[\"value\"]],\r\n      value: item[dropdownInfo[\"value\"]],\r\n    };\r\n    options.push(opt);\r\n  }\r\n\r\n  return (\r\n    <Cell {...props}>\r\n      <Modal\r\n        trigger={\r\n          <Button\r\n            content={rowData[dropdownInfo[\"tableName\"]][dropdownInfo[\"value\"]]}\r\n          />\r\n        }\r\n      >\r\n        <Dropdown\r\n          fluid\r\n          selection\r\n          search\r\n          options={options}\r\n          onChange={(e, data) => {\r\n            let dropdownItemId = -1;\r\n            for (let opt of options) {\r\n              if (opt[\"value\"] === data.value) {\r\n                dropdownItemId = opt[\"key\"];\r\n                break;\r\n              }\r\n            }\r\n            const obj = {\r\n              dropdownItemId: dropdownItemId,\r\n              dropdownIdName: dropdownInfo[\"idName\"],\r\n            };\r\n            onChange(rowData[idName], obj);\r\n          }}\r\n          placeholder={\r\n            rowData[dropdownInfo[\"tableName\"]][dropdownInfo[\"value\"]]\r\n          }\r\n        />\r\n      </Modal>\r\n    </Cell>\r\n  );\r\n};\r\n\r\nconst DatePickerCell = ({ rowData, dataKey, onChange, idName, ...props }) => {\r\n  const [date, setNewDate] = useState();\r\n  // must deliver  dataKey, IdKey, onChange like IdKey=\"adminId\" onChange={this.handleChange} dataKey=\"password\"\r\n\r\n  return (\r\n    <Cell {...props}>\r\n      <Modal trigger={<Button content={rowData[dataKey]} />}>\r\n        <MyDatePicker\r\n          date={rowData[dataKey]}\r\n          itemId={rowData[idName]}\r\n          onChange={onChange}\r\n        />\r\n      </Modal>\r\n    </Cell>\r\n  );\r\n};\r\n\r\nexport default SessionTable;\r\nconst MyDatePicker = ({ date, itemId, onChange, ...props }) => {\r\n  const [startDate, setStartDate] = useState(new Date(date));\r\n\r\n  return (\r\n    <DatePicker\r\n      selected={startDate}\r\n      onChange={(date) => {\r\n        setStartDate(date);\r\n        onChange(dateFormat(date), itemId);\r\n      }}\r\n      showTimeSelect\r\n      timeFormat=\"HH:mm\"\r\n      timeIntervals={15}\r\n      timeCaption=\"time\"\r\n      dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n    />\r\n  );\r\n};\r\n\r\n","import { FormFieldInput } from \"components/base/form/FormFieldInput\";\r\nimport React, { useState } from \"react\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Checkbox, Form, Header, Segment } from \"semantic-ui-react\";\r\nimport Api from \"utils/api\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nimport BaseForm from \"components/base/form/BaseTableForm\";\r\nconst { User } = Api;\r\nconst api = User;\r\nexport default ({ rowData, type, formProps }) => {\r\n  const FormField = Form.Field;\r\n  const {\r\n    dispatch,\r\n    updateFormMsg,\r\n    fieldValidate,\r\n    canDispatch,\r\n    getDescriptors,\r\n    createStateFromDataProps,\r\n  } = formProps;\r\n  let header = {\r\n    update: \"Edit a user\",\r\n    create: \"Add a user\",\r\n  };\r\n  header = header[type];\r\n  const dataProps = {\r\n    username: {\r\n      descriptor: {\r\n        username: [Rules.required(\"username\")],\r\n      },\r\n      dataKey: \"username\",\r\n      title: \"Username\",\r\n      placeholder: \"Please enter username\",\r\n    },\r\n    password: {\r\n      descriptor: {\r\n        password: [Rules.required(\"usepasswordrname\")],\r\n      },\r\n      dataKey: \"password\",\r\n      title: \"Password\",\r\n      placeholder: \"Please enter password\",\r\n    },\r\n    email: {\r\n      descriptor: {\r\n        email: [Rules.required(\"email\")],\r\n      },\r\n      dataKey: \"email\",\r\n      title: \"Email\",\r\n      placeholder: \"Please enter your email\",\r\n    },\r\n    tel: {\r\n      descriptor: {\r\n        tel: [Rules.required(\"tel\")],\r\n      },\r\n      dataKey: \"tel\",\r\n      title: \"Phone number\",\r\n      placeholder: \"Please enter your phone number\",\r\n    },\r\n    isStudent: {\r\n      dataKey: \"isStudent\",\r\n      title: \"Is a student\",\r\n      placeholder: \"Are you a student\",\r\n    },\r\n  };\r\n  const [state, setState] = useState(() => {\r\n    const rowDataExisted = rowData !== undefined;\r\n    const obj = createStateFromDataProps(rowDataExisted, dataProps, rowData);\r\n    return {\r\n      ...obj,\r\n      userId: rowDataExisted ? rowData[\"userId\"] : \"\",\r\n      errMsg: {},\r\n    };\r\n  });\r\n  const descriptors = getDescriptors(dataProps);\r\n  formProps = {\r\n    ...formProps,\r\n    state,\r\n    setState,\r\n    descriptors,\r\n    header,\r\n    dataProps,\r\n    type,\r\n    api,\r\n  };\r\n  const getUsernameField = (key) => {\r\n    const dataName = \"username\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getPasswordField = (key) => {\r\n    const dataName = \"password\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getEmailField = (key) => {\r\n    const dataName = \"email\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getTelField = (key) => {\r\n    const dataName = \"tel\";\r\n    const fieldProps = {\r\n      ...dataProps[dataName],\r\n      initVal: state[dataName],\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getIsStudentField = (key) => {\r\n    const { dataKey, title, placeholder } = dataProps[\"isStudent\"];\r\n    const initVal = state.isStudent === 0 ? false : true;\r\n    const onIsStudentChange = (e, val) => {\r\n      const status = val[\"checked\"];\r\n      console.log(val[\"checked\"]);\r\n      setState({\r\n        ...state,\r\n        isStudent: status === true ? 1 : 0,\r\n      });\r\n    };\r\n    return (\r\n      <FormField\r\n        key={key}\r\n        defaultChecked={initVal}\r\n        control={Checkbox}\r\n        label={title}\r\n        onChange={onIsStudentChange}\r\n        placeholder={placeholder}\r\n        name={dataKey}\r\n      />\r\n    );\r\n  };\r\n\r\n  // NOTE:  写成组件形式会导致重复render->失焦\r\n  const getForms = () => {\r\n    let index = 0;\r\n    let formFields = [];\r\n    formFields.push(getUsernameField(index++));\r\n    formFields.push(getPasswordField(index++));\r\n    formFields.push(getEmailField(index++));\r\n    formFields.push(getTelField(index++));\r\n    formFields.push(getIsStudentField(index++));\r\n    return formFields;\r\n  };\r\n  const formFields = getForms();\r\n  formProps = {\r\n    ...formProps,\r\n    formFields,\r\n  };\r\n  return <BaseForm formProps={formProps} />;\r\n};\r\n","import UserForm from \"components/admin/user/UserForm\";\r\nimport EditTable from \"components/table/EditTable\";\r\nimport React, { Component } from \"react\";\r\nimport { Cell, Column, HeaderCell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nclass UserTable extends Component {\r\n  static defaultProps = {\r\n    tableHeaders: [\r\n      {\r\n        title: \"ID\",\r\n        dataKey: \"userId\",\r\n      },\r\n      {\r\n        title: \"Username\",\r\n        dataKey: \"username\",\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        dataKey: \"email\",\r\n      },\r\n      {\r\n        title: \"Password\",\r\n        dataKey: \"password\",\r\n      },\r\n      {\r\n        title: \"Phone Number\",\r\n        dataKey: \"tel\",\r\n      },\r\n      {\r\n        title: \"Student\",\r\n        dataKey: \"isStudent\",\r\n      },\r\n    ],\r\n    url: \"/user\",\r\n    idName: \"userId\",\r\n    tableTitle: \"User Manage\",\r\n  };\r\n  state = {\r\n    columns: [],\r\n    isStudent: null,\r\n  };\r\n  componentWillMount() {\r\n    this.createUserCols();\r\n  }\r\n\r\n  // NOTE: async function return a Promise!!!\r\n  createUserCols = async () => {\r\n    const { tableHeaders } = this.props;\r\n    let columns = [],\r\n      index = 0;\r\n    for (const header of tableHeaders) {\r\n      if (header.dataKey === \"isStudent\") {\r\n        continue;\r\n      }\r\n      columns.push(\r\n        <Column key={index++} width={200} resizable align=\"center\">\r\n          <HeaderCell>{header[\"title\"]}</HeaderCell>\r\n          <Cell dataKey={header[\"dataKey\"]} />\r\n        </Column>\r\n      );\r\n    }\r\n    columns.push(\r\n      <Column key={index++} width={200} resizable align=\"center\">\r\n        <HeaderCell>{\"isStudent\"}</HeaderCell>\r\n        <Cell>\r\n          {(rowData, rowIndex) => {\r\n            return rowData[\"isStudent\"] !== 0 ? \"True\" : \"False\";\r\n          }}\r\n        </Cell>\r\n      </Column>\r\n    );\r\n    this.setState({ columns });\r\n  };\r\n  getFormElement = (type, formProps, rowData) => {\r\n    return <UserForm rowData={rowData} type={type} formProps={formProps} />;\r\n  };\r\n  render() {\r\n    let { columns } = this.state;\r\n    return (\r\n      <EditTable\r\n        {...this.props}\r\n        tableColumns={columns}\r\n        getFormElement={this.getFormElement}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserTable;\r\n","import { FormFieldInput } from \"components/base/form/FormFieldInput\";\r\nimport React, { useState } from \"react\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nimport { Button, Form, Segment, Header, Modal } from \"semantic-ui-react\";\r\nimport Api from \"utils/api\";\r\nimport { Rules } from \"utils/validatorRules\";\r\nimport BaseForm from \"components/base/form/BaseTableForm\";\r\nconst { Cinema } = Api;\r\nconst api = Cinema;\r\nexport const CinemaForm = ({ rowData, type, formProps }) => {\r\n  let header = {\r\n    update: \"Edit a cinema\",\r\n    create: \"Add a cinema\",\r\n  };\r\n  const dataProps = {\r\n    name: {\r\n      descriptor: {\r\n        name: [Rules.required(\"Cinema\")],\r\n      },\r\n      dataKey: \"name\",\r\n      title: \"Cinema\",\r\n      placeholder: \"Please enter a cinema name\",\r\n    },\r\n    tel: {\r\n      descriptor: {\r\n        tel: [Rules.required(\"cinema contact\")],\r\n      },\r\n      dataKey: \"tel\",\r\n      title: \"Telephone number\",\r\n      placeholder: \"Please enter the cinema contact\",\r\n    },\r\n    location: {\r\n      descriptor: {\r\n        location: [Rules.required(\"location\")],\r\n      },\r\n      dataKey: \"location\",\r\n      title: \"Location\",\r\n      placeholder: \"Please enter the location\",\r\n    },\r\n  };\r\n  header = header[type];\r\n  const FormField = Form.Field;\r\n  const {\r\n    dispatch,\r\n    updateFormMsg,\r\n    fieldValidate,\r\n    canDispatch,\r\n    getDescriptors,\r\n    createStateFromDataProps,\r\n    clearInputVal,\r\n  } = formProps;\r\n  const [state, setState] = useState(() => {\r\n    const rowDataExisted = rowData !== undefined;\r\n    const obj = createStateFromDataProps(rowDataExisted, dataProps, rowData);\r\n    return {\r\n      ...obj,\r\n      cinemaId: rowDataExisted ? rowData[\"cinemaId\"] : \"\",\r\n      errMsg: {},\r\n    };\r\n  });\r\n\r\n  const descriptors = getDescriptors(dataProps);\r\n  formProps = {\r\n    ...formProps,\r\n    state,\r\n    setState,\r\n    descriptors,\r\n    header,\r\n    dataProps,\r\n    type,\r\n    api,\r\n  };\r\n  const getNameField = (key) => {\r\n    const fieldProps = {\r\n      ...dataProps[\"name\"],\r\n      initVal: state.name,\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getTelField = (key) => {\r\n    const fieldProps = {\r\n      ...dataProps[\"tel\"],\r\n      initVal: state.tel,\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n  const getLocationField = (key) => {\r\n    const fieldProps = {\r\n      ...dataProps[\"location\"],\r\n      initVal: state.location,\r\n    };\r\n    formProps = { ...formProps, ...fieldProps };\r\n    return <FormFieldInput key={key} formProps={formProps} />;\r\n  };\r\n\r\n  // NOTE:  写成组件形式会导致重复render->失焦\r\n  const getForms = () => {\r\n    let formFields = [];\r\n    let index = 0;\r\n    formFields.push(getNameField(index++));\r\n    formFields.push(getLocationField(index++));\r\n    formFields.push(getTelField(index++));\r\n    return formFields;\r\n  };\r\n  const formFields = getForms();\r\n  formProps = {\r\n    ...formProps,\r\n    formFields,\r\n  };\r\n  return (\r\n    <BaseForm formProps={formProps} />\r\n  );\r\n};\r\n","\r\nimport { CinemaForm } from \"components/admin/cinema/CinemaForm\";\r\nimport EditTable from \"components/table/EditTable\";\r\nimport React, { Component } from \"react\";\r\nimport { Cell, Column, HeaderCell } from \"rsuite-table\";\r\nimport \"rsuite-table/dist/css/rsuite-table.css\";\r\nclass CinemaTable extends Component {\r\n  static defaultProps = {\r\n    tableHeaders: [\r\n      {\r\n        title: \"ID\",\r\n        dataKey: \"cinemaId\",\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        dataKey: \"name\",\r\n      },\r\n      {\r\n        title: \"Location\",\r\n        dataKey: \"location\",\r\n      },\r\n      {\r\n        title: \"Tel\",\r\n        dataKey: \"tel\",\r\n      },\r\n    \r\n    ],\r\n    url: \"/cinema\",\r\n    idName: \"cinemaId\",\r\n    tableTitle: \"Cinema Manage\",\r\n  };\r\n  state = {\r\n    columns: [],\r\n\r\n  };\r\n  componentWillMount() {\r\n    this.createCinemaCols();\r\n  }\r\n  // NOTE: async function return a Promise!!!\r\n  createCinemaCols = async () => {\r\n    const { tableHeaders } = this.props;\r\n    let columns = [];\r\n    let index=0\r\n    for (const header of tableHeaders) {\r\n      columns.push(\r\n        <Column key={index++} width={200} resizable align=\"center\">\r\n          <HeaderCell>{header[\"title\"]}</HeaderCell>\r\n          <Cell dataKey={header[\"dataKey\"]} />\r\n        </Column>\r\n      );\r\n    }\r\n    this.setState({ columns });\r\n  };\r\n  getFormElement = (type, formProps, rowData) => {\r\n\r\n    return <CinemaForm rowData={rowData} type={type} formProps={formProps} />;\r\n  };\r\n  render() {\r\n    let { columns } = this.state;\r\n    console.log(columns);\r\n    return (\r\n      <EditTable\r\n        {...this.props}\r\n        tableColumns={columns}\r\n        getFormElement={this.getFormElement}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CinemaTable;","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport { Grid, Menu, Sidebar, Segment, Table } from \"semantic-ui-react\";\r\n\r\n\r\n\r\nclass CommentTable extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentTable;","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { Link, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport { Grid, Menu, Sidebar, Segment, Table, Button } from \"semantic-ui-react\";\r\nimport AdminSidebar from \"./adminSidebar\";\r\nimport AdminTable from \"components/admin/admin/adminTable\";\r\nimport FilmTable from \"../film/filmTable\";\r\nimport OrderTable from \"../order/orderTable\";\r\nimport SessionTable from \"../tables/sessionTable\";\r\nimport UserTable from \"../user/userTable\";\r\nimport CinemaTable from \"../cinema/cinemaTable\";\r\nimport CommentTable from \"components/admin/tables/commentTable.js\";\r\nexport default class AdminIndex extends Component {\r\n  // carefully check Menu.Item and Menu.item\r\n  state = {\r\n    visible: false,\r\n  };\r\n  handleClick() {\r\n    let { visible } = this.state;\r\n    visible = !visible;\r\n    this.setState({ visible });\r\n  }\r\n  render() {\r\n    // NOTE the best way to write css in react\r\n    const { visible } = this.state;\r\n\r\n    const minHeight = document.body.clientHeight + \"px\";\r\n    let windowHeight = { minHeight: minHeight };\r\n\r\n\r\n    return (\r\n      <Sidebar.Pushable>\r\n        <Grid columns={1}>\r\n          <Grid.Row stretched>\r\n            <Grid.Column style={windowHeight}>\r\n              <AdminSidebar visible={visible} />\r\n              <Sidebar.Pusher>\r\n                <Menu>\r\n                  <Menu.Item\r\n                    as={Button}\r\n                    icon=\"sidebar\"\r\n                    onClick={this.handleClick.bind(this)}\r\n                  />\r\n                </Menu>\r\n\r\n                <Switch>\r\n                  <Route path=\"/admin/admin-manage\"  component={AdminTable} />\r\n                  <Route path=\"/admin/order-manage\" component={OrderTable} />\r\n                  <Route\r\n                    path=\"/admin/session-manage\"\r\n                    component={SessionTable}\r\n                  />\r\n                  <Route path=\"/admin/film-manage\" component={FilmTable} />\r\n                  <Route path=\"/admin/cinema-manage\" component={CinemaTable} />\r\n                  <Route\r\n                    path=\"/admin/comment-manage\"\r\n                    component={CommentTable}\r\n                  />\r\n                  <Route path=\"/admin/user-manage\" component={UserTable} />\r\n                </Switch>\r\n              </Sidebar.Pusher>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Sidebar.Pushable>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport Index from \"./components/index/index\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Register from \"./components/user/register/register\";\nimport PostList from \"./test/postList\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducers from \"./redux/rootReducer\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport AdminIndex from \"./components/admin/adminIndex/adminIndex\";\n\nlet store = createStore(rootReducers);\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <Switch>\n        <Route path=\"/admin\" component={AdminIndex} />\n        <Route path=\"/index\" component={Index} />\n        <Route path=\"/\" component={Index} />\n      </Switch>\n    </Provider>\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/poster.e21d4c71.jpg\";"],"sourceRoot":""}